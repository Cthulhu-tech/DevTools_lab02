### YamlMime:XRefMap
sorted: true
references:
- uid: Wintellect.PowerCollections
  name: Wintellect.PowerCollections
  href: api/Wintellect.PowerCollections.html
  commentId: N:Wintellect.PowerCollections
  fullName: Wintellect.PowerCollections
  nameWithType: Wintellect.PowerCollections
- uid: Wintellect.PowerCollections.Algorithms
  name: Algorithms
  href: api/Wintellect.PowerCollections.Algorithms.html
  commentId: T:Wintellect.PowerCollections.Algorithms
  fullName: Wintellect.PowerCollections.Algorithms
  nameWithType: Algorithms
- uid: Wintellect.PowerCollections.Algorithms.BinarySearch*
  name: BinarySearch
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_BinarySearch_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.BinarySearch
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.BinarySearch
  nameWithType: Algorithms.BinarySearch
- uid: Wintellect.PowerCollections.Algorithms.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IComparer{``0},System.Int32@)
  name: BinarySearch<T>(IList<T>, T, IComparer<T>, out Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_BinarySearch__1_System_Collections_Generic_IList___0____0_System_Collections_Generic_IComparer___0__System_Int32__
  commentId: M:Wintellect.PowerCollections.Algorithms.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IComparer{``0},System.Int32@)
  name.vb: BinarySearch(Of T)(IList(Of T), T, IComparer(Of T), ByRef Int32)
  fullName: Wintellect.PowerCollections.Algorithms.BinarySearch<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IComparer<T>, out System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.BinarySearch(Of T)(System.Collections.Generic.IList(Of T), T, System.Collections.Generic.IComparer(Of T), ByRef System.Int32)
  nameWithType: Algorithms.BinarySearch<T>(IList<T>, T, IComparer<T>, out Int32)
  nameWithType.vb: Algorithms.BinarySearch(Of T)(IList(Of T), T, IComparer(Of T), ByRef Int32)
- uid: Wintellect.PowerCollections.Algorithms.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Comparison{``0},System.Int32@)
  name: BinarySearch<T>(IList<T>, T, Comparison<T>, out Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_BinarySearch__1_System_Collections_Generic_IList___0____0_System_Comparison___0__System_Int32__
  commentId: M:Wintellect.PowerCollections.Algorithms.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Comparison{``0},System.Int32@)
  name.vb: BinarySearch(Of T)(IList(Of T), T, Comparison(Of T), ByRef Int32)
  fullName: Wintellect.PowerCollections.Algorithms.BinarySearch<T>(System.Collections.Generic.IList<T>, T, System.Comparison<T>, out System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.BinarySearch(Of T)(System.Collections.Generic.IList(Of T), T, System.Comparison(Of T), ByRef System.Int32)
  nameWithType: Algorithms.BinarySearch<T>(IList<T>, T, Comparison<T>, out Int32)
  nameWithType.vb: Algorithms.BinarySearch(Of T)(IList(Of T), T, Comparison(Of T), ByRef Int32)
- uid: Wintellect.PowerCollections.Algorithms.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Int32@)
  name: BinarySearch<T>(IList<T>, T, out Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_BinarySearch__1_System_Collections_Generic_IList___0____0_System_Int32__
  commentId: M:Wintellect.PowerCollections.Algorithms.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Int32@)
  name.vb: BinarySearch(Of T)(IList(Of T), T, ByRef Int32)
  fullName: Wintellect.PowerCollections.Algorithms.BinarySearch<T>(System.Collections.Generic.IList<T>, T, out System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.BinarySearch(Of T)(System.Collections.Generic.IList(Of T), T, ByRef System.Int32)
  nameWithType: Algorithms.BinarySearch<T>(IList<T>, T, out Int32)
  nameWithType.vb: Algorithms.BinarySearch(Of T)(IList(Of T), T, ByRef Int32)
- uid: Wintellect.PowerCollections.Algorithms.CartesianProduct*
  name: CartesianProduct
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_CartesianProduct_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.CartesianProduct
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.CartesianProduct
  nameWithType: Algorithms.CartesianProduct
- uid: Wintellect.PowerCollections.Algorithms.CartesianProduct``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})
  name: CartesianProduct<TFirst, TSecond>(IEnumerable<TFirst>, IEnumerable<TSecond>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_CartesianProduct__2_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___1__
  commentId: M:Wintellect.PowerCollections.Algorithms.CartesianProduct``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})
  name.vb: CartesianProduct(Of TFirst, TSecond)(IEnumerable(Of TFirst), IEnumerable(Of TSecond))
  fullName: Wintellect.PowerCollections.Algorithms.CartesianProduct<TFirst, TSecond>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.CartesianProduct(Of TFirst, TSecond)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond))
  nameWithType: Algorithms.CartesianProduct<TFirst, TSecond>(IEnumerable<TFirst>, IEnumerable<TSecond>)
  nameWithType.vb: Algorithms.CartesianProduct(Of TFirst, TSecond)(IEnumerable(Of TFirst), IEnumerable(Of TSecond))
- uid: Wintellect.PowerCollections.Algorithms.Concatenate*
  name: Concatenate
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Concatenate_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Concatenate
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Concatenate
  nameWithType: Algorithms.Concatenate
- uid: Wintellect.PowerCollections.Algorithms.Concatenate``1(System.Collections.Generic.IEnumerable{``0}[])
  name: Concatenate<T>(IEnumerable<T>[])
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Concatenate__1_System_Collections_Generic_IEnumerable___0____
  commentId: M:Wintellect.PowerCollections.Algorithms.Concatenate``1(System.Collections.Generic.IEnumerable{``0}[])
  name.vb: Concatenate(Of T)(IEnumerable(Of T)())
  fullName: Wintellect.PowerCollections.Algorithms.Concatenate<T>(System.Collections.Generic.IEnumerable<T>[])
  fullName.vb: Wintellect.PowerCollections.Algorithms.Concatenate(Of T)(System.Collections.Generic.IEnumerable(Of T)())
  nameWithType: Algorithms.Concatenate<T>(IEnumerable<T>[])
  nameWithType.vb: Algorithms.Concatenate(Of T)(IEnumerable(Of T)())
- uid: Wintellect.PowerCollections.Algorithms.Convert*
  name: Convert
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Convert_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Convert
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Convert
  nameWithType: Algorithms.Convert
- uid: Wintellect.PowerCollections.Algorithms.Convert``2(System.Collections.Generic.IEnumerable{``0},System.Converter{``0,``1})
  name: Convert<TSource, TDest>(IEnumerable<TSource>, Converter<TSource, TDest>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Convert__2_System_Collections_Generic_IEnumerable___0__System_Converter___0___1__
  commentId: M:Wintellect.PowerCollections.Algorithms.Convert``2(System.Collections.Generic.IEnumerable{``0},System.Converter{``0,``1})
  name.vb: Convert(Of TSource, TDest)(IEnumerable(Of TSource), Converter(Of TSource, TDest))
  fullName: Wintellect.PowerCollections.Algorithms.Convert<TSource, TDest>(System.Collections.Generic.IEnumerable<TSource>, System.Converter<TSource, TDest>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Convert(Of TSource, TDest)(System.Collections.Generic.IEnumerable(Of TSource), System.Converter(Of TSource, TDest))
  nameWithType: Algorithms.Convert<TSource, TDest>(IEnumerable<TSource>, Converter<TSource, TDest>)
  nameWithType.vb: Algorithms.Convert(Of TSource, TDest)(IEnumerable(Of TSource), Converter(Of TSource, TDest))
- uid: Wintellect.PowerCollections.Algorithms.Copy*
  name: Copy
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Copy_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Copy
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Copy
  nameWithType: Algorithms.Copy
- uid: Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IEnumerable{``0},``0[],System.Int32)
  name: Copy<T>(IEnumerable<T>, T[], Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Copy__1_System_Collections_Generic_IEnumerable___0____0___System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IEnumerable{``0},``0[],System.Int32)
  name.vb: Copy(Of T)(IEnumerable(Of T), T(), Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Copy<T>(System.Collections.Generic.IEnumerable<T>, T[], System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Copy(Of T)(System.Collections.Generic.IEnumerable(Of T), T(), System.Int32)
  nameWithType: Algorithms.Copy<T>(IEnumerable<T>, T[], Int32)
  nameWithType.vb: Algorithms.Copy(Of T)(IEnumerable(Of T), T(), Int32)
- uid: Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IEnumerable{``0},``0[],System.Int32,System.Int32)
  name: Copy<T>(IEnumerable<T>, T[], Int32, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Copy__1_System_Collections_Generic_IEnumerable___0____0___System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IEnumerable{``0},``0[],System.Int32,System.Int32)
  name.vb: Copy(Of T)(IEnumerable(Of T), T(), Int32, Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Copy<T>(System.Collections.Generic.IEnumerable<T>, T[], System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Copy(Of T)(System.Collections.Generic.IEnumerable(Of T), T(), System.Int32, System.Int32)
  nameWithType: Algorithms.Copy<T>(IEnumerable<T>, T[], Int32, Int32)
  nameWithType.vb: Algorithms.Copy(Of T)(IEnumerable(Of T), T(), Int32, Int32)
- uid: Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IList{``0},System.Int32)
  name: Copy<T>(IEnumerable<T>, IList<T>, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Copy__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IList___0__System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IList{``0},System.Int32)
  name.vb: Copy(Of T)(IEnumerable(Of T), IList(Of T), Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Copy<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Copy(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IList(Of T), System.Int32)
  nameWithType: Algorithms.Copy<T>(IEnumerable<T>, IList<T>, Int32)
  nameWithType.vb: Algorithms.Copy(Of T)(IEnumerable(Of T), IList(Of T), Int32)
- uid: Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  name: Copy<T>(IEnumerable<T>, IList<T>, Int32, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Copy__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IList___0__System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  name.vb: Copy(Of T)(IEnumerable(Of T), IList(Of T), Int32, Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Copy<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Copy(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  nameWithType: Algorithms.Copy<T>(IEnumerable<T>, IList<T>, Int32, Int32)
  nameWithType.vb: Algorithms.Copy(Of T)(IEnumerable(Of T), IList(Of T), Int32, Int32)
- uid: Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IList{``0},System.Int32,``0[],System.Int32,System.Int32)
  name: Copy<T>(IList<T>, Int32, T[], Int32, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Copy__1_System_Collections_Generic_IList___0__System_Int32___0___System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IList{``0},System.Int32,``0[],System.Int32,System.Int32)
  name.vb: Copy(Of T)(IList(Of T), Int32, T(), Int32, Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Copy<T>(System.Collections.Generic.IList<T>, System.Int32, T[], System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Copy(Of T)(System.Collections.Generic.IList(Of T), System.Int32, T(), System.Int32, System.Int32)
  nameWithType: Algorithms.Copy<T>(IList<T>, Int32, T[], Int32, Int32)
  nameWithType.vb: Algorithms.Copy(Of T)(IList(Of T), Int32, T(), Int32, Int32)
- uid: Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  name: Copy<T>(IList<T>, Int32, IList<T>, Int32, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Copy__1_System_Collections_Generic_IList___0__System_Int32_System_Collections_Generic_IList___0__System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Copy``1(System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  name.vb: Copy(Of T)(IList(Of T), Int32, IList(Of T), Int32, Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Copy<T>(System.Collections.Generic.IList<T>, System.Int32, System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Copy(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  nameWithType: Algorithms.Copy<T>(IList<T>, Int32, IList<T>, Int32, Int32)
  nameWithType.vb: Algorithms.Copy(Of T)(IList(Of T), Int32, IList(Of T), Int32, Int32)
- uid: Wintellect.PowerCollections.Algorithms.Count*
  name: Count
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Count_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Count
  nameWithType: Algorithms.Count
- uid: Wintellect.PowerCollections.Algorithms.Count``1(System.Collections.Generic.IEnumerable{``0})
  name: Count<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Count__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Count``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: Count(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Count<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Count(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.Count<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.Count(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.CountEqual*
  name: CountEqual
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_CountEqual_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.CountEqual
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.CountEqual
  nameWithType: Algorithms.CountEqual
- uid: Wintellect.PowerCollections.Algorithms.CountEqual``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: CountEqual<T>(IEnumerable<T>, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_CountEqual__1_System_Collections_Generic_IEnumerable___0____0_
  commentId: M:Wintellect.PowerCollections.Algorithms.CountEqual``1(System.Collections.Generic.IEnumerable{``0},``0)
  name.vb: CountEqual(Of T)(IEnumerable(Of T), T)
  fullName: Wintellect.PowerCollections.Algorithms.CountEqual<T>(System.Collections.Generic.IEnumerable<T>, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.CountEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), T)
  nameWithType: Algorithms.CountEqual<T>(IEnumerable<T>, T)
  nameWithType.vb: Algorithms.CountEqual(Of T)(IEnumerable(Of T), T)
- uid: Wintellect.PowerCollections.Algorithms.CountEqual``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: CountEqual<T>(IEnumerable<T>, T, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_CountEqual__1_System_Collections_Generic_IEnumerable___0____0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.CountEqual``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: CountEqual(Of T)(IEnumerable(Of T), T, IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.CountEqual<T>(System.Collections.Generic.IEnumerable<T>, T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.CountEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), T, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.CountEqual<T>(IEnumerable<T>, T, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.CountEqual(Of T)(IEnumerable(Of T), T, IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.CountWhere*
  name: CountWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_CountWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.CountWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.CountWhere
  nameWithType: Algorithms.CountWhere
- uid: Wintellect.PowerCollections.Algorithms.CountWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name: CountWhere<T>(IEnumerable<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_CountWhere__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.CountWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name.vb: CountWhere(Of T)(IEnumerable(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.CountWhere<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.CountWhere(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.CountWhere<T>(IEnumerable<T>, Predicate<T>)
  nameWithType.vb: Algorithms.CountWhere(Of T)(IEnumerable(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.DisjointSets*
  name: DisjointSets
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_DisjointSets_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.DisjointSets
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.DisjointSets
  nameWithType: Algorithms.DisjointSets
- uid: Wintellect.PowerCollections.Algorithms.DisjointSets``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: DisjointSets<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_DisjointSets__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.DisjointSets``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: DisjointSets(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.DisjointSets<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.DisjointSets(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.DisjointSets<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.DisjointSets(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.DisjointSets``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: DisjointSets<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_DisjointSets__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.DisjointSets``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: DisjointSets(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.DisjointSets<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.DisjointSets(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.DisjointSets<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.DisjointSets(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.EqualCollections*
  name: EqualCollections
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_EqualCollections_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.EqualCollections
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.EqualCollections
  nameWithType: Algorithms.EqualCollections
- uid: Wintellect.PowerCollections.Algorithms.EqualCollections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: EqualCollections<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_EqualCollections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.EqualCollections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: EqualCollections(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.EqualCollections<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.EqualCollections(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.EqualCollections<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.EqualCollections(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.EqualCollections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: EqualCollections<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_EqualCollections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.EqualCollections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: EqualCollections(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.EqualCollections<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.EqualCollections(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.EqualCollections<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.EqualCollections(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.EqualCollections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name: EqualCollections<T>(IEnumerable<T>, IEnumerable<T>, BinaryPredicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_EqualCollections__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__Wintellect_PowerCollections_BinaryPredicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.EqualCollections``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name.vb: EqualCollections(Of T)(IEnumerable(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.EqualCollections<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, Wintellect.PowerCollections.BinaryPredicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.EqualCollections(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), Wintellect.PowerCollections.BinaryPredicate(Of T))
  nameWithType: Algorithms.EqualCollections<T>(IEnumerable<T>, IEnumerable<T>, BinaryPredicate<T>)
  nameWithType.vb: Algorithms.EqualCollections(Of T)(IEnumerable(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.EqualSets*
  name: EqualSets
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_EqualSets_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.EqualSets
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.EqualSets
  nameWithType: Algorithms.EqualSets
- uid: Wintellect.PowerCollections.Algorithms.EqualSets``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: EqualSets<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_EqualSets__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.EqualSets``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: EqualSets(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.EqualSets<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.EqualSets(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.EqualSets<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.EqualSets(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.EqualSets``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: EqualSets<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_EqualSets__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.EqualSets``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: EqualSets(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.EqualSets<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.EqualSets(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.EqualSets<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.EqualSets(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Exists*
  name: Exists
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Exists_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Exists
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Exists
  nameWithType: Algorithms.Exists
- uid: Wintellect.PowerCollections.Algorithms.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name: Exists<T>(IEnumerable<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Exists__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name.vb: Exists(Of T)(IEnumerable(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Exists<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Exists(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.Exists<T>(IEnumerable<T>, Predicate<T>)
  nameWithType.vb: Algorithms.Exists(Of T)(IEnumerable(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Fill*
  name: Fill
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Fill_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Fill
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Fill
  nameWithType: Algorithms.Fill
- uid: Wintellect.PowerCollections.Algorithms.Fill``1(``0[],``0)
  name: Fill<T>(T[], T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Fill__1___0_____0_
  commentId: M:Wintellect.PowerCollections.Algorithms.Fill``1(``0[],``0)
  name.vb: Fill(Of T)(T(), T)
  fullName: Wintellect.PowerCollections.Algorithms.Fill<T>(T[], T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Fill(Of T)(T(), T)
  nameWithType: Algorithms.Fill<T>(T[], T)
  nameWithType.vb: Algorithms.Fill(Of T)(T(), T)
- uid: Wintellect.PowerCollections.Algorithms.Fill``1(System.Collections.Generic.IList{``0},``0)
  name: Fill<T>(IList<T>, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Fill__1_System_Collections_Generic_IList___0____0_
  commentId: M:Wintellect.PowerCollections.Algorithms.Fill``1(System.Collections.Generic.IList{``0},``0)
  name.vb: Fill(Of T)(IList(Of T), T)
  fullName: Wintellect.PowerCollections.Algorithms.Fill<T>(System.Collections.Generic.IList<T>, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Fill(Of T)(System.Collections.Generic.IList(Of T), T)
  nameWithType: Algorithms.Fill<T>(IList<T>, T)
  nameWithType.vb: Algorithms.Fill(Of T)(IList(Of T), T)
- uid: Wintellect.PowerCollections.Algorithms.FillRange*
  name: FillRange
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FillRange_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FillRange
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FillRange
  nameWithType: Algorithms.FillRange
- uid: Wintellect.PowerCollections.Algorithms.FillRange``1(``0[],System.Int32,System.Int32,``0)
  name: FillRange<T>(T[], Int32, Int32, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FillRange__1___0___System_Int32_System_Int32___0_
  commentId: M:Wintellect.PowerCollections.Algorithms.FillRange``1(``0[],System.Int32,System.Int32,``0)
  name.vb: FillRange(Of T)(T(), Int32, Int32, T)
  fullName: Wintellect.PowerCollections.Algorithms.FillRange<T>(T[], System.Int32, System.Int32, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FillRange(Of T)(T(), System.Int32, System.Int32, T)
  nameWithType: Algorithms.FillRange<T>(T[], Int32, Int32, T)
  nameWithType.vb: Algorithms.FillRange(Of T)(T(), Int32, Int32, T)
- uid: Wintellect.PowerCollections.Algorithms.FillRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0)
  name: FillRange<T>(IList<T>, Int32, Int32, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FillRange__1_System_Collections_Generic_IList___0__System_Int32_System_Int32___0_
  commentId: M:Wintellect.PowerCollections.Algorithms.FillRange``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0)
  name.vb: FillRange(Of T)(IList(Of T), Int32, Int32, T)
  fullName: Wintellect.PowerCollections.Algorithms.FillRange<T>(System.Collections.Generic.IList<T>, System.Int32, System.Int32, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FillRange(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Int32, T)
  nameWithType: Algorithms.FillRange<T>(IList<T>, Int32, Int32, T)
  nameWithType.vb: Algorithms.FillRange(Of T)(IList(Of T), Int32, Int32, T)
- uid: Wintellect.PowerCollections.Algorithms.FindFirstIndexWhere*
  name: FindFirstIndexWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindFirstIndexWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FindFirstIndexWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FindFirstIndexWhere
  nameWithType: Algorithms.FindFirstIndexWhere
- uid: Wintellect.PowerCollections.Algorithms.FindFirstIndexWhere``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name: FindFirstIndexWhere<T>(IList<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindFirstIndexWhere__1_System_Collections_Generic_IList___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FindFirstIndexWhere``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name.vb: FindFirstIndexWhere(Of T)(IList(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FindFirstIndexWhere<T>(System.Collections.Generic.IList<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FindFirstIndexWhere(Of T)(System.Collections.Generic.IList(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.FindFirstIndexWhere<T>(IList<T>, Predicate<T>)
  nameWithType.vb: Algorithms.FindFirstIndexWhere(Of T)(IList(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FindFirstWhere*
  name: FindFirstWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindFirstWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FindFirstWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FindFirstWhere
  nameWithType: Algorithms.FindFirstWhere
- uid: Wintellect.PowerCollections.Algorithms.FindFirstWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name: FindFirstWhere<T>(IEnumerable<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindFirstWhere__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FindFirstWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name.vb: FindFirstWhere(Of T)(IEnumerable(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FindFirstWhere<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FindFirstWhere(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.FindFirstWhere<T>(IEnumerable<T>, Predicate<T>)
  nameWithType.vb: Algorithms.FindFirstWhere(Of T)(IEnumerable(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FindIndicesWhere*
  name: FindIndicesWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindIndicesWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FindIndicesWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FindIndicesWhere
  nameWithType: Algorithms.FindIndicesWhere
- uid: Wintellect.PowerCollections.Algorithms.FindIndicesWhere``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name: FindIndicesWhere<T>(IList<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindIndicesWhere__1_System_Collections_Generic_IList___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FindIndicesWhere``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name.vb: FindIndicesWhere(Of T)(IList(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FindIndicesWhere<T>(System.Collections.Generic.IList<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FindIndicesWhere(Of T)(System.Collections.Generic.IList(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.FindIndicesWhere<T>(IList<T>, Predicate<T>)
  nameWithType.vb: Algorithms.FindIndicesWhere(Of T)(IList(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FindLastIndexWhere*
  name: FindLastIndexWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindLastIndexWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FindLastIndexWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FindLastIndexWhere
  nameWithType: Algorithms.FindLastIndexWhere
- uid: Wintellect.PowerCollections.Algorithms.FindLastIndexWhere``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name: FindLastIndexWhere<T>(IList<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindLastIndexWhere__1_System_Collections_Generic_IList___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FindLastIndexWhere``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name.vb: FindLastIndexWhere(Of T)(IList(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FindLastIndexWhere<T>(System.Collections.Generic.IList<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FindLastIndexWhere(Of T)(System.Collections.Generic.IList(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.FindLastIndexWhere<T>(IList<T>, Predicate<T>)
  nameWithType.vb: Algorithms.FindLastIndexWhere(Of T)(IList(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FindLastWhere*
  name: FindLastWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindLastWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FindLastWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FindLastWhere
  nameWithType: Algorithms.FindLastWhere
- uid: Wintellect.PowerCollections.Algorithms.FindLastWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name: FindLastWhere<T>(IEnumerable<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindLastWhere__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FindLastWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name.vb: FindLastWhere(Of T)(IEnumerable(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FindLastWhere<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FindLastWhere(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.FindLastWhere<T>(IEnumerable<T>, Predicate<T>)
  nameWithType.vb: Algorithms.FindLastWhere(Of T)(IEnumerable(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FindWhere*
  name: FindWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FindWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FindWhere
  nameWithType: Algorithms.FindWhere
- uid: Wintellect.PowerCollections.Algorithms.FindWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name: FindWhere<T>(IEnumerable<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FindWhere__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FindWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name.vb: FindWhere(Of T)(IEnumerable(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FindWhere<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FindWhere(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.FindWhere<T>(IEnumerable<T>, Predicate<T>)
  nameWithType.vb: Algorithms.FindWhere(Of T)(IEnumerable(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual*
  name: FirstConsecutiveEqual
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstConsecutiveEqual_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual
  nameWithType: Algorithms.FirstConsecutiveEqual
- uid: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual``1(System.Collections.Generic.IList{``0},System.Int32)
  name: FirstConsecutiveEqual<T>(IList<T>, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstConsecutiveEqual__1_System_Collections_Generic_IList___0__System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual``1(System.Collections.Generic.IList{``0},System.Int32)
  name.vb: FirstConsecutiveEqual(Of T)(IList(Of T), Int32)
  fullName: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual<T>(System.Collections.Generic.IList<T>, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual(Of T)(System.Collections.Generic.IList(Of T), System.Int32)
  nameWithType: Algorithms.FirstConsecutiveEqual<T>(IList<T>, Int32)
  nameWithType.vb: Algorithms.FirstConsecutiveEqual(Of T)(IList(Of T), Int32)
- uid: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual``1(System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IEqualityComparer{``0})
  name: FirstConsecutiveEqual<T>(IList<T>, Int32, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstConsecutiveEqual__1_System_Collections_Generic_IList___0__System_Int32_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual``1(System.Collections.Generic.IList{``0},System.Int32,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: FirstConsecutiveEqual(Of T)(IList(Of T), Int32, IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual<T>(System.Collections.Generic.IList<T>, System.Int32, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.FirstConsecutiveEqual<T>(IList<T>, Int32, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.FirstConsecutiveEqual(Of T)(IList(Of T), Int32, IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual``1(System.Collections.Generic.IList{``0},System.Int32,Wintellect.PowerCollections.BinaryPredicate{``0})
  name: FirstConsecutiveEqual<T>(IList<T>, Int32, BinaryPredicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstConsecutiveEqual__1_System_Collections_Generic_IList___0__System_Int32_Wintellect_PowerCollections_BinaryPredicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual``1(System.Collections.Generic.IList{``0},System.Int32,Wintellect.PowerCollections.BinaryPredicate{``0})
  name.vb: FirstConsecutiveEqual(Of T)(IList(Of T), Int32, BinaryPredicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual<T>(System.Collections.Generic.IList<T>, System.Int32, Wintellect.PowerCollections.BinaryPredicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstConsecutiveEqual(Of T)(System.Collections.Generic.IList(Of T), System.Int32, Wintellect.PowerCollections.BinaryPredicate(Of T))
  nameWithType: Algorithms.FirstConsecutiveEqual<T>(IList<T>, Int32, BinaryPredicate<T>)
  nameWithType.vb: Algorithms.FirstConsecutiveEqual(Of T)(IList(Of T), Int32, BinaryPredicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FirstConsecutiveWhere*
  name: FirstConsecutiveWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstConsecutiveWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FirstConsecutiveWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FirstConsecutiveWhere
  nameWithType: Algorithms.FirstConsecutiveWhere
- uid: Wintellect.PowerCollections.Algorithms.FirstConsecutiveWhere``1(System.Collections.Generic.IList{``0},System.Int32,System.Predicate{``0})
  name: FirstConsecutiveWhere<T>(IList<T>, Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstConsecutiveWhere__1_System_Collections_Generic_IList___0__System_Int32_System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstConsecutiveWhere``1(System.Collections.Generic.IList{``0},System.Int32,System.Predicate{``0})
  name.vb: FirstConsecutiveWhere(Of T)(IList(Of T), Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FirstConsecutiveWhere<T>(System.Collections.Generic.IList<T>, System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstConsecutiveWhere(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Predicate(Of T))
  nameWithType: Algorithms.FirstConsecutiveWhere<T>(IList<T>, Int32, Predicate<T>)
  nameWithType.vb: Algorithms.FirstConsecutiveWhere(Of T)(IList(Of T), Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FirstIndexOf*
  name: FirstIndexOf
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstIndexOf_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FirstIndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FirstIndexOf
  nameWithType: Algorithms.FirstIndexOf
- uid: Wintellect.PowerCollections.Algorithms.FirstIndexOf``1(System.Collections.Generic.IList{``0},``0)
  name: FirstIndexOf<T>(IList<T>, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstIndexOf__1_System_Collections_Generic_IList___0____0_
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstIndexOf``1(System.Collections.Generic.IList{``0},``0)
  name.vb: FirstIndexOf(Of T)(IList(Of T), T)
  fullName: Wintellect.PowerCollections.Algorithms.FirstIndexOf<T>(System.Collections.Generic.IList<T>, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstIndexOf(Of T)(System.Collections.Generic.IList(Of T), T)
  nameWithType: Algorithms.FirstIndexOf<T>(IList<T>, T)
  nameWithType.vb: Algorithms.FirstIndexOf(Of T)(IList(Of T), T)
- uid: Wintellect.PowerCollections.Algorithms.FirstIndexOf``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: FirstIndexOf<T>(IList<T>, T, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstIndexOf__1_System_Collections_Generic_IList___0____0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstIndexOf``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: FirstIndexOf(Of T)(IList(Of T), T, IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FirstIndexOf<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstIndexOf(Of T)(System.Collections.Generic.IList(Of T), T, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.FirstIndexOf<T>(IList<T>, T, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.FirstIndexOf(Of T)(IList(Of T), T, IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany*
  name: FirstIndexOfMany
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstIndexOfMany_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.FirstIndexOfMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany
  nameWithType: Algorithms.FirstIndexOfMany
- uid: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  name: FirstIndexOfMany<T>(IList<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstIndexOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: FirstIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.FirstIndexOfMany<T>(IList<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.FirstIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: FirstIndexOfMany<T>(IList<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstIndexOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: FirstIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.FirstIndexOfMany<T>(IList<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.FirstIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name: FirstIndexOfMany<T>(IList<T>, IEnumerable<T>, BinaryPredicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_FirstIndexOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__Wintellect_PowerCollections_BinaryPredicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.FirstIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name.vb: FirstIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, Wintellect.PowerCollections.BinaryPredicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.FirstIndexOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T), Wintellect.PowerCollections.BinaryPredicate(Of T))
  nameWithType: Algorithms.FirstIndexOfMany<T>(IList<T>, IEnumerable<T>, BinaryPredicate<T>)
  nameWithType.vb: Algorithms.FirstIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.ForEach*
  name: ForEach
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ForEach_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.ForEach
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.ForEach
  nameWithType: Algorithms.ForEach
- uid: Wintellect.PowerCollections.Algorithms.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  nameWithType: Algorithms.ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType.vb: Algorithms.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GeneratePermutations*
  name: GeneratePermutations
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GeneratePermutations_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GeneratePermutations
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GeneratePermutations
  nameWithType: Algorithms.GeneratePermutations
- uid: Wintellect.PowerCollections.Algorithms.GeneratePermutations``1(System.Collections.Generic.IEnumerable{``0})
  name: GeneratePermutations<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GeneratePermutations__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GeneratePermutations``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: GeneratePermutations(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GeneratePermutations<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GeneratePermutations(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.GeneratePermutations<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.GeneratePermutations(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations*
  name: GenerateSortedPermutations
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GenerateSortedPermutations_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations
  nameWithType: Algorithms.GenerateSortedPermutations
- uid: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations``1(System.Collections.Generic.IEnumerable{``0})
  name: GenerateSortedPermutations<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GenerateSortedPermutations__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: GenerateSortedPermutations(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.GenerateSortedPermutations<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.GenerateSortedPermutations(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name: GenerateSortedPermutations<T>(IEnumerable<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GenerateSortedPermutations__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name.vb: GenerateSortedPermutations(Of T)(IEnumerable(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.GenerateSortedPermutations<T>(IEnumerable<T>, IComparer<T>)
  nameWithType.vb: Algorithms.GenerateSortedPermutations(Of T)(IEnumerable(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name: GenerateSortedPermutations<T>(IEnumerable<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GenerateSortedPermutations__1_System_Collections_Generic_IEnumerable___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name.vb: GenerateSortedPermutations(Of T)(IEnumerable(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations<T>(System.Collections.Generic.IEnumerable<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GenerateSortedPermutations(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.GenerateSortedPermutations<T>(IEnumerable<T>, Comparison<T>)
  nameWithType.vb: Algorithms.GenerateSortedPermutations(Of T)(IEnumerable(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer*
  name: GetCollectionEqualityComparer
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetCollectionEqualityComparer_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer
  nameWithType: Algorithms.GetCollectionEqualityComparer
- uid: Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer``1
  name: GetCollectionEqualityComparer<T>()
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetCollectionEqualityComparer__1
  commentId: M:Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer``1
  name.vb: GetCollectionEqualityComparer(Of T)()
  fullName: Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer<T>()
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer(Of T)()
  nameWithType: Algorithms.GetCollectionEqualityComparer<T>()
  nameWithType.vb: Algorithms.GetCollectionEqualityComparer(Of T)()
- uid: Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer``1(System.Collections.Generic.IEqualityComparer{``0})
  name: GetCollectionEqualityComparer<T>(IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetCollectionEqualityComparer__1_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer``1(System.Collections.Generic.IEqualityComparer{``0})
  name.vb: GetCollectionEqualityComparer(Of T)(IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer<T>(System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetCollectionEqualityComparer(Of T)(System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.GetCollectionEqualityComparer<T>(IEqualityComparer<T>)
  nameWithType.vb: Algorithms.GetCollectionEqualityComparer(Of T)(IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GetComparerFromComparison*
  name: GetComparerFromComparison
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetComparerFromComparison_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetComparerFromComparison
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetComparerFromComparison
  nameWithType: Algorithms.GetComparerFromComparison
- uid: Wintellect.PowerCollections.Algorithms.GetComparerFromComparison``1(System.Comparison{``0})
  name: GetComparerFromComparison<T>(Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetComparerFromComparison__1_System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetComparerFromComparison``1(System.Comparison{``0})
  name.vb: GetComparerFromComparison(Of T)(Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GetComparerFromComparison<T>(System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetComparerFromComparison(Of T)(System.Comparison(Of T))
  nameWithType: Algorithms.GetComparerFromComparison<T>(Comparison<T>)
  nameWithType.vb: Algorithms.GetComparerFromComparison(Of T)(Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GetComparisonFromComparer*
  name: GetComparisonFromComparer
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetComparisonFromComparer_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetComparisonFromComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetComparisonFromComparer
  nameWithType: Algorithms.GetComparisonFromComparer
- uid: Wintellect.PowerCollections.Algorithms.GetComparisonFromComparer``1(System.Collections.Generic.IComparer{``0})
  name: GetComparisonFromComparer<T>(IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetComparisonFromComparer__1_System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetComparisonFromComparer``1(System.Collections.Generic.IComparer{``0})
  name.vb: GetComparisonFromComparer(Of T)(IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GetComparisonFromComparer<T>(System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetComparisonFromComparer(Of T)(System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.GetComparisonFromComparer<T>(IComparer<T>)
  nameWithType.vb: Algorithms.GetComparisonFromComparer(Of T)(IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GetDictionaryConverter*
  name: GetDictionaryConverter
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetDictionaryConverter_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetDictionaryConverter
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetDictionaryConverter
  nameWithType: Algorithms.GetDictionaryConverter
- uid: Wintellect.PowerCollections.Algorithms.GetDictionaryConverter``2(System.Collections.Generic.IDictionary{``0,``1})
  name: GetDictionaryConverter<TKey, TValue>(IDictionary<TKey, TValue>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetDictionaryConverter__2_System_Collections_Generic_IDictionary___0___1__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetDictionaryConverter``2(System.Collections.Generic.IDictionary{``0,``1})
  name.vb: GetDictionaryConverter(Of TKey, TValue)(IDictionary(Of TKey, TValue))
  fullName: Wintellect.PowerCollections.Algorithms.GetDictionaryConverter<TKey, TValue>(System.Collections.Generic.IDictionary<TKey, TValue>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetDictionaryConverter(Of TKey, TValue)(System.Collections.Generic.IDictionary(Of TKey, TValue))
  nameWithType: Algorithms.GetDictionaryConverter<TKey, TValue>(IDictionary<TKey, TValue>)
  nameWithType.vb: Algorithms.GetDictionaryConverter(Of TKey, TValue)(IDictionary(Of TKey, TValue))
- uid: Wintellect.PowerCollections.Algorithms.GetDictionaryConverter``2(System.Collections.Generic.IDictionary{``0,``1},``1)
  name: GetDictionaryConverter<TKey, TValue>(IDictionary<TKey, TValue>, TValue)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetDictionaryConverter__2_System_Collections_Generic_IDictionary___0___1____1_
  commentId: M:Wintellect.PowerCollections.Algorithms.GetDictionaryConverter``2(System.Collections.Generic.IDictionary{``0,``1},``1)
  name.vb: GetDictionaryConverter(Of TKey, TValue)(IDictionary(Of TKey, TValue), TValue)
  fullName: Wintellect.PowerCollections.Algorithms.GetDictionaryConverter<TKey, TValue>(System.Collections.Generic.IDictionary<TKey, TValue>, TValue)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetDictionaryConverter(Of TKey, TValue)(System.Collections.Generic.IDictionary(Of TKey, TValue), TValue)
  nameWithType: Algorithms.GetDictionaryConverter<TKey, TValue>(IDictionary<TKey, TValue>, TValue)
  nameWithType.vb: Algorithms.GetDictionaryConverter(Of TKey, TValue)(IDictionary(Of TKey, TValue), TValue)
- uid: Wintellect.PowerCollections.Algorithms.GetIdentityComparer*
  name: GetIdentityComparer
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetIdentityComparer_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetIdentityComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetIdentityComparer
  nameWithType: Algorithms.GetIdentityComparer
- uid: Wintellect.PowerCollections.Algorithms.GetIdentityComparer``1
  name: GetIdentityComparer<T>()
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetIdentityComparer__1
  commentId: M:Wintellect.PowerCollections.Algorithms.GetIdentityComparer``1
  name.vb: GetIdentityComparer(Of T)()
  fullName: Wintellect.PowerCollections.Algorithms.GetIdentityComparer<T>()
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetIdentityComparer(Of T)()
  nameWithType: Algorithms.GetIdentityComparer<T>()
  nameWithType.vb: Algorithms.GetIdentityComparer(Of T)()
- uid: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer*
  name: GetLexicographicalComparer
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetLexicographicalComparer_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer
  nameWithType: Algorithms.GetLexicographicalComparer
- uid: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer``1
  name: GetLexicographicalComparer<T>()
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetLexicographicalComparer__1
  commentId: M:Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer``1
  name.vb: GetLexicographicalComparer(Of T)()
  fullName: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer<T>()
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer(Of T)()
  nameWithType: Algorithms.GetLexicographicalComparer<T>()
  nameWithType.vb: Algorithms.GetLexicographicalComparer(Of T)()
- uid: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer``1(System.Collections.Generic.IComparer{``0})
  name: GetLexicographicalComparer<T>(IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetLexicographicalComparer__1_System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer``1(System.Collections.Generic.IComparer{``0})
  name.vb: GetLexicographicalComparer(Of T)(IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer<T>(System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer(Of T)(System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.GetLexicographicalComparer<T>(IComparer<T>)
  nameWithType.vb: Algorithms.GetLexicographicalComparer(Of T)(IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer``1(System.Comparison{``0})
  name: GetLexicographicalComparer<T>(Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetLexicographicalComparer__1_System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer``1(System.Comparison{``0})
  name.vb: GetLexicographicalComparer(Of T)(Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer<T>(System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetLexicographicalComparer(Of T)(System.Comparison(Of T))
  nameWithType: Algorithms.GetLexicographicalComparer<T>(Comparison<T>)
  nameWithType.vb: Algorithms.GetLexicographicalComparer(Of T)(Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GetReverseComparer*
  name: GetReverseComparer
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetReverseComparer_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetReverseComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetReverseComparer
  nameWithType: Algorithms.GetReverseComparer
- uid: Wintellect.PowerCollections.Algorithms.GetReverseComparer``1(System.Collections.Generic.IComparer{``0})
  name: GetReverseComparer<T>(IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetReverseComparer__1_System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetReverseComparer``1(System.Collections.Generic.IComparer{``0})
  name.vb: GetReverseComparer(Of T)(IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GetReverseComparer<T>(System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetReverseComparer(Of T)(System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.GetReverseComparer<T>(IComparer<T>)
  nameWithType.vb: Algorithms.GetReverseComparer(Of T)(IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GetReverseComparison*
  name: GetReverseComparison
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetReverseComparison_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetReverseComparison
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetReverseComparison
  nameWithType: Algorithms.GetReverseComparison
- uid: Wintellect.PowerCollections.Algorithms.GetReverseComparison``1(System.Comparison{``0})
  name: GetReverseComparison<T>(Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetReverseComparison__1_System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetReverseComparison``1(System.Comparison{``0})
  name.vb: GetReverseComparison(Of T)(Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GetReverseComparison<T>(System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetReverseComparison(Of T)(System.Comparison(Of T))
  nameWithType: Algorithms.GetReverseComparison<T>(Comparison<T>)
  nameWithType.vb: Algorithms.GetReverseComparison(Of T)(Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer*
  name: GetSetEqualityComparer
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetSetEqualityComparer_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer
  nameWithType: Algorithms.GetSetEqualityComparer
- uid: Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer``1
  name: GetSetEqualityComparer<T>()
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetSetEqualityComparer__1
  commentId: M:Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer``1
  name.vb: GetSetEqualityComparer(Of T)()
  fullName: Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer<T>()
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer(Of T)()
  nameWithType: Algorithms.GetSetEqualityComparer<T>()
  nameWithType.vb: Algorithms.GetSetEqualityComparer(Of T)()
- uid: Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer``1(System.Collections.Generic.IEqualityComparer{``0})
  name: GetSetEqualityComparer<T>(IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_GetSetEqualityComparer__1_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer``1(System.Collections.Generic.IEqualityComparer{``0})
  name.vb: GetSetEqualityComparer(Of T)(IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer<T>(System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.GetSetEqualityComparer(Of T)(System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.GetSetEqualityComparer<T>(IEqualityComparer<T>)
  nameWithType.vb: Algorithms.GetSetEqualityComparer(Of T)(IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndexOfMaximum*
  name: IndexOfMaximum
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndexOfMaximum_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.IndexOfMaximum
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.IndexOfMaximum
  nameWithType: Algorithms.IndexOfMaximum
- uid: Wintellect.PowerCollections.Algorithms.IndexOfMaximum``1(System.Collections.Generic.IList{``0})
  name: IndexOfMaximum<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndexOfMaximum__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndexOfMaximum``1(System.Collections.Generic.IList{``0})
  name.vb: IndexOfMaximum(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndexOfMaximum<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndexOfMaximum(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.IndexOfMaximum<T>(IList<T>)
  nameWithType.vb: Algorithms.IndexOfMaximum(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndexOfMaximum``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})
  name: IndexOfMaximum<T>(IList<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndexOfMaximum__1_System_Collections_Generic_IList___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndexOfMaximum``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})
  name.vb: IndexOfMaximum(Of T)(IList(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndexOfMaximum<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndexOfMaximum(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.IndexOfMaximum<T>(IList<T>, IComparer<T>)
  nameWithType.vb: Algorithms.IndexOfMaximum(Of T)(IList(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndexOfMaximum``1(System.Collections.Generic.IList{``0},System.Comparison{``0})
  name: IndexOfMaximum<T>(IList<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndexOfMaximum__1_System_Collections_Generic_IList___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndexOfMaximum``1(System.Collections.Generic.IList{``0},System.Comparison{``0})
  name.vb: IndexOfMaximum(Of T)(IList(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndexOfMaximum<T>(System.Collections.Generic.IList<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndexOfMaximum(Of T)(System.Collections.Generic.IList(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.IndexOfMaximum<T>(IList<T>, Comparison<T>)
  nameWithType.vb: Algorithms.IndexOfMaximum(Of T)(IList(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndexOfMinimum*
  name: IndexOfMinimum
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndexOfMinimum_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.IndexOfMinimum
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.IndexOfMinimum
  nameWithType: Algorithms.IndexOfMinimum
- uid: Wintellect.PowerCollections.Algorithms.IndexOfMinimum``1(System.Collections.Generic.IList{``0})
  name: IndexOfMinimum<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndexOfMinimum__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndexOfMinimum``1(System.Collections.Generic.IList{``0})
  name.vb: IndexOfMinimum(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndexOfMinimum<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndexOfMinimum(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.IndexOfMinimum<T>(IList<T>)
  nameWithType.vb: Algorithms.IndexOfMinimum(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndexOfMinimum``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})
  name: IndexOfMinimum<T>(IList<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndexOfMinimum__1_System_Collections_Generic_IList___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndexOfMinimum``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})
  name.vb: IndexOfMinimum(Of T)(IList(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndexOfMinimum<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndexOfMinimum(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.IndexOfMinimum<T>(IList<T>, IComparer<T>)
  nameWithType.vb: Algorithms.IndexOfMinimum(Of T)(IList(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndexOfMinimum``1(System.Collections.Generic.IList{``0},System.Comparison{``0})
  name: IndexOfMinimum<T>(IList<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndexOfMinimum__1_System_Collections_Generic_IList___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndexOfMinimum``1(System.Collections.Generic.IList{``0},System.Comparison{``0})
  name.vb: IndexOfMinimum(Of T)(IList(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndexOfMinimum<T>(System.Collections.Generic.IList<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndexOfMinimum(Of T)(System.Collections.Generic.IList(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.IndexOfMinimum<T>(IList<T>, Comparison<T>)
  nameWithType.vb: Algorithms.IndexOfMinimum(Of T)(IList(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndicesOf*
  name: IndicesOf
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndicesOf_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.IndicesOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.IndicesOf
  nameWithType: Algorithms.IndicesOf
- uid: Wintellect.PowerCollections.Algorithms.IndicesOf``1(System.Collections.Generic.IList{``0},``0)
  name: IndicesOf<T>(IList<T>, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndicesOf__1_System_Collections_Generic_IList___0____0_
  commentId: M:Wintellect.PowerCollections.Algorithms.IndicesOf``1(System.Collections.Generic.IList{``0},``0)
  name.vb: IndicesOf(Of T)(IList(Of T), T)
  fullName: Wintellect.PowerCollections.Algorithms.IndicesOf<T>(System.Collections.Generic.IList<T>, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndicesOf(Of T)(System.Collections.Generic.IList(Of T), T)
  nameWithType: Algorithms.IndicesOf<T>(IList<T>, T)
  nameWithType.vb: Algorithms.IndicesOf(Of T)(IList(Of T), T)
- uid: Wintellect.PowerCollections.Algorithms.IndicesOf``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: IndicesOf<T>(IList<T>, T, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndicesOf__1_System_Collections_Generic_IList___0____0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndicesOf``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IndicesOf(Of T)(IList(Of T), T, IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndicesOf<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndicesOf(Of T)(System.Collections.Generic.IList(Of T), T, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.IndicesOf<T>(IList<T>, T, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.IndicesOf(Of T)(IList(Of T), T, IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndicesOfMany*
  name: IndicesOfMany
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndicesOfMany_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.IndicesOfMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.IndicesOfMany
  nameWithType: Algorithms.IndicesOfMany
- uid: Wintellect.PowerCollections.Algorithms.IndicesOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  name: IndicesOfMany<T>(IList<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndicesOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndicesOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IndicesOfMany(Of T)(IList(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndicesOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndicesOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.IndicesOfMany<T>(IList<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.IndicesOfMany(Of T)(IList(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndicesOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IndicesOfMany<T>(IList<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndicesOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndicesOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IndicesOfMany(Of T)(IList(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndicesOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndicesOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.IndicesOfMany<T>(IList<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.IndicesOfMany(Of T)(IList(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IndicesOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name: IndicesOfMany<T>(IList<T>, IEnumerable<T>, BinaryPredicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IndicesOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__Wintellect_PowerCollections_BinaryPredicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IndicesOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name.vb: IndicesOfMany(Of T)(IList(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IndicesOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, Wintellect.PowerCollections.BinaryPredicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IndicesOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T), Wintellect.PowerCollections.BinaryPredicate(Of T))
  nameWithType: Algorithms.IndicesOfMany<T>(IList<T>, IEnumerable<T>, BinaryPredicate<T>)
  nameWithType.vb: Algorithms.IndicesOfMany(Of T)(IList(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IsProperSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.IsProperSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.IsProperSubsetOf
  nameWithType: Algorithms.IsProperSubsetOf
- uid: Wintellect.PowerCollections.Algorithms.IsProperSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsProperSubsetOf<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IsProperSubsetOf__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IsProperSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsProperSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IsProperSubsetOf<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IsProperSubsetOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.IsProperSubsetOf<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.IsProperSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IsProperSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsProperSubsetOf<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IsProperSubsetOf__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IsProperSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsProperSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IsProperSubsetOf<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IsProperSubsetOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.IsProperSubsetOf<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.IsProperSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IsSubsetOf*
  name: IsSubsetOf
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IsSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.IsSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.IsSubsetOf
  nameWithType: Algorithms.IsSubsetOf
- uid: Wintellect.PowerCollections.Algorithms.IsSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsSubsetOf<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IsSubsetOf__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IsSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: IsSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IsSubsetOf<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IsSubsetOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.IsSubsetOf<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.IsSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.IsSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: IsSubsetOf<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_IsSubsetOf__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.IsSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: IsSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.IsSubsetOf<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.IsSubsetOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.IsSubsetOf<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.IsSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.LastIndexOf*
  name: LastIndexOf
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LastIndexOf_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.LastIndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.LastIndexOf
  nameWithType: Algorithms.LastIndexOf
- uid: Wintellect.PowerCollections.Algorithms.LastIndexOf``1(System.Collections.Generic.IList{``0},``0)
  name: LastIndexOf<T>(IList<T>, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LastIndexOf__1_System_Collections_Generic_IList___0____0_
  commentId: M:Wintellect.PowerCollections.Algorithms.LastIndexOf``1(System.Collections.Generic.IList{``0},``0)
  name.vb: LastIndexOf(Of T)(IList(Of T), T)
  fullName: Wintellect.PowerCollections.Algorithms.LastIndexOf<T>(System.Collections.Generic.IList<T>, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.LastIndexOf(Of T)(System.Collections.Generic.IList(Of T), T)
  nameWithType: Algorithms.LastIndexOf<T>(IList<T>, T)
  nameWithType.vb: Algorithms.LastIndexOf(Of T)(IList(Of T), T)
- uid: Wintellect.PowerCollections.Algorithms.LastIndexOf``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: LastIndexOf<T>(IList<T>, T, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LastIndexOf__1_System_Collections_Generic_IList___0____0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.LastIndexOf``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: LastIndexOf(Of T)(IList(Of T), T, IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.LastIndexOf<T>(System.Collections.Generic.IList<T>, T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.LastIndexOf(Of T)(System.Collections.Generic.IList(Of T), T, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.LastIndexOf<T>(IList<T>, T, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.LastIndexOf(Of T)(IList(Of T), T, IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.LastIndexOfMany*
  name: LastIndexOfMany
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LastIndexOfMany_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.LastIndexOfMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.LastIndexOfMany
  nameWithType: Algorithms.LastIndexOfMany
- uid: Wintellect.PowerCollections.Algorithms.LastIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  name: LastIndexOfMany<T>(IList<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LastIndexOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.LastIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: LastIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.LastIndexOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.LastIndexOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.LastIndexOfMany<T>(IList<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.LastIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.LastIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: LastIndexOfMany<T>(IList<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LastIndexOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.LastIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: LastIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.LastIndexOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.LastIndexOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.LastIndexOfMany<T>(IList<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.LastIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.LastIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name: LastIndexOfMany<T>(IList<T>, IEnumerable<T>, BinaryPredicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LastIndexOfMany__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__Wintellect_PowerCollections_BinaryPredicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.LastIndexOfMany``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name.vb: LastIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.LastIndexOfMany<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, Wintellect.PowerCollections.BinaryPredicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.LastIndexOfMany(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T), Wintellect.PowerCollections.BinaryPredicate(Of T))
  nameWithType: Algorithms.LastIndexOfMany<T>(IList<T>, IEnumerable<T>, BinaryPredicate<T>)
  nameWithType.vb: Algorithms.LastIndexOfMany(Of T)(IList(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.LexicographicalCompare*
  name: LexicographicalCompare
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LexicographicalCompare_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.LexicographicalCompare
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.LexicographicalCompare
  nameWithType: Algorithms.LexicographicalCompare
- uid: Wintellect.PowerCollections.Algorithms.LexicographicalCompare``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: LexicographicalCompare<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LexicographicalCompare__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.LexicographicalCompare``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: LexicographicalCompare(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.LexicographicalCompare<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.LexicographicalCompare(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.LexicographicalCompare<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.LexicographicalCompare(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.LexicographicalCompare``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name: LexicographicalCompare<T>(IEnumerable<T>, IEnumerable<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LexicographicalCompare__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.LexicographicalCompare``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name.vb: LexicographicalCompare(Of T)(IEnumerable(Of T), IEnumerable(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.LexicographicalCompare<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.LexicographicalCompare(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.LexicographicalCompare<T>(IEnumerable<T>, IEnumerable<T>, IComparer<T>)
  nameWithType.vb: Algorithms.LexicographicalCompare(Of T)(IEnumerable(Of T), IEnumerable(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.LexicographicalCompare``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name: LexicographicalCompare<T>(IEnumerable<T>, IEnumerable<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_LexicographicalCompare__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.LexicographicalCompare``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name.vb: LexicographicalCompare(Of T)(IEnumerable(Of T), IEnumerable(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.LexicographicalCompare<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.LexicographicalCompare(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.LexicographicalCompare<T>(IEnumerable<T>, IEnumerable<T>, Comparison<T>)
  nameWithType.vb: Algorithms.LexicographicalCompare(Of T)(IEnumerable(Of T), IEnumerable(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Maximum*
  name: Maximum
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Maximum_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Maximum
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Maximum
  nameWithType: Algorithms.Maximum
- uid: Wintellect.PowerCollections.Algorithms.Maximum``1(System.Collections.Generic.IEnumerable{``0})
  name: Maximum<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Maximum__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Maximum``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: Maximum(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Maximum<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Maximum(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.Maximum<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.Maximum(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Maximum``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name: Maximum<T>(IEnumerable<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Maximum__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Maximum``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name.vb: Maximum(Of T)(IEnumerable(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Maximum<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Maximum(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.Maximum<T>(IEnumerable<T>, IComparer<T>)
  nameWithType.vb: Algorithms.Maximum(Of T)(IEnumerable(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Maximum``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name: Maximum<T>(IEnumerable<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Maximum__1_System_Collections_Generic_IEnumerable___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Maximum``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name.vb: Maximum(Of T)(IEnumerable(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Maximum<T>(System.Collections.Generic.IEnumerable<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Maximum(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.Maximum<T>(IEnumerable<T>, Comparison<T>)
  nameWithType.vb: Algorithms.Maximum(Of T)(IEnumerable(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.MergeSorted*
  name: MergeSorted
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_MergeSorted_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.MergeSorted
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.MergeSorted
  nameWithType: Algorithms.MergeSorted
- uid: Wintellect.PowerCollections.Algorithms.MergeSorted``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0}[])
  name: MergeSorted<T>(IComparer<T>, IEnumerable<T>[])
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_MergeSorted__1_System_Collections_Generic_IComparer___0__System_Collections_Generic_IEnumerable___0____
  commentId: M:Wintellect.PowerCollections.Algorithms.MergeSorted``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0}[])
  name.vb: MergeSorted(Of T)(IComparer(Of T), IEnumerable(Of T)())
  fullName: Wintellect.PowerCollections.Algorithms.MergeSorted<T>(System.Collections.Generic.IComparer<T>, System.Collections.Generic.IEnumerable<T>[])
  fullName.vb: Wintellect.PowerCollections.Algorithms.MergeSorted(Of T)(System.Collections.Generic.IComparer(Of T), System.Collections.Generic.IEnumerable(Of T)())
  nameWithType: Algorithms.MergeSorted<T>(IComparer<T>, IEnumerable<T>[])
  nameWithType.vb: Algorithms.MergeSorted(Of T)(IComparer(Of T), IEnumerable(Of T)())
- uid: Wintellect.PowerCollections.Algorithms.MergeSorted``1(System.Collections.Generic.IEnumerable{``0}[])
  name: MergeSorted<T>(IEnumerable<T>[])
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_MergeSorted__1_System_Collections_Generic_IEnumerable___0____
  commentId: M:Wintellect.PowerCollections.Algorithms.MergeSorted``1(System.Collections.Generic.IEnumerable{``0}[])
  name.vb: MergeSorted(Of T)(IEnumerable(Of T)())
  fullName: Wintellect.PowerCollections.Algorithms.MergeSorted<T>(System.Collections.Generic.IEnumerable<T>[])
  fullName.vb: Wintellect.PowerCollections.Algorithms.MergeSorted(Of T)(System.Collections.Generic.IEnumerable(Of T)())
  nameWithType: Algorithms.MergeSorted<T>(IEnumerable<T>[])
  nameWithType.vb: Algorithms.MergeSorted(Of T)(IEnumerable(Of T)())
- uid: Wintellect.PowerCollections.Algorithms.MergeSorted``1(System.Comparison{``0},System.Collections.Generic.IEnumerable{``0}[])
  name: MergeSorted<T>(Comparison<T>, IEnumerable<T>[])
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_MergeSorted__1_System_Comparison___0__System_Collections_Generic_IEnumerable___0____
  commentId: M:Wintellect.PowerCollections.Algorithms.MergeSorted``1(System.Comparison{``0},System.Collections.Generic.IEnumerable{``0}[])
  name.vb: MergeSorted(Of T)(Comparison(Of T), IEnumerable(Of T)())
  fullName: Wintellect.PowerCollections.Algorithms.MergeSorted<T>(System.Comparison<T>, System.Collections.Generic.IEnumerable<T>[])
  fullName.vb: Wintellect.PowerCollections.Algorithms.MergeSorted(Of T)(System.Comparison(Of T), System.Collections.Generic.IEnumerable(Of T)())
  nameWithType: Algorithms.MergeSorted<T>(Comparison<T>, IEnumerable<T>[])
  nameWithType.vb: Algorithms.MergeSorted(Of T)(Comparison(Of T), IEnumerable(Of T)())
- uid: Wintellect.PowerCollections.Algorithms.Minimum*
  name: Minimum
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Minimum_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Minimum
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Minimum
  nameWithType: Algorithms.Minimum
- uid: Wintellect.PowerCollections.Algorithms.Minimum``1(System.Collections.Generic.IEnumerable{``0})
  name: Minimum<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Minimum__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Minimum``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: Minimum(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Minimum<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Minimum(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.Minimum<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.Minimum(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Minimum``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name: Minimum<T>(IEnumerable<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Minimum__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Minimum``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name.vb: Minimum(Of T)(IEnumerable(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Minimum<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Minimum(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.Minimum<T>(IEnumerable<T>, IComparer<T>)
  nameWithType.vb: Algorithms.Minimum(Of T)(IEnumerable(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Minimum``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name: Minimum<T>(IEnumerable<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Minimum__1_System_Collections_Generic_IEnumerable___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Minimum``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name.vb: Minimum(Of T)(IEnumerable(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Minimum<T>(System.Collections.Generic.IEnumerable<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Minimum(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.Minimum<T>(IEnumerable<T>, Comparison<T>)
  nameWithType.vb: Algorithms.Minimum(Of T)(IEnumerable(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.NCopiesOf*
  name: NCopiesOf
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_NCopiesOf_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.NCopiesOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.NCopiesOf
  nameWithType: Algorithms.NCopiesOf
- uid: Wintellect.PowerCollections.Algorithms.NCopiesOf``1(System.Int32,``0)
  name: NCopiesOf<T>(Int32, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_NCopiesOf__1_System_Int32___0_
  commentId: M:Wintellect.PowerCollections.Algorithms.NCopiesOf``1(System.Int32,``0)
  name.vb: NCopiesOf(Of T)(Int32, T)
  fullName: Wintellect.PowerCollections.Algorithms.NCopiesOf<T>(System.Int32, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.NCopiesOf(Of T)(System.Int32, T)
  nameWithType: Algorithms.NCopiesOf<T>(Int32, T)
  nameWithType.vb: Algorithms.NCopiesOf(Of T)(Int32, T)
- uid: Wintellect.PowerCollections.Algorithms.Partition*
  name: Partition
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Partition_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Partition
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Partition
  nameWithType: Algorithms.Partition
- uid: Wintellect.PowerCollections.Algorithms.Partition``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name: Partition<T>(IList<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Partition__1_System_Collections_Generic_IList___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Partition``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name.vb: Partition(Of T)(IList(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Partition<T>(System.Collections.Generic.IList<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Partition(Of T)(System.Collections.Generic.IList(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.Partition<T>(IList<T>, Predicate<T>)
  nameWithType.vb: Algorithms.Partition(Of T)(IList(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RandomShuffle*
  name: RandomShuffle
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomShuffle_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.RandomShuffle
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.RandomShuffle
  nameWithType: Algorithms.RandomShuffle
- uid: Wintellect.PowerCollections.Algorithms.RandomShuffle``1(System.Collections.Generic.IEnumerable{``0})
  name: RandomShuffle<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomShuffle__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RandomShuffle``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: RandomShuffle(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RandomShuffle<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RandomShuffle(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.RandomShuffle<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.RandomShuffle(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RandomShuffle``1(System.Collections.Generic.IEnumerable{``0},System.Random)
  name: RandomShuffle<T>(IEnumerable<T>, Random)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomShuffle__1_System_Collections_Generic_IEnumerable___0__System_Random_
  commentId: M:Wintellect.PowerCollections.Algorithms.RandomShuffle``1(System.Collections.Generic.IEnumerable{``0},System.Random)
  name.vb: RandomShuffle(Of T)(IEnumerable(Of T), Random)
  fullName: Wintellect.PowerCollections.Algorithms.RandomShuffle<T>(System.Collections.Generic.IEnumerable<T>, System.Random)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RandomShuffle(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Random)
  nameWithType: Algorithms.RandomShuffle<T>(IEnumerable<T>, Random)
  nameWithType.vb: Algorithms.RandomShuffle(Of T)(IEnumerable(Of T), Random)
- uid: Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace*
  name: RandomShuffleInPlace
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomShuffleInPlace_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace
  nameWithType: Algorithms.RandomShuffleInPlace
- uid: Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace``1(System.Collections.Generic.IList{``0})
  name: RandomShuffleInPlace<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomShuffleInPlace__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace``1(System.Collections.Generic.IList{``0})
  name.vb: RandomShuffleInPlace(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.RandomShuffleInPlace<T>(IList<T>)
  nameWithType.vb: Algorithms.RandomShuffleInPlace(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace``1(System.Collections.Generic.IList{``0},System.Random)
  name: RandomShuffleInPlace<T>(IList<T>, Random)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomShuffleInPlace__1_System_Collections_Generic_IList___0__System_Random_
  commentId: M:Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace``1(System.Collections.Generic.IList{``0},System.Random)
  name.vb: RandomShuffleInPlace(Of T)(IList(Of T), Random)
  fullName: Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace<T>(System.Collections.Generic.IList<T>, System.Random)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RandomShuffleInPlace(Of T)(System.Collections.Generic.IList(Of T), System.Random)
  nameWithType: Algorithms.RandomShuffleInPlace<T>(IList<T>, Random)
  nameWithType.vb: Algorithms.RandomShuffleInPlace(Of T)(IList(Of T), Random)
- uid: Wintellect.PowerCollections.Algorithms.RandomSubset*
  name: RandomSubset
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomSubset_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.RandomSubset
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.RandomSubset
  nameWithType: Algorithms.RandomSubset
- uid: Wintellect.PowerCollections.Algorithms.RandomSubset``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: RandomSubset<T>(IEnumerable<T>, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomSubset__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.RandomSubset``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name.vb: RandomSubset(Of T)(IEnumerable(Of T), Int32)
  fullName: Wintellect.PowerCollections.Algorithms.RandomSubset<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RandomSubset(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  nameWithType: Algorithms.RandomSubset<T>(IEnumerable<T>, Int32)
  nameWithType.vb: Algorithms.RandomSubset(Of T)(IEnumerable(Of T), Int32)
- uid: Wintellect.PowerCollections.Algorithms.RandomSubset``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Random)
  name: RandomSubset<T>(IEnumerable<T>, Int32, Random)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RandomSubset__1_System_Collections_Generic_IEnumerable___0__System_Int32_System_Random_
  commentId: M:Wintellect.PowerCollections.Algorithms.RandomSubset``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Random)
  name.vb: RandomSubset(Of T)(IEnumerable(Of T), Int32, Random)
  fullName: Wintellect.PowerCollections.Algorithms.RandomSubset<T>(System.Collections.Generic.IEnumerable<T>, System.Int32, System.Random)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RandomSubset(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32, System.Random)
  nameWithType: Algorithms.RandomSubset<T>(IEnumerable<T>, Int32, Random)
  nameWithType.vb: Algorithms.RandomSubset(Of T)(IEnumerable(Of T), Int32, Random)
- uid: Wintellect.PowerCollections.Algorithms.Range*
  name: Range
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Range_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Range
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Range
  nameWithType: Algorithms.Range
- uid: Wintellect.PowerCollections.Algorithms.Range``1(``0[],System.Int32,System.Int32)
  name: Range<T>(T[], Int32, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Range__1___0___System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Range``1(``0[],System.Int32,System.Int32)
  name.vb: Range(Of T)(T(), Int32, Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Range<T>(T[], System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Range(Of T)(T(), System.Int32, System.Int32)
  nameWithType: Algorithms.Range<T>(T[], Int32, Int32)
  nameWithType.vb: Algorithms.Range(Of T)(T(), Int32, Int32)
- uid: Wintellect.PowerCollections.Algorithms.Range``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  name: Range<T>(IList<T>, Int32, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Range__1_System_Collections_Generic_IList___0__System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Range``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)
  name.vb: Range(Of T)(IList(Of T), Int32, Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Range<T>(System.Collections.Generic.IList<T>, System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Range(Of T)(System.Collections.Generic.IList(Of T), System.Int32, System.Int32)
  nameWithType: Algorithms.Range<T>(IList<T>, Int32, Int32)
  nameWithType.vb: Algorithms.Range(Of T)(IList(Of T), Int32, Int32)
- uid: Wintellect.PowerCollections.Algorithms.ReadOnly*
  name: ReadOnly
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReadOnly_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.ReadOnly
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.ReadOnly
  nameWithType: Algorithms.ReadOnly
- uid: Wintellect.PowerCollections.Algorithms.ReadOnly``1(System.Collections.Generic.ICollection{``0})
  name: ReadOnly<T>(ICollection<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReadOnly__1_System_Collections_Generic_ICollection___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.ReadOnly``1(System.Collections.Generic.ICollection{``0})
  name.vb: ReadOnly(Of T)(ICollection(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.ReadOnly<T>(System.Collections.Generic.ICollection<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ReadOnly(Of T)(System.Collections.Generic.ICollection(Of T))
  nameWithType: Algorithms.ReadOnly<T>(ICollection<T>)
  nameWithType.vb: Algorithms.ReadOnly(Of T)(ICollection(Of T))
- uid: Wintellect.PowerCollections.Algorithms.ReadOnly``1(System.Collections.Generic.IList{``0})
  name: ReadOnly<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReadOnly__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.ReadOnly``1(System.Collections.Generic.IList{``0})
  name.vb: ReadOnly(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.ReadOnly<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ReadOnly(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.ReadOnly<T>(IList<T>)
  nameWithType.vb: Algorithms.ReadOnly(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.ReadOnly``2(System.Collections.Generic.IDictionary{``0,``1})
  name: ReadOnly<TKey, TValue>(IDictionary<TKey, TValue>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReadOnly__2_System_Collections_Generic_IDictionary___0___1__
  commentId: M:Wintellect.PowerCollections.Algorithms.ReadOnly``2(System.Collections.Generic.IDictionary{``0,``1})
  name.vb: ReadOnly(Of TKey, TValue)(IDictionary(Of TKey, TValue))
  fullName: Wintellect.PowerCollections.Algorithms.ReadOnly<TKey, TValue>(System.Collections.Generic.IDictionary<TKey, TValue>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ReadOnly(Of TKey, TValue)(System.Collections.Generic.IDictionary(Of TKey, TValue))
  nameWithType: Algorithms.ReadOnly<TKey, TValue>(IDictionary<TKey, TValue>)
  nameWithType.vb: Algorithms.ReadOnly(Of TKey, TValue)(IDictionary(Of TKey, TValue))
- uid: Wintellect.PowerCollections.Algorithms.ReadWriteList*
  name: ReadWriteList
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReadWriteList_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.ReadWriteList
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.ReadWriteList
  nameWithType: Algorithms.ReadWriteList
- uid: Wintellect.PowerCollections.Algorithms.ReadWriteList``1(``0[])
  name: ReadWriteList<T>(T[])
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReadWriteList__1___0___
  commentId: M:Wintellect.PowerCollections.Algorithms.ReadWriteList``1(``0[])
  name.vb: ReadWriteList(Of T)(T())
  fullName: Wintellect.PowerCollections.Algorithms.ReadWriteList<T>(T[])
  fullName.vb: Wintellect.PowerCollections.Algorithms.ReadWriteList(Of T)(T())
  nameWithType: Algorithms.ReadWriteList<T>(T[])
  nameWithType.vb: Algorithms.ReadWriteList(Of T)(T())
- uid: Wintellect.PowerCollections.Algorithms.RemoveDuplicates*
  name: RemoveDuplicates
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveDuplicates_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.RemoveDuplicates
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.RemoveDuplicates
  nameWithType: Algorithms.RemoveDuplicates
- uid: Wintellect.PowerCollections.Algorithms.RemoveDuplicates``1(System.Collections.Generic.IEnumerable{``0})
  name: RemoveDuplicates<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveDuplicates__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RemoveDuplicates``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: RemoveDuplicates(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RemoveDuplicates<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RemoveDuplicates(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.RemoveDuplicates<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.RemoveDuplicates(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RemoveDuplicates``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: RemoveDuplicates<T>(IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveDuplicates__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RemoveDuplicates``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: RemoveDuplicates(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RemoveDuplicates<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RemoveDuplicates(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.RemoveDuplicates<T>(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.RemoveDuplicates(Of T)(IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RemoveDuplicates``1(System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name: RemoveDuplicates<T>(IEnumerable<T>, BinaryPredicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveDuplicates__1_System_Collections_Generic_IEnumerable___0__Wintellect_PowerCollections_BinaryPredicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RemoveDuplicates``1(System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name.vb: RemoveDuplicates(Of T)(IEnumerable(Of T), BinaryPredicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RemoveDuplicates<T>(System.Collections.Generic.IEnumerable<T>, Wintellect.PowerCollections.BinaryPredicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RemoveDuplicates(Of T)(System.Collections.Generic.IEnumerable(Of T), Wintellect.PowerCollections.BinaryPredicate(Of T))
  nameWithType: Algorithms.RemoveDuplicates<T>(IEnumerable<T>, BinaryPredicate<T>)
  nameWithType.vb: Algorithms.RemoveDuplicates(Of T)(IEnumerable(Of T), BinaryPredicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace*
  name: RemoveDuplicatesInPlace
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveDuplicatesInPlace_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace
  nameWithType: Algorithms.RemoveDuplicatesInPlace
- uid: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace``1(System.Collections.Generic.IList{``0})
  name: RemoveDuplicatesInPlace<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveDuplicatesInPlace__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace``1(System.Collections.Generic.IList{``0})
  name.vb: RemoveDuplicatesInPlace(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.RemoveDuplicatesInPlace<T>(IList<T>)
  nameWithType.vb: Algorithms.RemoveDuplicatesInPlace(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: RemoveDuplicatesInPlace<T>(IList<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveDuplicatesInPlace__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: RemoveDuplicatesInPlace(Of T)(IList(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.RemoveDuplicatesInPlace<T>(IList<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.RemoveDuplicatesInPlace(Of T)(IList(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace``1(System.Collections.Generic.IList{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name: RemoveDuplicatesInPlace<T>(IList<T>, BinaryPredicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveDuplicatesInPlace__1_System_Collections_Generic_IList___0__Wintellect_PowerCollections_BinaryPredicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace``1(System.Collections.Generic.IList{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name.vb: RemoveDuplicatesInPlace(Of T)(IList(Of T), BinaryPredicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace<T>(System.Collections.Generic.IList<T>, Wintellect.PowerCollections.BinaryPredicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RemoveDuplicatesInPlace(Of T)(System.Collections.Generic.IList(Of T), Wintellect.PowerCollections.BinaryPredicate(Of T))
  nameWithType: Algorithms.RemoveDuplicatesInPlace<T>(IList<T>, BinaryPredicate<T>)
  nameWithType.vb: Algorithms.RemoveDuplicatesInPlace(Of T)(IList(Of T), BinaryPredicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.RemoveWhere*
  name: RemoveWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.RemoveWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.RemoveWhere
  nameWithType: Algorithms.RemoveWhere
- uid: Wintellect.PowerCollections.Algorithms.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})
  name: RemoveWhere<T>(ICollection<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RemoveWhere__1_System_Collections_Generic_ICollection___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.RemoveWhere``1(System.Collections.Generic.ICollection{``0},System.Predicate{``0})
  name.vb: RemoveWhere(Of T)(ICollection(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.RemoveWhere<T>(System.Collections.Generic.ICollection<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RemoveWhere(Of T)(System.Collections.Generic.ICollection(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.RemoveWhere<T>(ICollection<T>, Predicate<T>)
  nameWithType.vb: Algorithms.RemoveWhere(Of T)(ICollection(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Replace*
  name: Replace
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Replace_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Replace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Replace
  nameWithType: Algorithms.Replace
- uid: Wintellect.PowerCollections.Algorithms.Replace``1(System.Collections.Generic.IEnumerable{``0},``0,``0)
  name: Replace<T>(IEnumerable<T>, T, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Replace__1_System_Collections_Generic_IEnumerable___0____0___0_
  commentId: M:Wintellect.PowerCollections.Algorithms.Replace``1(System.Collections.Generic.IEnumerable{``0},``0,``0)
  name.vb: Replace(Of T)(IEnumerable(Of T), T, T)
  fullName: Wintellect.PowerCollections.Algorithms.Replace<T>(System.Collections.Generic.IEnumerable<T>, T, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Replace(Of T)(System.Collections.Generic.IEnumerable(Of T), T, T)
  nameWithType: Algorithms.Replace<T>(IEnumerable<T>, T, T)
  nameWithType.vb: Algorithms.Replace(Of T)(IEnumerable(Of T), T, T)
- uid: Wintellect.PowerCollections.Algorithms.Replace``1(System.Collections.Generic.IEnumerable{``0},``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  name: Replace<T>(IEnumerable<T>, T, T, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Replace__1_System_Collections_Generic_IEnumerable___0____0___0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Replace``1(System.Collections.Generic.IEnumerable{``0},``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: Replace(Of T)(IEnumerable(Of T), T, T, IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Replace<T>(System.Collections.Generic.IEnumerable<T>, T, T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Replace(Of T)(System.Collections.Generic.IEnumerable(Of T), T, T, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.Replace<T>(IEnumerable<T>, T, T, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.Replace(Of T)(IEnumerable(Of T), T, T, IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Replace``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)
  name: Replace<T>(IEnumerable<T>, Predicate<T>, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Replace__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0_
  commentId: M:Wintellect.PowerCollections.Algorithms.Replace``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)
  name.vb: Replace(Of T)(IEnumerable(Of T), Predicate(Of T), T)
  fullName: Wintellect.PowerCollections.Algorithms.Replace<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Replace(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T), T)
  nameWithType: Algorithms.Replace<T>(IEnumerable<T>, Predicate<T>, T)
  nameWithType.vb: Algorithms.Replace(Of T)(IEnumerable(Of T), Predicate(Of T), T)
- uid: Wintellect.PowerCollections.Algorithms.ReplaceInPlace*
  name: ReplaceInPlace
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReplaceInPlace_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.ReplaceInPlace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.ReplaceInPlace
  nameWithType: Algorithms.ReplaceInPlace
- uid: Wintellect.PowerCollections.Algorithms.ReplaceInPlace``1(System.Collections.Generic.IList{``0},``0,``0)
  name: ReplaceInPlace<T>(IList<T>, T, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReplaceInPlace__1_System_Collections_Generic_IList___0____0___0_
  commentId: M:Wintellect.PowerCollections.Algorithms.ReplaceInPlace``1(System.Collections.Generic.IList{``0},``0,``0)
  name.vb: ReplaceInPlace(Of T)(IList(Of T), T, T)
  fullName: Wintellect.PowerCollections.Algorithms.ReplaceInPlace<T>(System.Collections.Generic.IList<T>, T, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ReplaceInPlace(Of T)(System.Collections.Generic.IList(Of T), T, T)
  nameWithType: Algorithms.ReplaceInPlace<T>(IList<T>, T, T)
  nameWithType.vb: Algorithms.ReplaceInPlace(Of T)(IList(Of T), T, T)
- uid: Wintellect.PowerCollections.Algorithms.ReplaceInPlace``1(System.Collections.Generic.IList{``0},``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  name: ReplaceInPlace<T>(IList<T>, T, T, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReplaceInPlace__1_System_Collections_Generic_IList___0____0___0_System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.ReplaceInPlace``1(System.Collections.Generic.IList{``0},``0,``0,System.Collections.Generic.IEqualityComparer{``0})
  name.vb: ReplaceInPlace(Of T)(IList(Of T), T, T, IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.ReplaceInPlace<T>(System.Collections.Generic.IList<T>, T, T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ReplaceInPlace(Of T)(System.Collections.Generic.IList(Of T), T, T, System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.ReplaceInPlace<T>(IList<T>, T, T, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.ReplaceInPlace(Of T)(IList(Of T), T, T, IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.ReplaceInPlace``1(System.Collections.Generic.IList{``0},System.Predicate{``0},``0)
  name: ReplaceInPlace<T>(IList<T>, Predicate<T>, T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReplaceInPlace__1_System_Collections_Generic_IList___0__System_Predicate___0____0_
  commentId: M:Wintellect.PowerCollections.Algorithms.ReplaceInPlace``1(System.Collections.Generic.IList{``0},System.Predicate{``0},``0)
  name.vb: ReplaceInPlace(Of T)(IList(Of T), Predicate(Of T), T)
  fullName: Wintellect.PowerCollections.Algorithms.ReplaceInPlace<T>(System.Collections.Generic.IList<T>, System.Predicate<T>, T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ReplaceInPlace(Of T)(System.Collections.Generic.IList(Of T), System.Predicate(Of T), T)
  nameWithType: Algorithms.ReplaceInPlace<T>(IList<T>, Predicate<T>, T)
  nameWithType.vb: Algorithms.ReplaceInPlace(Of T)(IList(Of T), Predicate(Of T), T)
- uid: Wintellect.PowerCollections.Algorithms.Reverse*
  name: Reverse
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Reverse_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Reverse
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Reverse
  nameWithType: Algorithms.Reverse
- uid: Wintellect.PowerCollections.Algorithms.Reverse``1(System.Collections.Generic.IList{``0})
  name: Reverse<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Reverse__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Reverse``1(System.Collections.Generic.IList{``0})
  name.vb: Reverse(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Reverse<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Reverse(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.Reverse<T>(IList<T>)
  nameWithType.vb: Algorithms.Reverse(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.ReverseInPlace*
  name: ReverseInPlace
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReverseInPlace_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.ReverseInPlace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.ReverseInPlace
  nameWithType: Algorithms.ReverseInPlace
- uid: Wintellect.PowerCollections.Algorithms.ReverseInPlace``1(System.Collections.Generic.IList{``0})
  name: ReverseInPlace<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ReverseInPlace__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.ReverseInPlace``1(System.Collections.Generic.IList{``0})
  name.vb: ReverseInPlace(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.ReverseInPlace<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ReverseInPlace(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.ReverseInPlace<T>(IList<T>)
  nameWithType.vb: Algorithms.ReverseInPlace(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Rotate*
  name: Rotate
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Rotate_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Rotate
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Rotate
  nameWithType: Algorithms.Rotate
- uid: Wintellect.PowerCollections.Algorithms.Rotate``1(System.Collections.Generic.IList{``0},System.Int32)
  name: Rotate<T>(IList<T>, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Rotate__1_System_Collections_Generic_IList___0__System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.Rotate``1(System.Collections.Generic.IList{``0},System.Int32)
  name.vb: Rotate(Of T)(IList(Of T), Int32)
  fullName: Wintellect.PowerCollections.Algorithms.Rotate<T>(System.Collections.Generic.IList<T>, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Rotate(Of T)(System.Collections.Generic.IList(Of T), System.Int32)
  nameWithType: Algorithms.Rotate<T>(IList<T>, Int32)
  nameWithType.vb: Algorithms.Rotate(Of T)(IList(Of T), Int32)
- uid: Wintellect.PowerCollections.Algorithms.RotateInPlace*
  name: RotateInPlace
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RotateInPlace_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.RotateInPlace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.RotateInPlace
  nameWithType: Algorithms.RotateInPlace
- uid: Wintellect.PowerCollections.Algorithms.RotateInPlace``1(System.Collections.Generic.IList{``0},System.Int32)
  name: RotateInPlace<T>(IList<T>, Int32)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_RotateInPlace__1_System_Collections_Generic_IList___0__System_Int32_
  commentId: M:Wintellect.PowerCollections.Algorithms.RotateInPlace``1(System.Collections.Generic.IList{``0},System.Int32)
  name.vb: RotateInPlace(Of T)(IList(Of T), Int32)
  fullName: Wintellect.PowerCollections.Algorithms.RotateInPlace<T>(System.Collections.Generic.IList<T>, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Algorithms.RotateInPlace(Of T)(System.Collections.Generic.IList(Of T), System.Int32)
  nameWithType: Algorithms.RotateInPlace<T>(IList<T>, Int32)
  nameWithType.vb: Algorithms.RotateInPlace(Of T)(IList(Of T), Int32)
- uid: Wintellect.PowerCollections.Algorithms.SearchForSubsequence*
  name: SearchForSubsequence
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SearchForSubsequence_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.SearchForSubsequence
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.SearchForSubsequence
  nameWithType: Algorithms.SearchForSubsequence
- uid: Wintellect.PowerCollections.Algorithms.SearchForSubsequence``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  name: SearchForSubsequence<T>(IList<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SearchForSubsequence__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SearchForSubsequence``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: SearchForSubsequence(Of T)(IList(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SearchForSubsequence<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SearchForSubsequence(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.SearchForSubsequence<T>(IList<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.SearchForSubsequence(Of T)(IList(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SearchForSubsequence``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SearchForSubsequence<T>(IList<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SearchForSubsequence__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SearchForSubsequence``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: SearchForSubsequence(Of T)(IList(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SearchForSubsequence<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SearchForSubsequence(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.SearchForSubsequence<T>(IList<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.SearchForSubsequence(Of T)(IList(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SearchForSubsequence``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name: SearchForSubsequence<T>(IList<T>, IEnumerable<T>, BinaryPredicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SearchForSubsequence__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__Wintellect_PowerCollections_BinaryPredicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SearchForSubsequence``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0},Wintellect.PowerCollections.BinaryPredicate{``0})
  name.vb: SearchForSubsequence(Of T)(IList(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SearchForSubsequence<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>, Wintellect.PowerCollections.BinaryPredicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SearchForSubsequence(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T), Wintellect.PowerCollections.BinaryPredicate(Of T))
  nameWithType: Algorithms.SearchForSubsequence<T>(IList<T>, IEnumerable<T>, BinaryPredicate<T>)
  nameWithType.vb: Algorithms.SearchForSubsequence(Of T)(IList(Of T), IEnumerable(Of T), BinaryPredicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SetDifference*
  name: SetDifference
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetDifference_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.SetDifference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.SetDifference
  nameWithType: Algorithms.SetDifference
- uid: Wintellect.PowerCollections.Algorithms.SetDifference``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: SetDifference<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetDifference__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SetDifference``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: SetDifference(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SetDifference<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SetDifference(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.SetDifference<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.SetDifference(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SetDifference``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SetDifference<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetDifference__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SetDifference``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: SetDifference(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SetDifference<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SetDifference(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.SetDifference<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.SetDifference(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SetIntersection*
  name: SetIntersection
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetIntersection_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.SetIntersection
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.SetIntersection
  nameWithType: Algorithms.SetIntersection
- uid: Wintellect.PowerCollections.Algorithms.SetIntersection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: SetIntersection<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetIntersection__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SetIntersection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: SetIntersection(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SetIntersection<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SetIntersection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.SetIntersection<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.SetIntersection(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SetIntersection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SetIntersection<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetIntersection__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SetIntersection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: SetIntersection(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SetIntersection<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SetIntersection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.SetIntersection<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.SetIntersection(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SetSymmetricDifference*
  name: SetSymmetricDifference
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetSymmetricDifference_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.SetSymmetricDifference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.SetSymmetricDifference
  nameWithType: Algorithms.SetSymmetricDifference
- uid: Wintellect.PowerCollections.Algorithms.SetSymmetricDifference``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: SetSymmetricDifference<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetSymmetricDifference__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SetSymmetricDifference``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: SetSymmetricDifference(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SetSymmetricDifference<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SetSymmetricDifference(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.SetSymmetricDifference<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.SetSymmetricDifference(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SetSymmetricDifference``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SetSymmetricDifference<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetSymmetricDifference__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SetSymmetricDifference``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: SetSymmetricDifference(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SetSymmetricDifference<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SetSymmetricDifference(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.SetSymmetricDifference<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.SetSymmetricDifference(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SetUnion*
  name: SetUnion
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetUnion_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.SetUnion
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.SetUnion
  nameWithType: Algorithms.SetUnion
- uid: Wintellect.PowerCollections.Algorithms.SetUnion``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: SetUnion<T>(IEnumerable<T>, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetUnion__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SetUnion``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name.vb: SetUnion(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SetUnion<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SetUnion(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.SetUnion<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType.vb: Algorithms.SetUnion(Of T)(IEnumerable(Of T), IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SetUnion``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SetUnion<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SetUnion__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEqualityComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SetUnion``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name.vb: SetUnion(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SetUnion<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SetUnion(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Algorithms.SetUnion<T>(IEnumerable<T>, IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Algorithms.SetUnion(Of T)(IEnumerable(Of T), IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Sort*
  name: Sort
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Sort_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Sort
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Sort
  nameWithType: Algorithms.Sort
- uid: Wintellect.PowerCollections.Algorithms.Sort``1(System.Collections.Generic.IEnumerable{``0})
  name: Sort<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Sort__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Sort``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: Sort(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Sort<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Sort(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.Sort<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.Sort(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name: Sort<T>(IEnumerable<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Sort__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name.vb: Sort(Of T)(IEnumerable(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Sort<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Sort(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.Sort<T>(IEnumerable<T>, IComparer<T>)
  nameWithType.vb: Algorithms.Sort(Of T)(IEnumerable(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name: Sort<T>(IEnumerable<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Sort__1_System_Collections_Generic_IEnumerable___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name.vb: Sort(Of T)(IEnumerable(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Sort<T>(System.Collections.Generic.IEnumerable<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Sort(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.Sort<T>(IEnumerable<T>, Comparison<T>)
  nameWithType.vb: Algorithms.Sort(Of T)(IEnumerable(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SortInPlace*
  name: SortInPlace
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SortInPlace_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.SortInPlace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.SortInPlace
  nameWithType: Algorithms.SortInPlace
- uid: Wintellect.PowerCollections.Algorithms.SortInPlace``1(System.Collections.Generic.IList{``0})
  name: SortInPlace<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SortInPlace__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SortInPlace``1(System.Collections.Generic.IList{``0})
  name.vb: SortInPlace(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SortInPlace<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SortInPlace(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.SortInPlace<T>(IList<T>)
  nameWithType.vb: Algorithms.SortInPlace(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SortInPlace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})
  name: SortInPlace<T>(IList<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SortInPlace__1_System_Collections_Generic_IList___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SortInPlace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})
  name.vb: SortInPlace(Of T)(IList(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SortInPlace<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SortInPlace(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.SortInPlace<T>(IList<T>, IComparer<T>)
  nameWithType.vb: Algorithms.SortInPlace(Of T)(IList(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.SortInPlace``1(System.Collections.Generic.IList{``0},System.Comparison{``0})
  name: SortInPlace<T>(IList<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_SortInPlace__1_System_Collections_Generic_IList___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.SortInPlace``1(System.Collections.Generic.IList{``0},System.Comparison{``0})
  name.vb: SortInPlace(Of T)(IList(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.SortInPlace<T>(System.Collections.Generic.IList<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.SortInPlace(Of T)(System.Collections.Generic.IList(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.SortInPlace<T>(IList<T>, Comparison<T>)
  nameWithType.vb: Algorithms.SortInPlace(Of T)(IList(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.StablePartition*
  name: StablePartition
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StablePartition_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.StablePartition
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.StablePartition
  nameWithType: Algorithms.StablePartition
- uid: Wintellect.PowerCollections.Algorithms.StablePartition``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name: StablePartition<T>(IList<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StablePartition__1_System_Collections_Generic_IList___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.StablePartition``1(System.Collections.Generic.IList{``0},System.Predicate{``0})
  name.vb: StablePartition(Of T)(IList(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.StablePartition<T>(System.Collections.Generic.IList<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.StablePartition(Of T)(System.Collections.Generic.IList(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.StablePartition<T>(IList<T>, Predicate<T>)
  nameWithType.vb: Algorithms.StablePartition(Of T)(IList(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.StableSort*
  name: StableSort
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StableSort_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.StableSort
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.StableSort
  nameWithType: Algorithms.StableSort
- uid: Wintellect.PowerCollections.Algorithms.StableSort``1(System.Collections.Generic.IEnumerable{``0})
  name: StableSort<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StableSort__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.StableSort``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: StableSort(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.StableSort<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.StableSort(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.StableSort<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.StableSort(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.StableSort``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name: StableSort<T>(IEnumerable<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StableSort__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.StableSort``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  name.vb: StableSort(Of T)(IEnumerable(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.StableSort<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.StableSort(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.StableSort<T>(IEnumerable<T>, IComparer<T>)
  nameWithType.vb: Algorithms.StableSort(Of T)(IEnumerable(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.StableSort``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name: StableSort<T>(IEnumerable<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StableSort__1_System_Collections_Generic_IEnumerable___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.StableSort``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})
  name.vb: StableSort(Of T)(IEnumerable(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.StableSort<T>(System.Collections.Generic.IEnumerable<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.StableSort(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.StableSort<T>(IEnumerable<T>, Comparison<T>)
  nameWithType.vb: Algorithms.StableSort(Of T)(IEnumerable(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.StableSortInPlace*
  name: StableSortInPlace
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StableSortInPlace_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.StableSortInPlace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.StableSortInPlace
  nameWithType: Algorithms.StableSortInPlace
- uid: Wintellect.PowerCollections.Algorithms.StableSortInPlace``1(System.Collections.Generic.IList{``0})
  name: StableSortInPlace<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StableSortInPlace__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.StableSortInPlace``1(System.Collections.Generic.IList{``0})
  name.vb: StableSortInPlace(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.StableSortInPlace<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.StableSortInPlace(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.StableSortInPlace<T>(IList<T>)
  nameWithType.vb: Algorithms.StableSortInPlace(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Algorithms.StableSortInPlace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})
  name: StableSortInPlace<T>(IList<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StableSortInPlace__1_System_Collections_Generic_IList___0__System_Collections_Generic_IComparer___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.StableSortInPlace``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0})
  name.vb: StableSortInPlace(Of T)(IList(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.StableSortInPlace<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.StableSortInPlace(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: Algorithms.StableSortInPlace<T>(IList<T>, IComparer<T>)
  nameWithType.vb: Algorithms.StableSortInPlace(Of T)(IList(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.Algorithms.StableSortInPlace``1(System.Collections.Generic.IList{``0},System.Comparison{``0})
  name: StableSortInPlace<T>(IList<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_StableSortInPlace__1_System_Collections_Generic_IList___0__System_Comparison___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.StableSortInPlace``1(System.Collections.Generic.IList{``0},System.Comparison{``0})
  name.vb: StableSortInPlace(Of T)(IList(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.StableSortInPlace<T>(System.Collections.Generic.IList<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.StableSortInPlace(Of T)(System.Collections.Generic.IList(Of T), System.Comparison(Of T))
  nameWithType: Algorithms.StableSortInPlace<T>(IList<T>, Comparison<T>)
  nameWithType.vb: Algorithms.StableSortInPlace(Of T)(IList(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.Algorithms.ToArray*
  name: ToArray
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ToArray_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.ToArray
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.ToArray
  nameWithType: Algorithms.ToArray
- uid: Wintellect.PowerCollections.Algorithms.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  name: ToArray<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ToArray__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: ToArray(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.ToArray<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ToArray(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.ToArray<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.ToArray(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ToString_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.ToString
  nameWithType: Algorithms.ToString
- uid: Wintellect.PowerCollections.Algorithms.ToString``1(System.Collections.Generic.IEnumerable{``0})
  name: ToString<T>(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ToString__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.ToString``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: ToString(Of T)(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.ToString<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ToString(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Algorithms.ToString<T>(IEnumerable<T>)
  nameWithType.vb: Algorithms.ToString(Of T)(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Algorithms.ToString``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.String,System.String,System.String)
  name: ToString<T>(IEnumerable<T>, Boolean, String, String, String)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ToString__1_System_Collections_Generic_IEnumerable___0__System_Boolean_System_String_System_String_System_String_
  commentId: M:Wintellect.PowerCollections.Algorithms.ToString``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.String,System.String,System.String)
  name.vb: ToString(Of T)(IEnumerable(Of T), Boolean, String, String, String)
  fullName: Wintellect.PowerCollections.Algorithms.ToString<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean, System.String, System.String, System.String)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ToString(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean, System.String, System.String, System.String)
  nameWithType: Algorithms.ToString<T>(IEnumerable<T>, Boolean, String, String, String)
  nameWithType.vb: Algorithms.ToString(Of T)(IEnumerable(Of T), Boolean, String, String, String)
- uid: Wintellect.PowerCollections.Algorithms.ToString``2(System.Collections.Generic.IDictionary{``0,``1})
  name: ToString<TKey, TValue>(IDictionary<TKey, TValue>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_ToString__2_System_Collections_Generic_IDictionary___0___1__
  commentId: M:Wintellect.PowerCollections.Algorithms.ToString``2(System.Collections.Generic.IDictionary{``0,``1})
  name.vb: ToString(Of TKey, TValue)(IDictionary(Of TKey, TValue))
  fullName: Wintellect.PowerCollections.Algorithms.ToString<TKey, TValue>(System.Collections.Generic.IDictionary<TKey, TValue>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.ToString(Of TKey, TValue)(System.Collections.Generic.IDictionary(Of TKey, TValue))
  nameWithType: Algorithms.ToString<TKey, TValue>(IDictionary<TKey, TValue>)
  nameWithType.vb: Algorithms.ToString(Of TKey, TValue)(IDictionary(Of TKey, TValue))
- uid: Wintellect.PowerCollections.Algorithms.TrueForAll*
  name: TrueForAll
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TrueForAll_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.TrueForAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.TrueForAll
  nameWithType: Algorithms.TrueForAll
- uid: Wintellect.PowerCollections.Algorithms.TrueForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name: TrueForAll<T>(IEnumerable<T>, Predicate<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TrueForAll__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.TrueForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  name.vb: TrueForAll(Of T)(IEnumerable(Of T), Predicate(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.TrueForAll<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.TrueForAll(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T))
  nameWithType: Algorithms.TrueForAll<T>(IEnumerable<T>, Predicate<T>)
  nameWithType.vb: Algorithms.TrueForAll(Of T)(IEnumerable(Of T), Predicate(Of T))
- uid: Wintellect.PowerCollections.Algorithms.TryFindFirstWhere*
  name: TryFindFirstWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TryFindFirstWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.TryFindFirstWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.TryFindFirstWhere
  nameWithType: Algorithms.TryFindFirstWhere
- uid: Wintellect.PowerCollections.Algorithms.TryFindFirstWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
  name: TryFindFirstWhere<T>(IEnumerable<T>, Predicate<T>, out T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TryFindFirstWhere__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0__
  commentId: M:Wintellect.PowerCollections.Algorithms.TryFindFirstWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
  name.vb: TryFindFirstWhere(Of T)(IEnumerable(Of T), Predicate(Of T), ByRef T)
  fullName: Wintellect.PowerCollections.Algorithms.TryFindFirstWhere<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>, out T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.TryFindFirstWhere(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T), ByRef T)
  nameWithType: Algorithms.TryFindFirstWhere<T>(IEnumerable<T>, Predicate<T>, out T)
  nameWithType.vb: Algorithms.TryFindFirstWhere(Of T)(IEnumerable(Of T), Predicate(Of T), ByRef T)
- uid: Wintellect.PowerCollections.Algorithms.TryFindLastWhere*
  name: TryFindLastWhere
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TryFindLastWhere_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.TryFindLastWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.TryFindLastWhere
  nameWithType: Algorithms.TryFindLastWhere
- uid: Wintellect.PowerCollections.Algorithms.TryFindLastWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
  name: TryFindLastWhere<T>(IEnumerable<T>, Predicate<T>, out T)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TryFindLastWhere__1_System_Collections_Generic_IEnumerable___0__System_Predicate___0____0__
  commentId: M:Wintellect.PowerCollections.Algorithms.TryFindLastWhere``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0@)
  name.vb: TryFindLastWhere(Of T)(IEnumerable(Of T), Predicate(Of T), ByRef T)
  fullName: Wintellect.PowerCollections.Algorithms.TryFindLastWhere<T>(System.Collections.Generic.IEnumerable<T>, System.Predicate<T>, out T)
  fullName.vb: Wintellect.PowerCollections.Algorithms.TryFindLastWhere(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Predicate(Of T), ByRef T)
  nameWithType: Algorithms.TryFindLastWhere<T>(IEnumerable<T>, Predicate<T>, out T)
  nameWithType.vb: Algorithms.TryFindLastWhere(Of T)(IEnumerable(Of T), Predicate(Of T), ByRef T)
- uid: Wintellect.PowerCollections.Algorithms.TypedAs*
  name: TypedAs
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TypedAs_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.TypedAs
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.TypedAs
  nameWithType: Algorithms.TypedAs
- uid: Wintellect.PowerCollections.Algorithms.TypedAs``1(System.Collections.ICollection)
  name: TypedAs<T>(ICollection)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TypedAs__1_System_Collections_ICollection_
  commentId: M:Wintellect.PowerCollections.Algorithms.TypedAs``1(System.Collections.ICollection)
  name.vb: TypedAs(Of T)(ICollection)
  fullName: Wintellect.PowerCollections.Algorithms.TypedAs<T>(System.Collections.ICollection)
  fullName.vb: Wintellect.PowerCollections.Algorithms.TypedAs(Of T)(System.Collections.ICollection)
  nameWithType: Algorithms.TypedAs<T>(ICollection)
  nameWithType.vb: Algorithms.TypedAs(Of T)(ICollection)
- uid: Wintellect.PowerCollections.Algorithms.TypedAs``1(System.Collections.IEnumerable)
  name: TypedAs<T>(IEnumerable)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TypedAs__1_System_Collections_IEnumerable_
  commentId: M:Wintellect.PowerCollections.Algorithms.TypedAs``1(System.Collections.IEnumerable)
  name.vb: TypedAs(Of T)(IEnumerable)
  fullName: Wintellect.PowerCollections.Algorithms.TypedAs<T>(System.Collections.IEnumerable)
  fullName.vb: Wintellect.PowerCollections.Algorithms.TypedAs(Of T)(System.Collections.IEnumerable)
  nameWithType: Algorithms.TypedAs<T>(IEnumerable)
  nameWithType.vb: Algorithms.TypedAs(Of T)(IEnumerable)
- uid: Wintellect.PowerCollections.Algorithms.TypedAs``1(System.Collections.IList)
  name: TypedAs<T>(IList)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_TypedAs__1_System_Collections_IList_
  commentId: M:Wintellect.PowerCollections.Algorithms.TypedAs``1(System.Collections.IList)
  name.vb: TypedAs(Of T)(IList)
  fullName: Wintellect.PowerCollections.Algorithms.TypedAs<T>(System.Collections.IList)
  fullName.vb: Wintellect.PowerCollections.Algorithms.TypedAs(Of T)(System.Collections.IList)
  nameWithType: Algorithms.TypedAs<T>(IList)
  nameWithType.vb: Algorithms.TypedAs(Of T)(IList)
- uid: Wintellect.PowerCollections.Algorithms.Untyped*
  name: Untyped
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Untyped_
  commentId: Overload:Wintellect.PowerCollections.Algorithms.Untyped
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Algorithms.Untyped
  nameWithType: Algorithms.Untyped
- uid: Wintellect.PowerCollections.Algorithms.Untyped``1(System.Collections.Generic.ICollection{``0})
  name: Untyped<T>(ICollection<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Untyped__1_System_Collections_Generic_ICollection___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Untyped``1(System.Collections.Generic.ICollection{``0})
  name.vb: Untyped(Of T)(ICollection(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Untyped<T>(System.Collections.Generic.ICollection<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Untyped(Of T)(System.Collections.Generic.ICollection(Of T))
  nameWithType: Algorithms.Untyped<T>(ICollection<T>)
  nameWithType.vb: Algorithms.Untyped(Of T)(ICollection(Of T))
- uid: Wintellect.PowerCollections.Algorithms.Untyped``1(System.Collections.Generic.IList{``0})
  name: Untyped<T>(IList<T>)
  href: api/Wintellect.PowerCollections.Algorithms.html#Wintellect_PowerCollections_Algorithms_Untyped__1_System_Collections_Generic_IList___0__
  commentId: M:Wintellect.PowerCollections.Algorithms.Untyped``1(System.Collections.Generic.IList{``0})
  name.vb: Untyped(Of T)(IList(Of T))
  fullName: Wintellect.PowerCollections.Algorithms.Untyped<T>(System.Collections.Generic.IList<T>)
  fullName.vb: Wintellect.PowerCollections.Algorithms.Untyped(Of T)(System.Collections.Generic.IList(Of T))
  nameWithType: Algorithms.Untyped<T>(IList<T>)
  nameWithType.vb: Algorithms.Untyped(Of T)(IList(Of T))
- uid: Wintellect.PowerCollections.Bag`1
  name: Bag<T>
  href: api/Wintellect.PowerCollections.Bag-1.html
  commentId: T:Wintellect.PowerCollections.Bag`1
  name.vb: Bag(Of T)
  fullName: Wintellect.PowerCollections.Bag<T>
  fullName.vb: Wintellect.PowerCollections.Bag(Of T)
  nameWithType: Bag<T>
  nameWithType.vb: Bag(Of T)
- uid: Wintellect.PowerCollections.Bag`1.#ctor
  name: Bag()
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1__ctor
  commentId: M:Wintellect.PowerCollections.Bag`1.#ctor
  fullName: Wintellect.PowerCollections.Bag<T>.Bag()
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Bag()
  nameWithType: Bag<T>.Bag()
  nameWithType.vb: Bag(Of T).Bag()
- uid: Wintellect.PowerCollections.Bag`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name: Bag(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1__ctor_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name.vb: Bag(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.Bag(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Bag(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Bag<T>.Bag(IEnumerable<T>)
  nameWithType.vb: Bag(Of T).Bag(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Bag`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  name: Bag(IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1__ctor_System_Collections_Generic_IEnumerable__0__System_Collections_Generic_IEqualityComparer__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  name.vb: Bag(IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.Bag(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Bag(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Bag<T>.Bag(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Bag(Of T).Bag(IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Bag`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  name: Bag(IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1__ctor_System_Collections_Generic_IEqualityComparer__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  name.vb: Bag(IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.Bag(System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Bag(System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Bag<T>.Bag(IEqualityComparer<T>)
  nameWithType.vb: Bag(Of T).Bag(IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Bag`1.#ctor*
  name: Bag
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1__ctor_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Bag
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Bag
  nameWithType: Bag<T>.Bag
  nameWithType.vb: Bag(Of T).Bag
- uid: Wintellect.PowerCollections.Bag`1.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Add__0_
  commentId: M:Wintellect.PowerCollections.Bag`1.Add(`0)
  fullName: Wintellect.PowerCollections.Bag<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Add(T)
  nameWithType: Bag<T>.Add(T)
  nameWithType.vb: Bag(Of T).Add(T)
- uid: Wintellect.PowerCollections.Bag`1.Add*
  name: Add
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Add_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Add
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Add
  nameWithType: Bag<T>.Add
  nameWithType.vb: Bag(Of T).Add
- uid: Wintellect.PowerCollections.Bag`1.AddMany(System.Collections.Generic.IEnumerable{`0})
  name: AddMany(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_AddMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.AddMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddMany(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.AddMany(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).AddMany(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Bag<T>.AddMany(IEnumerable<T>)
  nameWithType.vb: Bag(Of T).AddMany(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Bag`1.AddMany*
  name: AddMany
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_AddMany_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.AddMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.AddMany
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).AddMany
  nameWithType: Bag<T>.AddMany
  nameWithType.vb: Bag(Of T).AddMany
- uid: Wintellect.PowerCollections.Bag`1.AddRepresentative(`0)
  name: AddRepresentative(T)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_AddRepresentative__0_
  commentId: M:Wintellect.PowerCollections.Bag`1.AddRepresentative(`0)
  fullName: Wintellect.PowerCollections.Bag<T>.AddRepresentative(T)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).AddRepresentative(T)
  nameWithType: Bag<T>.AddRepresentative(T)
  nameWithType.vb: Bag(Of T).AddRepresentative(T)
- uid: Wintellect.PowerCollections.Bag`1.AddRepresentative*
  name: AddRepresentative
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_AddRepresentative_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.AddRepresentative
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.AddRepresentative
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).AddRepresentative
  nameWithType: Bag<T>.AddRepresentative
  nameWithType.vb: Bag(Of T).AddRepresentative
- uid: Wintellect.PowerCollections.Bag`1.ChangeNumberOfCopies(`0,System.Int32)
  name: ChangeNumberOfCopies(T, Int32)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_ChangeNumberOfCopies__0_System_Int32_
  commentId: M:Wintellect.PowerCollections.Bag`1.ChangeNumberOfCopies(`0,System.Int32)
  fullName: Wintellect.PowerCollections.Bag<T>.ChangeNumberOfCopies(T, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).ChangeNumberOfCopies(T, System.Int32)
  nameWithType: Bag<T>.ChangeNumberOfCopies(T, Int32)
  nameWithType.vb: Bag(Of T).ChangeNumberOfCopies(T, Int32)
- uid: Wintellect.PowerCollections.Bag`1.ChangeNumberOfCopies*
  name: ChangeNumberOfCopies
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_ChangeNumberOfCopies_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.ChangeNumberOfCopies
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.ChangeNumberOfCopies
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).ChangeNumberOfCopies
  nameWithType: Bag<T>.ChangeNumberOfCopies
  nameWithType.vb: Bag(Of T).ChangeNumberOfCopies
- uid: Wintellect.PowerCollections.Bag`1.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Clear
  commentId: M:Wintellect.PowerCollections.Bag`1.Clear
  fullName: Wintellect.PowerCollections.Bag<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Clear()
  nameWithType: Bag<T>.Clear()
  nameWithType.vb: Bag(Of T).Clear()
- uid: Wintellect.PowerCollections.Bag`1.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Clear_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Clear
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Clear
  nameWithType: Bag<T>.Clear
  nameWithType.vb: Bag(Of T).Clear
- uid: Wintellect.PowerCollections.Bag`1.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Clone
  commentId: M:Wintellect.PowerCollections.Bag`1.Clone
  fullName: Wintellect.PowerCollections.Bag<T>.Clone()
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Clone()
  nameWithType: Bag<T>.Clone()
  nameWithType.vb: Bag(Of T).Clone()
- uid: Wintellect.PowerCollections.Bag`1.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Clone_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Clone
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Clone
  nameWithType: Bag<T>.Clone
  nameWithType.vb: Bag(Of T).Clone
- uid: Wintellect.PowerCollections.Bag`1.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_CloneContents
  commentId: M:Wintellect.PowerCollections.Bag`1.CloneContents
  fullName: Wintellect.PowerCollections.Bag<T>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).CloneContents()
  nameWithType: Bag<T>.CloneContents()
  nameWithType.vb: Bag(Of T).CloneContents()
- uid: Wintellect.PowerCollections.Bag`1.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.CloneContents
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).CloneContents
  nameWithType: Bag<T>.CloneContents
  nameWithType.vb: Bag(Of T).CloneContents
- uid: Wintellect.PowerCollections.Bag`1.Comparer
  name: Comparer
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Comparer
  commentId: P:Wintellect.PowerCollections.Bag`1.Comparer
  fullName: Wintellect.PowerCollections.Bag<T>.Comparer
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Comparer
  nameWithType: Bag<T>.Comparer
  nameWithType.vb: Bag(Of T).Comparer
- uid: Wintellect.PowerCollections.Bag`1.Comparer*
  name: Comparer
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Comparer_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Comparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Comparer
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Comparer
  nameWithType: Bag<T>.Comparer
  nameWithType.vb: Bag(Of T).Comparer
- uid: Wintellect.PowerCollections.Bag`1.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Contains__0_
  commentId: M:Wintellect.PowerCollections.Bag`1.Contains(`0)
  fullName: Wintellect.PowerCollections.Bag<T>.Contains(T)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Contains(T)
  nameWithType: Bag<T>.Contains(T)
  nameWithType.vb: Bag(Of T).Contains(T)
- uid: Wintellect.PowerCollections.Bag`1.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Contains_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Contains
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Contains
  nameWithType: Bag<T>.Contains
  nameWithType.vb: Bag(Of T).Contains
- uid: Wintellect.PowerCollections.Bag`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Count
  commentId: P:Wintellect.PowerCollections.Bag`1.Count
  fullName: Wintellect.PowerCollections.Bag<T>.Count
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Count
  nameWithType: Bag<T>.Count
  nameWithType.vb: Bag(Of T).Count
- uid: Wintellect.PowerCollections.Bag`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Count_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Count
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Count
  nameWithType: Bag<T>.Count
  nameWithType.vb: Bag(Of T).Count
- uid: Wintellect.PowerCollections.Bag`1.Difference(Wintellect.PowerCollections.Bag{`0})
  name: Difference(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Difference_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.Difference(Wintellect.PowerCollections.Bag{`0})
  name.vb: Difference(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.Difference(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Difference(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.Difference(Bag<T>)
  nameWithType.vb: Bag(Of T).Difference(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.Difference*
  name: Difference
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Difference_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Difference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Difference
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Difference
  nameWithType: Bag<T>.Difference
  nameWithType.vb: Bag(Of T).Difference
- uid: Wintellect.PowerCollections.Bag`1.DifferenceWith(Wintellect.PowerCollections.Bag{`0})
  name: DifferenceWith(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_DifferenceWith_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.DifferenceWith(Wintellect.PowerCollections.Bag{`0})
  name.vb: DifferenceWith(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.DifferenceWith(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).DifferenceWith(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.DifferenceWith(Bag<T>)
  nameWithType.vb: Bag(Of T).DifferenceWith(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.DifferenceWith*
  name: DifferenceWith
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_DifferenceWith_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.DifferenceWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.DifferenceWith
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).DifferenceWith
  nameWithType: Bag<T>.DifferenceWith
  nameWithType.vb: Bag(Of T).DifferenceWith
- uid: Wintellect.PowerCollections.Bag`1.DistinctItems
  name: DistinctItems()
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_DistinctItems
  commentId: M:Wintellect.PowerCollections.Bag`1.DistinctItems
  fullName: Wintellect.PowerCollections.Bag<T>.DistinctItems()
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).DistinctItems()
  nameWithType: Bag<T>.DistinctItems()
  nameWithType.vb: Bag(Of T).DistinctItems()
- uid: Wintellect.PowerCollections.Bag`1.DistinctItems*
  name: DistinctItems
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_DistinctItems_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.DistinctItems
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.DistinctItems
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).DistinctItems
  nameWithType: Bag<T>.DistinctItems
  nameWithType.vb: Bag(Of T).DistinctItems
- uid: Wintellect.PowerCollections.Bag`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.Bag`1.GetEnumerator
  fullName: Wintellect.PowerCollections.Bag<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).GetEnumerator()
  nameWithType: Bag<T>.GetEnumerator()
  nameWithType.vb: Bag(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.Bag`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).GetEnumerator
  nameWithType: Bag<T>.GetEnumerator
  nameWithType.vb: Bag(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.Bag`1.GetRepresentativeItem(`0,`0@)
  name: GetRepresentativeItem(T, out T)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_GetRepresentativeItem__0__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.GetRepresentativeItem(`0,`0@)
  name.vb: GetRepresentativeItem(T, ByRef T)
  fullName: Wintellect.PowerCollections.Bag<T>.GetRepresentativeItem(T, out T)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).GetRepresentativeItem(T, ByRef T)
  nameWithType: Bag<T>.GetRepresentativeItem(T, out T)
  nameWithType.vb: Bag(Of T).GetRepresentativeItem(T, ByRef T)
- uid: Wintellect.PowerCollections.Bag`1.GetRepresentativeItem*
  name: GetRepresentativeItem
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_GetRepresentativeItem_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.GetRepresentativeItem
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.GetRepresentativeItem
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).GetRepresentativeItem
  nameWithType: Bag<T>.GetRepresentativeItem
  nameWithType.vb: Bag(Of T).GetRepresentativeItem
- uid: Wintellect.PowerCollections.Bag`1.Intersection(Wintellect.PowerCollections.Bag{`0})
  name: Intersection(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Intersection_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.Intersection(Wintellect.PowerCollections.Bag{`0})
  name.vb: Intersection(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.Intersection(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Intersection(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.Intersection(Bag<T>)
  nameWithType.vb: Bag(Of T).Intersection(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.Intersection*
  name: Intersection
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Intersection_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Intersection
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Intersection
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Intersection
  nameWithType: Bag<T>.Intersection
  nameWithType.vb: Bag(Of T).Intersection
- uid: Wintellect.PowerCollections.Bag`1.IntersectionWith(Wintellect.PowerCollections.Bag{`0})
  name: IntersectionWith(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IntersectionWith_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.IntersectionWith(Wintellect.PowerCollections.Bag{`0})
  name.vb: IntersectionWith(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.IntersectionWith(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IntersectionWith(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.IntersectionWith(Bag<T>)
  nameWithType.vb: Bag(Of T).IntersectionWith(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.IntersectionWith*
  name: IntersectionWith
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IntersectionWith_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.IntersectionWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.IntersectionWith
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IntersectionWith
  nameWithType: Bag<T>.IntersectionWith
  nameWithType.vb: Bag(Of T).IntersectionWith
- uid: Wintellect.PowerCollections.Bag`1.IsDisjointFrom(Wintellect.PowerCollections.Bag{`0})
  name: IsDisjointFrom(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsDisjointFrom_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.IsDisjointFrom(Wintellect.PowerCollections.Bag{`0})
  name.vb: IsDisjointFrom(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.IsDisjointFrom(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsDisjointFrom(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.IsDisjointFrom(Bag<T>)
  nameWithType.vb: Bag(Of T).IsDisjointFrom(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.IsDisjointFrom*
  name: IsDisjointFrom
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsDisjointFrom_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.IsDisjointFrom
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.IsDisjointFrom
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsDisjointFrom
  nameWithType: Bag<T>.IsDisjointFrom
  nameWithType.vb: Bag(Of T).IsDisjointFrom
- uid: Wintellect.PowerCollections.Bag`1.IsEqualTo(Wintellect.PowerCollections.Bag{`0})
  name: IsEqualTo(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsEqualTo_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.IsEqualTo(Wintellect.PowerCollections.Bag{`0})
  name.vb: IsEqualTo(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.IsEqualTo(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsEqualTo(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.IsEqualTo(Bag<T>)
  nameWithType.vb: Bag(Of T).IsEqualTo(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.IsEqualTo*
  name: IsEqualTo
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsEqualTo_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.IsEqualTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.IsEqualTo
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsEqualTo
  nameWithType: Bag<T>.IsEqualTo
  nameWithType.vb: Bag(Of T).IsEqualTo
- uid: Wintellect.PowerCollections.Bag`1.IsProperSubsetOf(Wintellect.PowerCollections.Bag{`0})
  name: IsProperSubsetOf(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsProperSubsetOf_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.IsProperSubsetOf(Wintellect.PowerCollections.Bag{`0})
  name.vb: IsProperSubsetOf(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.IsProperSubsetOf(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsProperSubsetOf(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.IsProperSubsetOf(Bag<T>)
  nameWithType.vb: Bag(Of T).IsProperSubsetOf(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsProperSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.IsProperSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.IsProperSubsetOf
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsProperSubsetOf
  nameWithType: Bag<T>.IsProperSubsetOf
  nameWithType.vb: Bag(Of T).IsProperSubsetOf
- uid: Wintellect.PowerCollections.Bag`1.IsProperSupersetOf(Wintellect.PowerCollections.Bag{`0})
  name: IsProperSupersetOf(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsProperSupersetOf_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.IsProperSupersetOf(Wintellect.PowerCollections.Bag{`0})
  name.vb: IsProperSupersetOf(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.IsProperSupersetOf(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsProperSupersetOf(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.IsProperSupersetOf(Bag<T>)
  nameWithType.vb: Bag(Of T).IsProperSupersetOf(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsProperSupersetOf_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.IsProperSupersetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.IsProperSupersetOf
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsProperSupersetOf
  nameWithType: Bag<T>.IsProperSupersetOf
  nameWithType.vb: Bag(Of T).IsProperSupersetOf
- uid: Wintellect.PowerCollections.Bag`1.IsSubsetOf(Wintellect.PowerCollections.Bag{`0})
  name: IsSubsetOf(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsSubsetOf_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.IsSubsetOf(Wintellect.PowerCollections.Bag{`0})
  name.vb: IsSubsetOf(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.IsSubsetOf(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsSubsetOf(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.IsSubsetOf(Bag<T>)
  nameWithType.vb: Bag(Of T).IsSubsetOf(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.IsSubsetOf*
  name: IsSubsetOf
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.IsSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.IsSubsetOf
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsSubsetOf
  nameWithType: Bag<T>.IsSubsetOf
  nameWithType.vb: Bag(Of T).IsSubsetOf
- uid: Wintellect.PowerCollections.Bag`1.IsSupersetOf(Wintellect.PowerCollections.Bag{`0})
  name: IsSupersetOf(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsSupersetOf_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.IsSupersetOf(Wintellect.PowerCollections.Bag{`0})
  name.vb: IsSupersetOf(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.IsSupersetOf(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsSupersetOf(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.IsSupersetOf(Bag<T>)
  nameWithType.vb: Bag(Of T).IsSupersetOf(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.IsSupersetOf*
  name: IsSupersetOf
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_IsSupersetOf_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.IsSupersetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.IsSupersetOf
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).IsSupersetOf
  nameWithType: Bag<T>.IsSupersetOf
  nameWithType.vb: Bag(Of T).IsSupersetOf
- uid: Wintellect.PowerCollections.Bag`1.NumberOfCopies(`0)
  name: NumberOfCopies(T)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_NumberOfCopies__0_
  commentId: M:Wintellect.PowerCollections.Bag`1.NumberOfCopies(`0)
  fullName: Wintellect.PowerCollections.Bag<T>.NumberOfCopies(T)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).NumberOfCopies(T)
  nameWithType: Bag<T>.NumberOfCopies(T)
  nameWithType.vb: Bag(Of T).NumberOfCopies(T)
- uid: Wintellect.PowerCollections.Bag`1.NumberOfCopies*
  name: NumberOfCopies
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_NumberOfCopies_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.NumberOfCopies
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.NumberOfCopies
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).NumberOfCopies
  nameWithType: Bag<T>.NumberOfCopies
  nameWithType.vb: Bag(Of T).NumberOfCopies
- uid: Wintellect.PowerCollections.Bag`1.Remove(`0)
  name: Remove(T)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Remove__0_
  commentId: M:Wintellect.PowerCollections.Bag`1.Remove(`0)
  fullName: Wintellect.PowerCollections.Bag<T>.Remove(T)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Remove(T)
  nameWithType: Bag<T>.Remove(T)
  nameWithType.vb: Bag(Of T).Remove(T)
- uid: Wintellect.PowerCollections.Bag`1.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Remove_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Remove
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Remove
  nameWithType: Bag<T>.Remove
  nameWithType.vb: Bag(Of T).Remove
- uid: Wintellect.PowerCollections.Bag`1.RemoveAllCopies(`0)
  name: RemoveAllCopies(T)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_RemoveAllCopies__0_
  commentId: M:Wintellect.PowerCollections.Bag`1.RemoveAllCopies(`0)
  fullName: Wintellect.PowerCollections.Bag<T>.RemoveAllCopies(T)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).RemoveAllCopies(T)
  nameWithType: Bag<T>.RemoveAllCopies(T)
  nameWithType.vb: Bag(Of T).RemoveAllCopies(T)
- uid: Wintellect.PowerCollections.Bag`1.RemoveAllCopies*
  name: RemoveAllCopies
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_RemoveAllCopies_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.RemoveAllCopies
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.RemoveAllCopies
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).RemoveAllCopies
  nameWithType: Bag<T>.RemoveAllCopies
  nameWithType.vb: Bag(Of T).RemoveAllCopies
- uid: Wintellect.PowerCollections.Bag`1.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name: RemoveMany(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_RemoveMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: RemoveMany(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.RemoveMany(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).RemoveMany(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Bag<T>.RemoveMany(IEnumerable<T>)
  nameWithType.vb: Bag(Of T).RemoveMany(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Bag`1.RemoveMany*
  name: RemoveMany
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_RemoveMany_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.RemoveMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.RemoveMany
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).RemoveMany
  nameWithType: Bag<T>.RemoveMany
  nameWithType.vb: Bag(Of T).RemoveMany
- uid: Wintellect.PowerCollections.Bag`1.Sum(Wintellect.PowerCollections.Bag{`0})
  name: Sum(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Sum_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.Sum(Wintellect.PowerCollections.Bag{`0})
  name.vb: Sum(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.Sum(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Sum(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.Sum(Bag<T>)
  nameWithType.vb: Bag(Of T).Sum(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.Sum*
  name: Sum
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Sum_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Sum
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Sum
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Sum
  nameWithType: Bag<T>.Sum
  nameWithType.vb: Bag(Of T).Sum
- uid: Wintellect.PowerCollections.Bag`1.SumWith(Wintellect.PowerCollections.Bag{`0})
  name: SumWith(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_SumWith_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.SumWith(Wintellect.PowerCollections.Bag{`0})
  name.vb: SumWith(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.SumWith(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).SumWith(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.SumWith(Bag<T>)
  nameWithType.vb: Bag(Of T).SumWith(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.SumWith*
  name: SumWith
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_SumWith_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.SumWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.SumWith
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).SumWith
  nameWithType: Bag<T>.SumWith
  nameWithType.vb: Bag(Of T).SumWith
- uid: Wintellect.PowerCollections.Bag`1.SymmetricDifference(Wintellect.PowerCollections.Bag{`0})
  name: SymmetricDifference(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_SymmetricDifference_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.SymmetricDifference(Wintellect.PowerCollections.Bag{`0})
  name.vb: SymmetricDifference(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.SymmetricDifference(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).SymmetricDifference(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.SymmetricDifference(Bag<T>)
  nameWithType.vb: Bag(Of T).SymmetricDifference(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.SymmetricDifference*
  name: SymmetricDifference
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_SymmetricDifference_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.SymmetricDifference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.SymmetricDifference
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).SymmetricDifference
  nameWithType: Bag<T>.SymmetricDifference
  nameWithType.vb: Bag(Of T).SymmetricDifference
- uid: Wintellect.PowerCollections.Bag`1.SymmetricDifferenceWith(Wintellect.PowerCollections.Bag{`0})
  name: SymmetricDifferenceWith(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_SymmetricDifferenceWith_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.SymmetricDifferenceWith(Wintellect.PowerCollections.Bag{`0})
  name.vb: SymmetricDifferenceWith(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.SymmetricDifferenceWith(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).SymmetricDifferenceWith(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.SymmetricDifferenceWith(Bag<T>)
  nameWithType.vb: Bag(Of T).SymmetricDifferenceWith(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.SymmetricDifferenceWith*
  name: SymmetricDifferenceWith
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_SymmetricDifferenceWith_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.SymmetricDifferenceWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.SymmetricDifferenceWith
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).SymmetricDifferenceWith
  nameWithType: Bag<T>.SymmetricDifferenceWith
  nameWithType.vb: Bag(Of T).SymmetricDifferenceWith
- uid: Wintellect.PowerCollections.Bag`1.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.Bag`1.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.Bag<T>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).System.ICloneable.Clone()
  nameWithType: Bag<T>.ICloneable.Clone()
  nameWithType.vb: Bag(Of T).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.Bag`1.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.Bag<T>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).System.ICloneable.Clone
  nameWithType: Bag<T>.ICloneable.Clone
  nameWithType.vb: Bag(Of T).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.Bag`1.Union(Wintellect.PowerCollections.Bag{`0})
  name: Union(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Union_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.Union(Wintellect.PowerCollections.Bag{`0})
  name.vb: Union(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.Union(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Union(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.Union(Bag<T>)
  nameWithType.vb: Bag(Of T).Union(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.Union*
  name: Union
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_Union_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.Union
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.Union
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).Union
  nameWithType: Bag<T>.Union
  nameWithType.vb: Bag(Of T).Union
- uid: Wintellect.PowerCollections.Bag`1.UnionWith(Wintellect.PowerCollections.Bag{`0})
  name: UnionWith(Bag<T>)
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_UnionWith_Wintellect_PowerCollections_Bag__0__
  commentId: M:Wintellect.PowerCollections.Bag`1.UnionWith(Wintellect.PowerCollections.Bag{`0})
  name.vb: UnionWith(Bag(Of T))
  fullName: Wintellect.PowerCollections.Bag<T>.UnionWith(Wintellect.PowerCollections.Bag<T>)
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).UnionWith(Wintellect.PowerCollections.Bag(Of T))
  nameWithType: Bag<T>.UnionWith(Bag<T>)
  nameWithType.vb: Bag(Of T).UnionWith(Bag(Of T))
- uid: Wintellect.PowerCollections.Bag`1.UnionWith*
  name: UnionWith
  href: api/Wintellect.PowerCollections.Bag-1.html#Wintellect_PowerCollections_Bag_1_UnionWith_
  commentId: Overload:Wintellect.PowerCollections.Bag`1.UnionWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Bag<T>.UnionWith
  fullName.vb: Wintellect.PowerCollections.Bag(Of T).UnionWith
  nameWithType: Bag<T>.UnionWith
  nameWithType.vb: Bag(Of T).UnionWith
- uid: Wintellect.PowerCollections.BigList`1
  name: BigList<T>
  href: api/Wintellect.PowerCollections.BigList-1.html
  commentId: T:Wintellect.PowerCollections.BigList`1
  name.vb: BigList(Of T)
  fullName: Wintellect.PowerCollections.BigList<T>
  fullName.vb: Wintellect.PowerCollections.BigList(Of T)
  nameWithType: BigList<T>
  nameWithType.vb: BigList(Of T)
- uid: Wintellect.PowerCollections.BigList`1.#ctor
  name: BigList()
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1__ctor
  commentId: M:Wintellect.PowerCollections.BigList`1.#ctor
  fullName: Wintellect.PowerCollections.BigList<T>.BigList()
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BigList()
  nameWithType: BigList<T>.BigList()
  nameWithType.vb: BigList(Of T).BigList()
- uid: Wintellect.PowerCollections.BigList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name: BigList(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1__ctor_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name.vb: BigList(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.BigList(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BigList(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: BigList<T>.BigList(IEnumerable<T>)
  nameWithType.vb: BigList(Of T).BigList(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.BigList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)
  name: BigList(IEnumerable<T>, Int32)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1__ctor_System_Collections_Generic_IEnumerable__0__System_Int32_
  commentId: M:Wintellect.PowerCollections.BigList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)
  name.vb: BigList(IEnumerable(Of T), Int32)
  fullName: Wintellect.PowerCollections.BigList<T>.BigList(System.Collections.Generic.IEnumerable<T>, System.Int32)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BigList(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  nameWithType: BigList<T>.BigList(IEnumerable<T>, Int32)
  nameWithType.vb: BigList(Of T).BigList(IEnumerable(Of T), Int32)
- uid: Wintellect.PowerCollections.BigList`1.#ctor(Wintellect.PowerCollections.BigList{`0})
  name: BigList(BigList<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1__ctor_Wintellect_PowerCollections_BigList__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.#ctor(Wintellect.PowerCollections.BigList{`0})
  name.vb: BigList(BigList(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.BigList(Wintellect.PowerCollections.BigList<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BigList(Wintellect.PowerCollections.BigList(Of T))
  nameWithType: BigList<T>.BigList(BigList<T>)
  nameWithType.vb: BigList(Of T).BigList(BigList(Of T))
- uid: Wintellect.PowerCollections.BigList`1.#ctor(Wintellect.PowerCollections.BigList{`0},System.Int32)
  name: BigList(BigList<T>, Int32)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1__ctor_Wintellect_PowerCollections_BigList__0__System_Int32_
  commentId: M:Wintellect.PowerCollections.BigList`1.#ctor(Wintellect.PowerCollections.BigList{`0},System.Int32)
  name.vb: BigList(BigList(Of T), Int32)
  fullName: Wintellect.PowerCollections.BigList<T>.BigList(Wintellect.PowerCollections.BigList<T>, System.Int32)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BigList(Wintellect.PowerCollections.BigList(Of T), System.Int32)
  nameWithType: BigList<T>.BigList(BigList<T>, Int32)
  nameWithType.vb: BigList(Of T).BigList(BigList(Of T), Int32)
- uid: Wintellect.PowerCollections.BigList`1.#ctor*
  name: BigList
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1__ctor_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.BigList
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BigList
  nameWithType: BigList<T>.BigList
  nameWithType.vb: BigList(Of T).BigList
- uid: Wintellect.PowerCollections.BigList`1.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Add__0_
  commentId: M:Wintellect.PowerCollections.BigList`1.Add(`0)
  fullName: Wintellect.PowerCollections.BigList<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Add(T)
  nameWithType: BigList<T>.Add(T)
  nameWithType.vb: BigList(Of T).Add(T)
- uid: Wintellect.PowerCollections.BigList`1.Add*
  name: Add
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Add_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Add
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Add
  nameWithType: BigList<T>.Add
  nameWithType.vb: BigList(Of T).Add
- uid: Wintellect.PowerCollections.BigList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_AddRange_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddRange(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: BigList<T>.AddRange(IEnumerable<T>)
  nameWithType.vb: BigList(Of T).AddRange(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.BigList`1.AddRange(Wintellect.PowerCollections.BigList{`0})
  name: AddRange(BigList<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_AddRange_Wintellect_PowerCollections_BigList__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.AddRange(Wintellect.PowerCollections.BigList{`0})
  name.vb: AddRange(BigList(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.AddRange(Wintellect.PowerCollections.BigList<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).AddRange(Wintellect.PowerCollections.BigList(Of T))
  nameWithType: BigList<T>.AddRange(BigList<T>)
  nameWithType.vb: BigList(Of T).AddRange(BigList(Of T))
- uid: Wintellect.PowerCollections.BigList`1.AddRange*
  name: AddRange
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_AddRange_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.AddRange
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.AddRange
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).AddRange
  nameWithType: BigList<T>.AddRange
  nameWithType.vb: BigList(Of T).AddRange
- uid: Wintellect.PowerCollections.BigList`1.AddRangeToFront(System.Collections.Generic.IEnumerable{`0})
  name: AddRangeToFront(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_AddRangeToFront_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.AddRangeToFront(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddRangeToFront(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.AddRangeToFront(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).AddRangeToFront(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: BigList<T>.AddRangeToFront(IEnumerable<T>)
  nameWithType.vb: BigList(Of T).AddRangeToFront(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.BigList`1.AddRangeToFront(Wintellect.PowerCollections.BigList{`0})
  name: AddRangeToFront(BigList<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_AddRangeToFront_Wintellect_PowerCollections_BigList__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.AddRangeToFront(Wintellect.PowerCollections.BigList{`0})
  name.vb: AddRangeToFront(BigList(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.AddRangeToFront(Wintellect.PowerCollections.BigList<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).AddRangeToFront(Wintellect.PowerCollections.BigList(Of T))
  nameWithType: BigList<T>.AddRangeToFront(BigList<T>)
  nameWithType.vb: BigList(Of T).AddRangeToFront(BigList(Of T))
- uid: Wintellect.PowerCollections.BigList`1.AddRangeToFront*
  name: AddRangeToFront
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_AddRangeToFront_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.AddRangeToFront
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.AddRangeToFront
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).AddRangeToFront
  nameWithType: BigList<T>.AddRangeToFront
  nameWithType.vb: BigList(Of T).AddRangeToFront
- uid: Wintellect.PowerCollections.BigList`1.AddToFront(`0)
  name: AddToFront(T)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_AddToFront__0_
  commentId: M:Wintellect.PowerCollections.BigList`1.AddToFront(`0)
  fullName: Wintellect.PowerCollections.BigList<T>.AddToFront(T)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).AddToFront(T)
  nameWithType: BigList<T>.AddToFront(T)
  nameWithType.vb: BigList(Of T).AddToFront(T)
- uid: Wintellect.PowerCollections.BigList`1.AddToFront*
  name: AddToFront
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_AddToFront_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.AddToFront
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.AddToFront
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).AddToFront
  nameWithType: BigList<T>.AddToFront
  nameWithType.vb: BigList(Of T).AddToFront
- uid: Wintellect.PowerCollections.BigList`1.BinarySearch(`0)
  name: BinarySearch(T)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_BinarySearch__0_
  commentId: M:Wintellect.PowerCollections.BigList`1.BinarySearch(`0)
  fullName: Wintellect.PowerCollections.BigList<T>.BinarySearch(T)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BinarySearch(T)
  nameWithType: BigList<T>.BinarySearch(T)
  nameWithType.vb: BigList(Of T).BinarySearch(T)
- uid: Wintellect.PowerCollections.BigList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(T, IComparer<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_BinarySearch__0_System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name.vb: BinarySearch(T, IComparer(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  nameWithType: BigList<T>.BinarySearch(T, IComparer<T>)
  nameWithType.vb: BigList(Of T).BinarySearch(T, IComparer(Of T))
- uid: Wintellect.PowerCollections.BigList`1.BinarySearch(`0,System.Comparison{`0})
  name: BinarySearch(T, Comparison<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_BinarySearch__0_System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.BinarySearch(`0,System.Comparison{`0})
  name.vb: BinarySearch(T, Comparison(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.BinarySearch(T, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BinarySearch(T, System.Comparison(Of T))
  nameWithType: BigList<T>.BinarySearch(T, Comparison<T>)
  nameWithType.vb: BigList(Of T).BinarySearch(T, Comparison(Of T))
- uid: Wintellect.PowerCollections.BigList`1.BinarySearch*
  name: BinarySearch
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_BinarySearch_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.BinarySearch
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.BinarySearch
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).BinarySearch
  nameWithType: BigList<T>.BinarySearch
  nameWithType.vb: BigList(Of T).BinarySearch
- uid: Wintellect.PowerCollections.BigList`1.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Clear
  commentId: M:Wintellect.PowerCollections.BigList`1.Clear
  fullName: Wintellect.PowerCollections.BigList<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Clear()
  nameWithType: BigList<T>.Clear()
  nameWithType.vb: BigList(Of T).Clear()
- uid: Wintellect.PowerCollections.BigList`1.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Clear_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Clear
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Clear
  nameWithType: BigList<T>.Clear
  nameWithType.vb: BigList(Of T).Clear
- uid: Wintellect.PowerCollections.BigList`1.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Clone
  commentId: M:Wintellect.PowerCollections.BigList`1.Clone
  fullName: Wintellect.PowerCollections.BigList<T>.Clone()
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Clone()
  nameWithType: BigList<T>.Clone()
  nameWithType.vb: BigList(Of T).Clone()
- uid: Wintellect.PowerCollections.BigList`1.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Clone_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Clone
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Clone
  nameWithType: BigList<T>.Clone
  nameWithType.vb: BigList(Of T).Clone
- uid: Wintellect.PowerCollections.BigList`1.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_CloneContents
  commentId: M:Wintellect.PowerCollections.BigList`1.CloneContents
  fullName: Wintellect.PowerCollections.BigList<T>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).CloneContents()
  nameWithType: BigList<T>.CloneContents()
  nameWithType.vb: BigList(Of T).CloneContents()
- uid: Wintellect.PowerCollections.BigList`1.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.CloneContents
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).CloneContents
  nameWithType: BigList<T>.CloneContents
  nameWithType.vb: BigList(Of T).CloneContents
- uid: Wintellect.PowerCollections.BigList`1.ConvertAll*
  name: ConvertAll
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_ConvertAll_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.ConvertAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.ConvertAll
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).ConvertAll
  nameWithType: BigList<T>.ConvertAll
  nameWithType.vb: BigList(Of T).ConvertAll
- uid: Wintellect.PowerCollections.BigList`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TDest>(Converter<T, TDest>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_ConvertAll__1_System_Converter__0___0__
  commentId: M:Wintellect.PowerCollections.BigList`1.ConvertAll``1(System.Converter{`0,``0})
  name.vb: ConvertAll(Of TDest)(Converter(Of T, TDest))
  fullName: Wintellect.PowerCollections.BigList<T>.ConvertAll<TDest>(System.Converter<T, TDest>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).ConvertAll(Of TDest)(System.Converter(Of T, TDest))
  nameWithType: BigList<T>.ConvertAll<TDest>(Converter<T, TDest>)
  nameWithType.vb: BigList(Of T).ConvertAll(Of TDest)(Converter(Of T, TDest))
- uid: Wintellect.PowerCollections.BigList`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Count
  commentId: P:Wintellect.PowerCollections.BigList`1.Count
  fullName: Wintellect.PowerCollections.BigList<T>.Count
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Count
  nameWithType: BigList<T>.Count
  nameWithType.vb: BigList(Of T).Count
- uid: Wintellect.PowerCollections.BigList`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Count_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Count
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Count
  nameWithType: BigList<T>.Count
  nameWithType.vb: BigList(Of T).Count
- uid: Wintellect.PowerCollections.BigList`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.BigList`1.GetEnumerator
  fullName: Wintellect.PowerCollections.BigList<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).GetEnumerator()
  nameWithType: BigList<T>.GetEnumerator()
  nameWithType.vb: BigList(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.BigList`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).GetEnumerator
  nameWithType: BigList<T>.GetEnumerator
  nameWithType.vb: BigList(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.BigList`1.GetRange(System.Int32,System.Int32)
  name: GetRange(Int32, Int32)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_GetRange_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.BigList`1.GetRange(System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.BigList<T>.GetRange(System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).GetRange(System.Int32, System.Int32)
  nameWithType: BigList<T>.GetRange(Int32, Int32)
  nameWithType.vb: BigList(Of T).GetRange(Int32, Int32)
- uid: Wintellect.PowerCollections.BigList`1.GetRange*
  name: GetRange
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_GetRange_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.GetRange
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.GetRange
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).GetRange
  nameWithType: BigList<T>.GetRange
  nameWithType.vb: BigList(Of T).GetRange
- uid: Wintellect.PowerCollections.BigList`1.Insert(System.Int32,`0)
  name: Insert(Int32, T)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Insert_System_Int32__0_
  commentId: M:Wintellect.PowerCollections.BigList`1.Insert(System.Int32,`0)
  fullName: Wintellect.PowerCollections.BigList<T>.Insert(System.Int32, T)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Insert(System.Int32, T)
  nameWithType: BigList<T>.Insert(Int32, T)
  nameWithType.vb: BigList(Of T).Insert(Int32, T)
- uid: Wintellect.PowerCollections.BigList`1.Insert*
  name: Insert
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Insert_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Insert
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Insert
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Insert
  nameWithType: BigList<T>.Insert
  nameWithType.vb: BigList(Of T).Insert
- uid: Wintellect.PowerCollections.BigList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_InsertRange_System_Int32_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  nameWithType: BigList<T>.InsertRange(Int32, IEnumerable<T>)
  nameWithType.vb: BigList(Of T).InsertRange(Int32, IEnumerable(Of T))
- uid: Wintellect.PowerCollections.BigList`1.InsertRange(System.Int32,Wintellect.PowerCollections.BigList{`0})
  name: InsertRange(Int32, BigList<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_InsertRange_System_Int32_Wintellect_PowerCollections_BigList__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.InsertRange(System.Int32,Wintellect.PowerCollections.BigList{`0})
  name.vb: InsertRange(Int32, BigList(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.InsertRange(System.Int32, Wintellect.PowerCollections.BigList<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).InsertRange(System.Int32, Wintellect.PowerCollections.BigList(Of T))
  nameWithType: BigList<T>.InsertRange(Int32, BigList<T>)
  nameWithType.vb: BigList(Of T).InsertRange(Int32, BigList(Of T))
- uid: Wintellect.PowerCollections.BigList`1.InsertRange*
  name: InsertRange
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_InsertRange_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.InsertRange
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.InsertRange
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).InsertRange
  nameWithType: BigList<T>.InsertRange
  nameWithType.vb: BigList(Of T).InsertRange
- uid: Wintellect.PowerCollections.BigList`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.BigList`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Wintellect.PowerCollections.BigList<T>.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Item(System.Int32)
  nameWithType: BigList<T>.Item[Int32]
  nameWithType.vb: BigList(Of T).Item(Int32)
- uid: Wintellect.PowerCollections.BigList`1.Item*
  name: Item
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Item_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Item
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Item
  nameWithType: BigList<T>.Item
  nameWithType.vb: BigList(Of T).Item
- uid: Wintellect.PowerCollections.BigList`1.op_Addition(Wintellect.PowerCollections.BigList{`0},Wintellect.PowerCollections.BigList{`0})
  name: Addition(BigList<T>, BigList<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_op_Addition_Wintellect_PowerCollections_BigList__0__Wintellect_PowerCollections_BigList__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.op_Addition(Wintellect.PowerCollections.BigList{`0},Wintellect.PowerCollections.BigList{`0})
  name.vb: Addition(BigList(Of T), BigList(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.Addition(Wintellect.PowerCollections.BigList<T>, Wintellect.PowerCollections.BigList<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Addition(Wintellect.PowerCollections.BigList(Of T), Wintellect.PowerCollections.BigList(Of T))
  nameWithType: BigList<T>.Addition(BigList<T>, BigList<T>)
  nameWithType.vb: BigList(Of T).Addition(BigList(Of T), BigList(Of T))
- uid: Wintellect.PowerCollections.BigList`1.op_Addition*
  name: Addition
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_op_Addition_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.op_Addition
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Addition
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Addition
  nameWithType: BigList<T>.Addition
  nameWithType.vb: BigList(Of T).Addition
- uid: Wintellect.PowerCollections.BigList`1.Range(System.Int32,System.Int32)
  name: Range(Int32, Int32)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Range_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.BigList`1.Range(System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.BigList<T>.Range(System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Range(System.Int32, System.Int32)
  nameWithType: BigList<T>.Range(Int32, Int32)
  nameWithType.vb: BigList(Of T).Range(Int32, Int32)
- uid: Wintellect.PowerCollections.BigList`1.Range*
  name: Range
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Range_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Range
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Range
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Range
  nameWithType: BigList<T>.Range
  nameWithType.vb: BigList(Of T).Range
- uid: Wintellect.PowerCollections.BigList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_RemoveAt_System_Int32_
  commentId: M:Wintellect.PowerCollections.BigList`1.RemoveAt(System.Int32)
  fullName: Wintellect.PowerCollections.BigList<T>.RemoveAt(System.Int32)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).RemoveAt(System.Int32)
  nameWithType: BigList<T>.RemoveAt(Int32)
  nameWithType.vb: BigList(Of T).RemoveAt(Int32)
- uid: Wintellect.PowerCollections.BigList`1.RemoveAt*
  name: RemoveAt
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_RemoveAt_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.RemoveAt
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.RemoveAt
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).RemoveAt
  nameWithType: BigList<T>.RemoveAt
  nameWithType.vb: BigList(Of T).RemoveAt
- uid: Wintellect.PowerCollections.BigList`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_RemoveRange_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.BigList`1.RemoveRange(System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.BigList<T>.RemoveRange(System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).RemoveRange(System.Int32, System.Int32)
  nameWithType: BigList<T>.RemoveRange(Int32, Int32)
  nameWithType.vb: BigList(Of T).RemoveRange(Int32, Int32)
- uid: Wintellect.PowerCollections.BigList`1.RemoveRange*
  name: RemoveRange
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_RemoveRange_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.RemoveRange
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.RemoveRange
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).RemoveRange
  nameWithType: BigList<T>.RemoveRange
  nameWithType.vb: BigList(Of T).RemoveRange
- uid: Wintellect.PowerCollections.BigList`1.Reverse
  name: Reverse()
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Reverse
  commentId: M:Wintellect.PowerCollections.BigList`1.Reverse
  fullName: Wintellect.PowerCollections.BigList<T>.Reverse()
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Reverse()
  nameWithType: BigList<T>.Reverse()
  nameWithType.vb: BigList(Of T).Reverse()
- uid: Wintellect.PowerCollections.BigList`1.Reverse(System.Int32,System.Int32)
  name: Reverse(Int32, Int32)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Reverse_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.BigList`1.Reverse(System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.BigList<T>.Reverse(System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Reverse(System.Int32, System.Int32)
  nameWithType: BigList<T>.Reverse(Int32, Int32)
  nameWithType.vb: BigList(Of T).Reverse(Int32, Int32)
- uid: Wintellect.PowerCollections.BigList`1.Reverse*
  name: Reverse
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Reverse_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Reverse
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Reverse
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Reverse
  nameWithType: BigList<T>.Reverse
  nameWithType.vb: BigList(Of T).Reverse
- uid: Wintellect.PowerCollections.BigList`1.Sort
  name: Sort()
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Sort
  commentId: M:Wintellect.PowerCollections.BigList`1.Sort
  fullName: Wintellect.PowerCollections.BigList<T>.Sort()
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Sort()
  nameWithType: BigList<T>.Sort()
  nameWithType.vb: BigList(Of T).Sort()
- uid: Wintellect.PowerCollections.BigList`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Sort_System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.Sort(System.Collections.Generic.IComparer{`0})
  name.vb: Sort(IComparer(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.Sort(System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  nameWithType: BigList<T>.Sort(IComparer<T>)
  nameWithType.vb: BigList(Of T).Sort(IComparer(Of T))
- uid: Wintellect.PowerCollections.BigList`1.Sort(System.Comparison{`0})
  name: Sort(Comparison<T>)
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Sort_System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.BigList`1.Sort(System.Comparison{`0})
  name.vb: Sort(Comparison(Of T))
  fullName: Wintellect.PowerCollections.BigList<T>.Sort(System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Sort(System.Comparison(Of T))
  nameWithType: BigList<T>.Sort(Comparison<T>)
  nameWithType.vb: BigList(Of T).Sort(Comparison(Of T))
- uid: Wintellect.PowerCollections.BigList`1.Sort*
  name: Sort
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_Sort_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.Sort
  isSpec: "True"
  fullName: Wintellect.PowerCollections.BigList<T>.Sort
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).Sort
  nameWithType: BigList<T>.Sort
  nameWithType.vb: BigList(Of T).Sort
- uid: Wintellect.PowerCollections.BigList`1.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.BigList`1.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.BigList<T>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).System.ICloneable.Clone()
  nameWithType: BigList<T>.ICloneable.Clone()
  nameWithType.vb: BigList(Of T).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.BigList`1.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.BigList-1.html#Wintellect_PowerCollections_BigList_1_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.BigList`1.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.BigList<T>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.BigList(Of T).System.ICloneable.Clone
  nameWithType: BigList<T>.ICloneable.Clone
  nameWithType.vb: BigList(Of T).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.BinaryPredicate`1
  name: BinaryPredicate<T>
  href: api/Wintellect.PowerCollections.BinaryPredicate-1.html
  commentId: T:Wintellect.PowerCollections.BinaryPredicate`1
  name.vb: BinaryPredicate(Of T)
  fullName: Wintellect.PowerCollections.BinaryPredicate<T>
  fullName.vb: Wintellect.PowerCollections.BinaryPredicate(Of T)
  nameWithType: BinaryPredicate<T>
  nameWithType.vb: BinaryPredicate(Of T)
- uid: Wintellect.PowerCollections.CollectionBase`1
  name: CollectionBase<T>
  href: api/Wintellect.PowerCollections.CollectionBase-1.html
  commentId: T:Wintellect.PowerCollections.CollectionBase`1
  name.vb: CollectionBase(Of T)
  fullName: Wintellect.PowerCollections.CollectionBase<T>
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T)
  nameWithType: CollectionBase<T>
  nameWithType.vb: CollectionBase(Of T)
- uid: Wintellect.PowerCollections.CollectionBase`1.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Add__0_
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.Add(`0)
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Add(T)
  nameWithType: CollectionBase<T>.Add(T)
  nameWithType.vb: CollectionBase(Of T).Add(T)
- uid: Wintellect.PowerCollections.CollectionBase`1.Add*
  name: Add
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Add_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Add
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Add
  nameWithType: CollectionBase<T>.Add
  nameWithType.vb: CollectionBase(Of T).Add
- uid: Wintellect.PowerCollections.CollectionBase`1.AsReadOnly
  name: AsReadOnly()
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_AsReadOnly
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.AsReadOnly
  fullName: Wintellect.PowerCollections.CollectionBase<T>.AsReadOnly()
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).AsReadOnly()
  nameWithType: CollectionBase<T>.AsReadOnly()
  nameWithType.vb: CollectionBase(Of T).AsReadOnly()
- uid: Wintellect.PowerCollections.CollectionBase`1.AsReadOnly*
  name: AsReadOnly
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_AsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.AsReadOnly
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.AsReadOnly
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).AsReadOnly
  nameWithType: CollectionBase<T>.AsReadOnly
  nameWithType.vb: CollectionBase(Of T).AsReadOnly
- uid: Wintellect.PowerCollections.CollectionBase`1.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Clear
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.Clear
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Clear()
  nameWithType: CollectionBase<T>.Clear()
  nameWithType.vb: CollectionBase(Of T).Clear()
- uid: Wintellect.PowerCollections.CollectionBase`1.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Clear_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Clear
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Clear
  nameWithType: CollectionBase<T>.Clear
  nameWithType.vb: CollectionBase(Of T).Clear
- uid: Wintellect.PowerCollections.CollectionBase`1.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Contains__0_
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.Contains(`0)
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Contains(T)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Contains(T)
  nameWithType: CollectionBase<T>.Contains(T)
  nameWithType.vb: CollectionBase(Of T).Contains(T)
- uid: Wintellect.PowerCollections.CollectionBase`1.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Contains_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Contains
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Contains
  nameWithType: CollectionBase<T>.Contains
  nameWithType.vb: CollectionBase(Of T).Contains
- uid: Wintellect.PowerCollections.CollectionBase`1.ConvertAll*
  name: ConvertAll
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_ConvertAll_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.ConvertAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.ConvertAll
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).ConvertAll
  nameWithType: CollectionBase<T>.ConvertAll
  nameWithType.vb: CollectionBase(Of T).ConvertAll
- uid: Wintellect.PowerCollections.CollectionBase`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_ConvertAll__1_System_Converter__0___0__
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.ConvertAll``1(System.Converter{`0,``0})
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName: Wintellect.PowerCollections.CollectionBase<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  nameWithType: CollectionBase<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType.vb: CollectionBase(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
- uid: Wintellect.PowerCollections.CollectionBase`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_CopyTo__0___System_Int32_
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: Wintellect.PowerCollections.CollectionBase<T>.CopyTo(T[], System.Int32)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).CopyTo(T(), System.Int32)
  nameWithType: CollectionBase<T>.CopyTo(T[], Int32)
  nameWithType.vb: CollectionBase(Of T).CopyTo(T(), Int32)
- uid: Wintellect.PowerCollections.CollectionBase`1.CopyTo*
  name: CopyTo
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_CopyTo_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.CopyTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.CopyTo
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).CopyTo
  nameWithType: CollectionBase<T>.CopyTo
  nameWithType.vb: CollectionBase(Of T).CopyTo
- uid: Wintellect.PowerCollections.CollectionBase`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Count
  commentId: P:Wintellect.PowerCollections.CollectionBase`1.Count
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Count
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Count
  nameWithType: CollectionBase<T>.Count
  nameWithType.vb: CollectionBase(Of T).Count
- uid: Wintellect.PowerCollections.CollectionBase`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Count_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Count
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Count
  nameWithType: CollectionBase<T>.Count
  nameWithType.vb: CollectionBase(Of T).Count
- uid: Wintellect.PowerCollections.CollectionBase`1.CountWhere(System.Predicate{`0})
  name: CountWhere(Predicate<T>)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_CountWhere_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.CountWhere(System.Predicate{`0})
  name.vb: CountWhere(Predicate(Of T))
  fullName: Wintellect.PowerCollections.CollectionBase<T>.CountWhere(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).CountWhere(System.Predicate(Of T))
  nameWithType: CollectionBase<T>.CountWhere(Predicate<T>)
  nameWithType.vb: CollectionBase(Of T).CountWhere(Predicate(Of T))
- uid: Wintellect.PowerCollections.CollectionBase`1.CountWhere*
  name: CountWhere
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_CountWhere_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.CountWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.CountWhere
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).CountWhere
  nameWithType: CollectionBase<T>.CountWhere
  nameWithType.vb: CollectionBase(Of T).CountWhere
- uid: Wintellect.PowerCollections.CollectionBase`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<T>)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Exists_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.Exists(System.Predicate{`0})
  name.vb: Exists(Predicate(Of T))
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Exists(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Exists(System.Predicate(Of T))
  nameWithType: CollectionBase<T>.Exists(Predicate<T>)
  nameWithType.vb: CollectionBase(Of T).Exists(Predicate(Of T))
- uid: Wintellect.PowerCollections.CollectionBase`1.Exists*
  name: Exists
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Exists_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.Exists
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Exists
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Exists
  nameWithType: CollectionBase<T>.Exists
  nameWithType.vb: CollectionBase(Of T).Exists
- uid: Wintellect.PowerCollections.CollectionBase`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<T>)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_FindAll_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.FindAll(System.Predicate{`0})
  name.vb: FindAll(Predicate(Of T))
  fullName: Wintellect.PowerCollections.CollectionBase<T>.FindAll(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).FindAll(System.Predicate(Of T))
  nameWithType: CollectionBase<T>.FindAll(Predicate<T>)
  nameWithType.vb: CollectionBase(Of T).FindAll(Predicate(Of T))
- uid: Wintellect.PowerCollections.CollectionBase`1.FindAll*
  name: FindAll
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_FindAll_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.FindAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.FindAll
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).FindAll
  nameWithType: CollectionBase<T>.FindAll
  nameWithType.vb: CollectionBase(Of T).FindAll
- uid: Wintellect.PowerCollections.CollectionBase`1.ForEach(System.Action{`0})
  name: ForEach(Action<T>)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_ForEach_System_Action__0__
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.ForEach(System.Action{`0})
  name.vb: ForEach(Action(Of T))
  fullName: Wintellect.PowerCollections.CollectionBase<T>.ForEach(System.Action<T>)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).ForEach(System.Action(Of T))
  nameWithType: CollectionBase<T>.ForEach(Action<T>)
  nameWithType.vb: CollectionBase(Of T).ForEach(Action(Of T))
- uid: Wintellect.PowerCollections.CollectionBase`1.ForEach*
  name: ForEach
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_ForEach_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.ForEach
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.ForEach
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).ForEach
  nameWithType: CollectionBase<T>.ForEach
  nameWithType.vb: CollectionBase(Of T).ForEach
- uid: Wintellect.PowerCollections.CollectionBase`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.GetEnumerator
  fullName: Wintellect.PowerCollections.CollectionBase<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).GetEnumerator()
  nameWithType: CollectionBase<T>.GetEnumerator()
  nameWithType.vb: CollectionBase(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.CollectionBase`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).GetEnumerator
  nameWithType: CollectionBase<T>.GetEnumerator
  nameWithType.vb: CollectionBase(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.CollectionBase`1.Remove(`0)
  name: Remove(T)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Remove__0_
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.Remove(`0)
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Remove(T)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Remove(T)
  nameWithType: CollectionBase<T>.Remove(T)
  nameWithType.vb: CollectionBase(Of T).Remove(T)
- uid: Wintellect.PowerCollections.CollectionBase`1.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_Remove_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.Remove
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).Remove
  nameWithType: CollectionBase<T>.Remove
  nameWithType.vb: CollectionBase(Of T).Remove
- uid: Wintellect.PowerCollections.CollectionBase`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<T>)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_RemoveAll_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.RemoveAll(System.Predicate{`0})
  name.vb: RemoveAll(Predicate(Of T))
  fullName: Wintellect.PowerCollections.CollectionBase<T>.RemoveAll(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).RemoveAll(System.Predicate(Of T))
  nameWithType: CollectionBase<T>.RemoveAll(Predicate<T>)
  nameWithType.vb: CollectionBase(Of T).RemoveAll(Predicate(Of T))
- uid: Wintellect.PowerCollections.CollectionBase`1.RemoveAll*
  name: RemoveAll
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_RemoveAll_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.RemoveAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.RemoveAll
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).RemoveAll
  nameWithType: CollectionBase<T>.RemoveAll
  nameWithType.vb: CollectionBase(Of T).RemoveAll
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<T>.IsReadOnly
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_Generic_ICollection_T__IsReadOnly
  commentId: P:Wintellect.PowerCollections.CollectionBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: CollectionBase<T>.ICollection<T>.IsReadOnly
  nameWithType.vb: CollectionBase(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly*
  name: ICollection<T>.IsReadOnly
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_Generic_ICollection_T__IsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: CollectionBase<T>.ICollection<T>.IsReadOnly
  nameWithType.vb: CollectionBase(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_ICollection_CopyTo_System_Array_System_Int32_
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType: CollectionBase<T>.ICollection.CopyTo(Array, Int32)
  nameWithType.vb: CollectionBase(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#CopyTo*
  name: ICollection.CopyTo
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_ICollection_CopyTo_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#CopyTo
  isSpec: "True"
  name.vb: System.Collections.ICollection.CopyTo
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.ICollection.CopyTo
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.ICollection.CopyTo
  nameWithType: CollectionBase<T>.ICollection.CopyTo
  nameWithType.vb: CollectionBase(Of T).System.Collections.ICollection.CopyTo
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_ICollection_IsSynchronized
  commentId: P:Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.ICollection.IsSynchronized
  nameWithType: CollectionBase<T>.ICollection.IsSynchronized
  nameWithType.vb: CollectionBase(Of T).System.Collections.ICollection.IsSynchronized
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#IsSynchronized*
  name: ICollection.IsSynchronized
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_ICollection_IsSynchronized_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#IsSynchronized
  isSpec: "True"
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.ICollection.IsSynchronized
  nameWithType: CollectionBase<T>.ICollection.IsSynchronized
  nameWithType.vb: CollectionBase(Of T).System.Collections.ICollection.IsSynchronized
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_ICollection_SyncRoot
  commentId: P:Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.ICollection.SyncRoot
  nameWithType: CollectionBase<T>.ICollection.SyncRoot
  nameWithType.vb: CollectionBase(Of T).System.Collections.ICollection.SyncRoot
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#SyncRoot*
  name: ICollection.SyncRoot
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_ICollection_SyncRoot_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.System#Collections#ICollection#SyncRoot
  isSpec: "True"
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.ICollection.SyncRoot
  nameWithType: CollectionBase<T>.ICollection.SyncRoot
  nameWithType.vb: CollectionBase(Of T).System.Collections.ICollection.SyncRoot
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: CollectionBase<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: CollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: Wintellect.PowerCollections.CollectionBase`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Wintellect.PowerCollections.CollectionBase<T>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator
  nameWithType: CollectionBase<T>.IEnumerable.GetEnumerator
  nameWithType.vb: CollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator
- uid: Wintellect.PowerCollections.CollectionBase`1.ToArray
  name: ToArray()
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_ToArray
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.ToArray
  fullName: Wintellect.PowerCollections.CollectionBase<T>.ToArray()
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).ToArray()
  nameWithType: CollectionBase<T>.ToArray()
  nameWithType.vb: CollectionBase(Of T).ToArray()
- uid: Wintellect.PowerCollections.CollectionBase`1.ToArray*
  name: ToArray
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_ToArray_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.ToArray
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.ToArray
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).ToArray
  nameWithType: CollectionBase<T>.ToArray
  nameWithType.vb: CollectionBase(Of T).ToArray
- uid: Wintellect.PowerCollections.CollectionBase`1.ToString
  name: ToString()
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_ToString
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.ToString
  fullName: Wintellect.PowerCollections.CollectionBase<T>.ToString()
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).ToString()
  nameWithType: CollectionBase<T>.ToString()
  nameWithType.vb: CollectionBase(Of T).ToString()
- uid: Wintellect.PowerCollections.CollectionBase`1.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_ToString_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.ToString
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).ToString
  nameWithType: CollectionBase<T>.ToString
  nameWithType.vb: CollectionBase(Of T).ToString
- uid: Wintellect.PowerCollections.CollectionBase`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<T>)
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_TrueForAll_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.CollectionBase`1.TrueForAll(System.Predicate{`0})
  name.vb: TrueForAll(Predicate(Of T))
  fullName: Wintellect.PowerCollections.CollectionBase<T>.TrueForAll(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).TrueForAll(System.Predicate(Of T))
  nameWithType: CollectionBase<T>.TrueForAll(Predicate<T>)
  nameWithType.vb: CollectionBase(Of T).TrueForAll(Predicate(Of T))
- uid: Wintellect.PowerCollections.CollectionBase`1.TrueForAll*
  name: TrueForAll
  href: api/Wintellect.PowerCollections.CollectionBase-1.html#Wintellect_PowerCollections_CollectionBase_1_TrueForAll_
  commentId: Overload:Wintellect.PowerCollections.CollectionBase`1.TrueForAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.CollectionBase<T>.TrueForAll
  fullName.vb: Wintellect.PowerCollections.CollectionBase(Of T).TrueForAll
  nameWithType: CollectionBase<T>.TrueForAll
  nameWithType.vb: CollectionBase(Of T).TrueForAll
- uid: Wintellect.PowerCollections.Deque`1
  name: Deque<T>
  href: api/Wintellect.PowerCollections.Deque-1.html
  commentId: T:Wintellect.PowerCollections.Deque`1
  name.vb: Deque(Of T)
  fullName: Wintellect.PowerCollections.Deque<T>
  fullName.vb: Wintellect.PowerCollections.Deque(Of T)
  nameWithType: Deque<T>
  nameWithType.vb: Deque(Of T)
- uid: Wintellect.PowerCollections.Deque`1.#ctor
  name: Deque()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1__ctor
  commentId: M:Wintellect.PowerCollections.Deque`1.#ctor
  fullName: Wintellect.PowerCollections.Deque<T>.Deque()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Deque()
  nameWithType: Deque<T>.Deque()
  nameWithType.vb: Deque(Of T).Deque()
- uid: Wintellect.PowerCollections.Deque`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name: Deque(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1__ctor_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Deque`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name.vb: Deque(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Deque<T>.Deque(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Deque(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Deque<T>.Deque(IEnumerable<T>)
  nameWithType.vb: Deque(Of T).Deque(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Deque`1.#ctor*
  name: Deque
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1__ctor_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.Deque
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Deque
  nameWithType: Deque<T>.Deque
  nameWithType.vb: Deque(Of T).Deque
- uid: Wintellect.PowerCollections.Deque`1.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Add__0_
  commentId: M:Wintellect.PowerCollections.Deque`1.Add(`0)
  fullName: Wintellect.PowerCollections.Deque<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Add(T)
  nameWithType: Deque<T>.Add(T)
  nameWithType.vb: Deque(Of T).Add(T)
- uid: Wintellect.PowerCollections.Deque`1.Add*
  name: Add
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Add_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.Add
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Add
  nameWithType: Deque<T>.Add
  nameWithType.vb: Deque(Of T).Add
- uid: Wintellect.PowerCollections.Deque`1.AddManyToBack(System.Collections.Generic.IEnumerable{`0})
  name: AddManyToBack(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_AddManyToBack_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Deque`1.AddManyToBack(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddManyToBack(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Deque<T>.AddManyToBack(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).AddManyToBack(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Deque<T>.AddManyToBack(IEnumerable<T>)
  nameWithType.vb: Deque(Of T).AddManyToBack(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Deque`1.AddManyToBack*
  name: AddManyToBack
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_AddManyToBack_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.AddManyToBack
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.AddManyToBack
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).AddManyToBack
  nameWithType: Deque<T>.AddManyToBack
  nameWithType.vb: Deque(Of T).AddManyToBack
- uid: Wintellect.PowerCollections.Deque`1.AddManyToFront(System.Collections.Generic.IEnumerable{`0})
  name: AddManyToFront(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_AddManyToFront_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Deque`1.AddManyToFront(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddManyToFront(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Deque<T>.AddManyToFront(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).AddManyToFront(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Deque<T>.AddManyToFront(IEnumerable<T>)
  nameWithType.vb: Deque(Of T).AddManyToFront(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Deque`1.AddManyToFront*
  name: AddManyToFront
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_AddManyToFront_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.AddManyToFront
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.AddManyToFront
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).AddManyToFront
  nameWithType: Deque<T>.AddManyToFront
  nameWithType.vb: Deque(Of T).AddManyToFront
- uid: Wintellect.PowerCollections.Deque`1.AddToBack(`0)
  name: AddToBack(T)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_AddToBack__0_
  commentId: M:Wintellect.PowerCollections.Deque`1.AddToBack(`0)
  fullName: Wintellect.PowerCollections.Deque<T>.AddToBack(T)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).AddToBack(T)
  nameWithType: Deque<T>.AddToBack(T)
  nameWithType.vb: Deque(Of T).AddToBack(T)
- uid: Wintellect.PowerCollections.Deque`1.AddToBack*
  name: AddToBack
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_AddToBack_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.AddToBack
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.AddToBack
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).AddToBack
  nameWithType: Deque<T>.AddToBack
  nameWithType.vb: Deque(Of T).AddToBack
- uid: Wintellect.PowerCollections.Deque`1.AddToFront(`0)
  name: AddToFront(T)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_AddToFront__0_
  commentId: M:Wintellect.PowerCollections.Deque`1.AddToFront(`0)
  fullName: Wintellect.PowerCollections.Deque<T>.AddToFront(T)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).AddToFront(T)
  nameWithType: Deque<T>.AddToFront(T)
  nameWithType.vb: Deque(Of T).AddToFront(T)
- uid: Wintellect.PowerCollections.Deque`1.AddToFront*
  name: AddToFront
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_AddToFront_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.AddToFront
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.AddToFront
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).AddToFront
  nameWithType: Deque<T>.AddToFront
  nameWithType.vb: Deque(Of T).AddToFront
- uid: Wintellect.PowerCollections.Deque`1.Capacity
  name: Capacity
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Capacity
  commentId: P:Wintellect.PowerCollections.Deque`1.Capacity
  fullName: Wintellect.PowerCollections.Deque<T>.Capacity
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Capacity
  nameWithType: Deque<T>.Capacity
  nameWithType.vb: Deque(Of T).Capacity
- uid: Wintellect.PowerCollections.Deque`1.Capacity*
  name: Capacity
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Capacity_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.Capacity
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.Capacity
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Capacity
  nameWithType: Deque<T>.Capacity
  nameWithType.vb: Deque(Of T).Capacity
- uid: Wintellect.PowerCollections.Deque`1.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Clear
  commentId: M:Wintellect.PowerCollections.Deque`1.Clear
  fullName: Wintellect.PowerCollections.Deque<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Clear()
  nameWithType: Deque<T>.Clear()
  nameWithType.vb: Deque(Of T).Clear()
- uid: Wintellect.PowerCollections.Deque`1.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Clear_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.Clear
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Clear
  nameWithType: Deque<T>.Clear
  nameWithType.vb: Deque(Of T).Clear
- uid: Wintellect.PowerCollections.Deque`1.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Clone
  commentId: M:Wintellect.PowerCollections.Deque`1.Clone
  fullName: Wintellect.PowerCollections.Deque<T>.Clone()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Clone()
  nameWithType: Deque<T>.Clone()
  nameWithType.vb: Deque(Of T).Clone()
- uid: Wintellect.PowerCollections.Deque`1.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Clone_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.Clone
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Clone
  nameWithType: Deque<T>.Clone
  nameWithType.vb: Deque(Of T).Clone
- uid: Wintellect.PowerCollections.Deque`1.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_CloneContents
  commentId: M:Wintellect.PowerCollections.Deque`1.CloneContents
  fullName: Wintellect.PowerCollections.Deque<T>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).CloneContents()
  nameWithType: Deque<T>.CloneContents()
  nameWithType.vb: Deque(Of T).CloneContents()
- uid: Wintellect.PowerCollections.Deque`1.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.CloneContents
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).CloneContents
  nameWithType: Deque<T>.CloneContents
  nameWithType.vb: Deque(Of T).CloneContents
- uid: Wintellect.PowerCollections.Deque`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_CopyTo__0___System_Int32_
  commentId: M:Wintellect.PowerCollections.Deque`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: Wintellect.PowerCollections.Deque<T>.CopyTo(T[], System.Int32)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).CopyTo(T(), System.Int32)
  nameWithType: Deque<T>.CopyTo(T[], Int32)
  nameWithType.vb: Deque(Of T).CopyTo(T(), Int32)
- uid: Wintellect.PowerCollections.Deque`1.CopyTo*
  name: CopyTo
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_CopyTo_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.CopyTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.CopyTo
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).CopyTo
  nameWithType: Deque<T>.CopyTo
  nameWithType.vb: Deque(Of T).CopyTo
- uid: Wintellect.PowerCollections.Deque`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Count
  commentId: P:Wintellect.PowerCollections.Deque`1.Count
  fullName: Wintellect.PowerCollections.Deque<T>.Count
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Count
  nameWithType: Deque<T>.Count
  nameWithType.vb: Deque(Of T).Count
- uid: Wintellect.PowerCollections.Deque`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Count_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.Count
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Count
  nameWithType: Deque<T>.Count
  nameWithType.vb: Deque(Of T).Count
- uid: Wintellect.PowerCollections.Deque`1.GetAtBack
  name: GetAtBack()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_GetAtBack
  commentId: M:Wintellect.PowerCollections.Deque`1.GetAtBack
  fullName: Wintellect.PowerCollections.Deque<T>.GetAtBack()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).GetAtBack()
  nameWithType: Deque<T>.GetAtBack()
  nameWithType.vb: Deque(Of T).GetAtBack()
- uid: Wintellect.PowerCollections.Deque`1.GetAtBack*
  name: GetAtBack
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_GetAtBack_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.GetAtBack
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.GetAtBack
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).GetAtBack
  nameWithType: Deque<T>.GetAtBack
  nameWithType.vb: Deque(Of T).GetAtBack
- uid: Wintellect.PowerCollections.Deque`1.GetAtFront
  name: GetAtFront()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_GetAtFront
  commentId: M:Wintellect.PowerCollections.Deque`1.GetAtFront
  fullName: Wintellect.PowerCollections.Deque<T>.GetAtFront()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).GetAtFront()
  nameWithType: Deque<T>.GetAtFront()
  nameWithType.vb: Deque(Of T).GetAtFront()
- uid: Wintellect.PowerCollections.Deque`1.GetAtFront*
  name: GetAtFront
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_GetAtFront_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.GetAtFront
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.GetAtFront
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).GetAtFront
  nameWithType: Deque<T>.GetAtFront
  nameWithType.vb: Deque(Of T).GetAtFront
- uid: Wintellect.PowerCollections.Deque`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.Deque`1.GetEnumerator
  fullName: Wintellect.PowerCollections.Deque<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).GetEnumerator()
  nameWithType: Deque<T>.GetEnumerator()
  nameWithType.vb: Deque(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.Deque`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).GetEnumerator
  nameWithType: Deque<T>.GetEnumerator
  nameWithType.vb: Deque(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.Deque`1.Insert(System.Int32,`0)
  name: Insert(Int32, T)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Insert_System_Int32__0_
  commentId: M:Wintellect.PowerCollections.Deque`1.Insert(System.Int32,`0)
  fullName: Wintellect.PowerCollections.Deque<T>.Insert(System.Int32, T)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Insert(System.Int32, T)
  nameWithType: Deque<T>.Insert(Int32, T)
  nameWithType.vb: Deque(Of T).Insert(Int32, T)
- uid: Wintellect.PowerCollections.Deque`1.Insert*
  name: Insert
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Insert_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.Insert
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.Insert
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Insert
  nameWithType: Deque<T>.Insert
  nameWithType.vb: Deque(Of T).Insert
- uid: Wintellect.PowerCollections.Deque`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_InsertRange_System_Int32_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Deque`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Deque<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Deque<T>.InsertRange(Int32, IEnumerable<T>)
  nameWithType.vb: Deque(Of T).InsertRange(Int32, IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Deque`1.InsertRange*
  name: InsertRange
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_InsertRange_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.InsertRange
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.InsertRange
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).InsertRange
  nameWithType: Deque<T>.InsertRange
  nameWithType.vb: Deque(Of T).InsertRange
- uid: Wintellect.PowerCollections.Deque`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.Deque`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Wintellect.PowerCollections.Deque<T>.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Item(System.Int32)
  nameWithType: Deque<T>.Item[Int32]
  nameWithType.vb: Deque(Of T).Item(Int32)
- uid: Wintellect.PowerCollections.Deque`1.Item*
  name: Item
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_Item_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.Item
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).Item
  nameWithType: Deque<T>.Item
  nameWithType.vb: Deque(Of T).Item
- uid: Wintellect.PowerCollections.Deque`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_RemoveAt_System_Int32_
  commentId: M:Wintellect.PowerCollections.Deque`1.RemoveAt(System.Int32)
  fullName: Wintellect.PowerCollections.Deque<T>.RemoveAt(System.Int32)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).RemoveAt(System.Int32)
  nameWithType: Deque<T>.RemoveAt(Int32)
  nameWithType.vb: Deque(Of T).RemoveAt(Int32)
- uid: Wintellect.PowerCollections.Deque`1.RemoveAt*
  name: RemoveAt
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_RemoveAt_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.RemoveAt
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.RemoveAt
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).RemoveAt
  nameWithType: Deque<T>.RemoveAt
  nameWithType.vb: Deque(Of T).RemoveAt
- uid: Wintellect.PowerCollections.Deque`1.RemoveFromBack
  name: RemoveFromBack()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_RemoveFromBack
  commentId: M:Wintellect.PowerCollections.Deque`1.RemoveFromBack
  fullName: Wintellect.PowerCollections.Deque<T>.RemoveFromBack()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).RemoveFromBack()
  nameWithType: Deque<T>.RemoveFromBack()
  nameWithType.vb: Deque(Of T).RemoveFromBack()
- uid: Wintellect.PowerCollections.Deque`1.RemoveFromBack*
  name: RemoveFromBack
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_RemoveFromBack_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.RemoveFromBack
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.RemoveFromBack
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).RemoveFromBack
  nameWithType: Deque<T>.RemoveFromBack
  nameWithType.vb: Deque(Of T).RemoveFromBack
- uid: Wintellect.PowerCollections.Deque`1.RemoveFromFront
  name: RemoveFromFront()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_RemoveFromFront
  commentId: M:Wintellect.PowerCollections.Deque`1.RemoveFromFront
  fullName: Wintellect.PowerCollections.Deque<T>.RemoveFromFront()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).RemoveFromFront()
  nameWithType: Deque<T>.RemoveFromFront()
  nameWithType.vb: Deque(Of T).RemoveFromFront()
- uid: Wintellect.PowerCollections.Deque`1.RemoveFromFront*
  name: RemoveFromFront
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_RemoveFromFront_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.RemoveFromFront
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.RemoveFromFront
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).RemoveFromFront
  nameWithType: Deque<T>.RemoveFromFront
  nameWithType.vb: Deque(Of T).RemoveFromFront
- uid: Wintellect.PowerCollections.Deque`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_RemoveRange_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.Deque`1.RemoveRange(System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.Deque<T>.RemoveRange(System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).RemoveRange(System.Int32, System.Int32)
  nameWithType: Deque<T>.RemoveRange(Int32, Int32)
  nameWithType.vb: Deque(Of T).RemoveRange(Int32, Int32)
- uid: Wintellect.PowerCollections.Deque`1.RemoveRange*
  name: RemoveRange
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_RemoveRange_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.RemoveRange
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.RemoveRange
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).RemoveRange
  nameWithType: Deque<T>.RemoveRange
  nameWithType.vb: Deque(Of T).RemoveRange
- uid: Wintellect.PowerCollections.Deque`1.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.Deque`1.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.Deque<T>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).System.ICloneable.Clone()
  nameWithType: Deque<T>.ICloneable.Clone()
  nameWithType.vb: Deque(Of T).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.Deque`1.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.Deque<T>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).System.ICloneable.Clone
  nameWithType: Deque<T>.ICloneable.Clone
  nameWithType.vb: Deque(Of T).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.Deque`1.TrimToSize
  name: TrimToSize()
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_TrimToSize
  commentId: M:Wintellect.PowerCollections.Deque`1.TrimToSize
  fullName: Wintellect.PowerCollections.Deque<T>.TrimToSize()
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).TrimToSize()
  nameWithType: Deque<T>.TrimToSize()
  nameWithType.vb: Deque(Of T).TrimToSize()
- uid: Wintellect.PowerCollections.Deque`1.TrimToSize*
  name: TrimToSize
  href: api/Wintellect.PowerCollections.Deque-1.html#Wintellect_PowerCollections_Deque_1_TrimToSize_
  commentId: Overload:Wintellect.PowerCollections.Deque`1.TrimToSize
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Deque<T>.TrimToSize
  fullName.vb: Wintellect.PowerCollections.Deque(Of T).TrimToSize
  nameWithType: Deque<T>.TrimToSize
  nameWithType.vb: Deque(Of T).TrimToSize
- uid: Wintellect.PowerCollections.DictionaryBase`2
  name: DictionaryBase<TKey, TValue>
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html
  commentId: T:Wintellect.PowerCollections.DictionaryBase`2
  name.vb: DictionaryBase(Of TKey, TValue)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue)
  nameWithType: DictionaryBase<TKey, TValue>
  nameWithType.vb: DictionaryBase(Of TKey, TValue)
- uid: Wintellect.PowerCollections.DictionaryBase`2.Add(`0,`1)
  name: Add(TKey, TValue)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Add__0__1_
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.Add(`0,`1)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Add(TKey, TValue)
  nameWithType: DictionaryBase<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Add(TKey, TValue)
- uid: Wintellect.PowerCollections.DictionaryBase`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  name: Add(KeyValuePair<TKey, TValue>)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Add_System_Collections_Generic_KeyValuePair__0__1__
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})
  name.vb: Add(KeyValuePair(Of TKey, TValue))
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  nameWithType: DictionaryBase<TKey, TValue>.Add(KeyValuePair<TKey, TValue>)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Add(KeyValuePair(Of TKey, TValue))
- uid: Wintellect.PowerCollections.DictionaryBase`2.Add*
  name: Add
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Add_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Add
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Add
  nameWithType: DictionaryBase<TKey, TValue>.Add
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Add
- uid: Wintellect.PowerCollections.DictionaryBase`2.AsReadOnly
  name: AsReadOnly()
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_AsReadOnly
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.AsReadOnly
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.AsReadOnly()
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).AsReadOnly()
  nameWithType: DictionaryBase<TKey, TValue>.AsReadOnly()
  nameWithType.vb: DictionaryBase(Of TKey, TValue).AsReadOnly()
- uid: Wintellect.PowerCollections.DictionaryBase`2.AsReadOnly*
  name: AsReadOnly
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_AsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.AsReadOnly
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.AsReadOnly
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).AsReadOnly
  nameWithType: DictionaryBase<TKey, TValue>.AsReadOnly
  nameWithType.vb: DictionaryBase(Of TKey, TValue).AsReadOnly
- uid: Wintellect.PowerCollections.DictionaryBase`2.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Clear
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.Clear
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Clear()
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Clear()
  nameWithType: DictionaryBase<TKey, TValue>.Clear()
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Clear()
- uid: Wintellect.PowerCollections.DictionaryBase`2.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Clear_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Clear
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Clear
  nameWithType: DictionaryBase<TKey, TValue>.Clear
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Clear
- uid: Wintellect.PowerCollections.DictionaryBase`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  name: Contains(KeyValuePair<TKey, TValue>)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Contains_System_Collections_Generic_KeyValuePair__0__1__
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  nameWithType: DictionaryBase<TKey, TValue>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Contains(KeyValuePair(Of TKey, TValue))
- uid: Wintellect.PowerCollections.DictionaryBase`2.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Contains_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Contains
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Contains
  nameWithType: DictionaryBase<TKey, TValue>.Contains
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Contains
- uid: Wintellect.PowerCollections.DictionaryBase`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: DictionaryBase<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).ContainsKey(TKey)
- uid: Wintellect.PowerCollections.DictionaryBase`2.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.ContainsKey
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).ContainsKey
  nameWithType: DictionaryBase<TKey, TValue>.ContainsKey
  nameWithType.vb: DictionaryBase(Of TKey, TValue).ContainsKey
- uid: Wintellect.PowerCollections.DictionaryBase`2.Item(`0)
  name: Item[TKey]
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Item__0_
  commentId: P:Wintellect.PowerCollections.DictionaryBase`2.Item(`0)
  name.vb: Item(TKey)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Item[TKey]
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Item(TKey)
  nameWithType: DictionaryBase<TKey, TValue>.Item[TKey]
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Item(TKey)
- uid: Wintellect.PowerCollections.DictionaryBase`2.Item*
  name: Item
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Item_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Item
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Item
  nameWithType: DictionaryBase<TKey, TValue>.Item
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Item
- uid: Wintellect.PowerCollections.DictionaryBase`2.Keys
  name: Keys
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Keys
  commentId: P:Wintellect.PowerCollections.DictionaryBase`2.Keys
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Keys
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Keys
  nameWithType: DictionaryBase<TKey, TValue>.Keys
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Keys
- uid: Wintellect.PowerCollections.DictionaryBase`2.Keys*
  name: Keys
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Keys_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.Keys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Keys
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Keys
  nameWithType: DictionaryBase<TKey, TValue>.Keys
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Keys
- uid: Wintellect.PowerCollections.DictionaryBase`2.Remove(`0)
  name: Remove(TKey)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Remove__0_
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.Remove(`0)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Remove(TKey)
  nameWithType: DictionaryBase<TKey, TValue>.Remove(TKey)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Remove(TKey)
- uid: Wintellect.PowerCollections.DictionaryBase`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  name: Remove(KeyValuePair<TKey, TValue>)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Remove_System_Collections_Generic_KeyValuePair__0__1__
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  nameWithType: DictionaryBase<TKey, TValue>.Remove(KeyValuePair<TKey, TValue>)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Remove(KeyValuePair(Of TKey, TValue))
- uid: Wintellect.PowerCollections.DictionaryBase`2.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Remove_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Remove
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Remove
  nameWithType: DictionaryBase<TKey, TValue>.Remove
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Remove
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  name: IDictionary.Add(Object, Object)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Add_System_Object_System_Object_
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Add(Object, Object)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Add*
  name: IDictionary.Add
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Add_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Add
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Add
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Add
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Add
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Add
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Add
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Clear
  name: IDictionary.Clear()
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Clear
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Clear
  name.vb: System.Collections.IDictionary.Clear()
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Clear()
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Clear()
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Clear()
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Clear()
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Clear*
  name: IDictionary.Clear
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Clear_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Clear
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Clear
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Clear
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Clear
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Clear
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Clear
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Contains(System.Object)
  name: IDictionary.Contains(Object)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Contains_System_Object_
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Contains(Object)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Contains*
  name: IDictionary.Contains
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Contains_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Contains
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Contains
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Contains
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Contains
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Contains
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Contains
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#GetEnumerator
  name: IDictionary.GetEnumerator()
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_GetEnumerator
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#GetEnumerator
  name.vb: System.Collections.IDictionary.GetEnumerator()
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.GetEnumerator()
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#GetEnumerator*
  name: IDictionary.GetEnumerator
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IDictionary.GetEnumerator
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.GetEnumerator
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#IsFixedSize
  name: IDictionary.IsFixedSize
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_IsFixedSize
  commentId: P:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.IsFixedSize
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#IsFixedSize*
  name: IDictionary.IsFixedSize
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_IsFixedSize_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#IsFixedSize
  isSpec: "True"
  name.vb: System.Collections.IDictionary.IsFixedSize
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.IsFixedSize
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#IsReadOnly
  name: IDictionary.IsReadOnly
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_IsReadOnly
  commentId: P:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.IsReadOnly
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#IsReadOnly*
  name: IDictionary.IsReadOnly
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_IsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#IsReadOnly
  isSpec: "True"
  name.vb: System.Collections.IDictionary.IsReadOnly
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.IsReadOnly
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Item(System.Object)
  name: IDictionary.Item[Object]
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Item_System_Object_
  commentId: P:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Item[Object]
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Item(Object)
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Item*
  name: IDictionary.Item
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Item_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Item
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Item
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Item
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Item
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Item
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Item
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Keys
  name: IDictionary.Keys
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Keys
  commentId: P:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Keys
  name.vb: System.Collections.IDictionary.Keys
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Keys
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Keys
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Keys
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Keys*
  name: IDictionary.Keys
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Keys_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Keys
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Keys
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Keys
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Keys
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Keys
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Remove(System.Object)
  name: IDictionary.Remove(Object)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Remove_System_Object_
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Remove(Object)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Remove*
  name: IDictionary.Remove
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Remove_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Remove
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Remove
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Remove
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Remove
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Remove
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Remove
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Values
  name: IDictionary.Values
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Values
  commentId: P:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Values
  name.vb: System.Collections.IDictionary.Values
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Values
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Values
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Values
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Values
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Values*
  name: IDictionary.Values
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IDictionary_Values_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IDictionary#Values
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Values
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IDictionary.Values
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Values
  nameWithType: DictionaryBase<TKey, TValue>.IDictionary.Values
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Values
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DictionaryBase<TKey, TValue>.IEnumerable.GetEnumerator()
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
- uid: Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
  nameWithType: DictionaryBase<TKey, TValue>.IEnumerable.GetEnumerator
  nameWithType.vb: DictionaryBase(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
- uid: Wintellect.PowerCollections.DictionaryBase`2.ToString
  name: ToString()
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_ToString
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.ToString
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.ToString()
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).ToString()
  nameWithType: DictionaryBase<TKey, TValue>.ToString()
  nameWithType.vb: DictionaryBase(Of TKey, TValue).ToString()
- uid: Wintellect.PowerCollections.DictionaryBase`2.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_ToString_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.ToString
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).ToString
  nameWithType: DictionaryBase<TKey, TValue>.ToString
  nameWithType.vb: DictionaryBase(Of TKey, TValue).ToString
- uid: Wintellect.PowerCollections.DictionaryBase`2.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, out TValue)
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_TryGetValue__0__1__
  commentId: M:Wintellect.PowerCollections.DictionaryBase`2.TryGetValue(`0,`1@)
  name.vb: TryGetValue(TKey, ByRef TValue)
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  nameWithType: DictionaryBase<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: DictionaryBase(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
- uid: Wintellect.PowerCollections.DictionaryBase`2.TryGetValue*
  name: TryGetValue
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_TryGetValue_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.TryGetValue
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.TryGetValue
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).TryGetValue
  nameWithType: DictionaryBase<TKey, TValue>.TryGetValue
  nameWithType.vb: DictionaryBase(Of TKey, TValue).TryGetValue
- uid: Wintellect.PowerCollections.DictionaryBase`2.Values
  name: Values
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Values
  commentId: P:Wintellect.PowerCollections.DictionaryBase`2.Values
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Values
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Values
  nameWithType: DictionaryBase<TKey, TValue>.Values
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Values
- uid: Wintellect.PowerCollections.DictionaryBase`2.Values*
  name: Values
  href: api/Wintellect.PowerCollections.DictionaryBase-2.html#Wintellect_PowerCollections_DictionaryBase_2_Values_
  commentId: Overload:Wintellect.PowerCollections.DictionaryBase`2.Values
  isSpec: "True"
  fullName: Wintellect.PowerCollections.DictionaryBase<TKey, TValue>.Values
  fullName.vb: Wintellect.PowerCollections.DictionaryBase(Of TKey, TValue).Values
  nameWithType: DictionaryBase<TKey, TValue>.Values
  nameWithType.vb: DictionaryBase(Of TKey, TValue).Values
- uid: Wintellect.PowerCollections.ListBase`1
  name: ListBase<T>
  href: api/Wintellect.PowerCollections.ListBase-1.html
  commentId: T:Wintellect.PowerCollections.ListBase`1
  name.vb: ListBase(Of T)
  fullName: Wintellect.PowerCollections.ListBase<T>
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T)
  nameWithType: ListBase<T>
  nameWithType.vb: ListBase(Of T)
- uid: Wintellect.PowerCollections.ListBase`1.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Add__0_
  commentId: M:Wintellect.PowerCollections.ListBase`1.Add(`0)
  fullName: Wintellect.PowerCollections.ListBase<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Add(T)
  nameWithType: ListBase<T>.Add(T)
  nameWithType.vb: ListBase(Of T).Add(T)
- uid: Wintellect.PowerCollections.ListBase`1.Add*
  name: Add
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Add_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Add
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Add
  nameWithType: ListBase<T>.Add
  nameWithType.vb: ListBase(Of T).Add
- uid: Wintellect.PowerCollections.ListBase`1.AsReadOnly
  name: AsReadOnly()
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_AsReadOnly
  commentId: M:Wintellect.PowerCollections.ListBase`1.AsReadOnly
  fullName: Wintellect.PowerCollections.ListBase<T>.AsReadOnly()
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).AsReadOnly()
  nameWithType: ListBase<T>.AsReadOnly()
  nameWithType.vb: ListBase(Of T).AsReadOnly()
- uid: Wintellect.PowerCollections.ListBase`1.AsReadOnly*
  name: AsReadOnly
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_AsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.AsReadOnly
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.AsReadOnly
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).AsReadOnly
  nameWithType: ListBase<T>.AsReadOnly
  nameWithType.vb: ListBase(Of T).AsReadOnly
- uid: Wintellect.PowerCollections.ListBase`1.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Clear
  commentId: M:Wintellect.PowerCollections.ListBase`1.Clear
  fullName: Wintellect.PowerCollections.ListBase<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Clear()
  nameWithType: ListBase<T>.Clear()
  nameWithType.vb: ListBase(Of T).Clear()
- uid: Wintellect.PowerCollections.ListBase`1.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Clear_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Clear
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Clear
  nameWithType: ListBase<T>.Clear
  nameWithType.vb: ListBase(Of T).Clear
- uid: Wintellect.PowerCollections.ListBase`1.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Contains__0_
  commentId: M:Wintellect.PowerCollections.ListBase`1.Contains(`0)
  fullName: Wintellect.PowerCollections.ListBase<T>.Contains(T)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Contains(T)
  nameWithType: ListBase<T>.Contains(T)
  nameWithType.vb: ListBase(Of T).Contains(T)
- uid: Wintellect.PowerCollections.ListBase`1.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Contains_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Contains
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Contains
  nameWithType: ListBase<T>.Contains
  nameWithType.vb: ListBase(Of T).Contains
- uid: Wintellect.PowerCollections.ListBase`1.CopyTo(`0[])
  name: CopyTo(T[])
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_CopyTo__0___
  commentId: M:Wintellect.PowerCollections.ListBase`1.CopyTo(`0[])
  name.vb: CopyTo(T())
  fullName: Wintellect.PowerCollections.ListBase<T>.CopyTo(T[])
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).CopyTo(T())
  nameWithType: ListBase<T>.CopyTo(T[])
  nameWithType.vb: ListBase(Of T).CopyTo(T())
- uid: Wintellect.PowerCollections.ListBase`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, T[], Int32, Int32)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_CopyTo_System_Int32__0___System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.ListBase`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  nameWithType: ListBase<T>.CopyTo(Int32, T[], Int32, Int32)
  nameWithType.vb: ListBase(Of T).CopyTo(Int32, T(), Int32, Int32)
- uid: Wintellect.PowerCollections.ListBase`1.CopyTo*
  name: CopyTo
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_CopyTo_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.CopyTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.CopyTo
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).CopyTo
  nameWithType: ListBase<T>.CopyTo
  nameWithType.vb: ListBase(Of T).CopyTo
- uid: Wintellect.PowerCollections.ListBase`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Count
  commentId: P:Wintellect.PowerCollections.ListBase`1.Count
  fullName: Wintellect.PowerCollections.ListBase<T>.Count
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Count
  nameWithType: ListBase<T>.Count
  nameWithType.vb: ListBase(Of T).Count
- uid: Wintellect.PowerCollections.ListBase`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Count_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Count
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Count
  nameWithType: ListBase<T>.Count
  nameWithType.vb: ListBase(Of T).Count
- uid: Wintellect.PowerCollections.ListBase`1.Find(System.Predicate{`0})
  name: Find(Predicate<T>)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Find_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.Find(System.Predicate{`0})
  name.vb: Find(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ListBase<T>.Find(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Find(System.Predicate(Of T))
  nameWithType: ListBase<T>.Find(Predicate<T>)
  nameWithType.vb: ListBase(Of T).Find(Predicate(Of T))
- uid: Wintellect.PowerCollections.ListBase`1.Find*
  name: Find
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Find_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Find
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Find
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Find
  nameWithType: ListBase<T>.Find
  nameWithType.vb: ListBase(Of T).Find
- uid: Wintellect.PowerCollections.ListBase`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindIndex_System_Int32_System_Int32_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.ListBase<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  nameWithType: ListBase<T>.FindIndex(Int32, Int32, Predicate<T>)
  nameWithType.vb: ListBase(Of T).FindIndex(Int32, Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.ListBase`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindIndex_System_Int32_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.FindIndex(System.Int32,System.Predicate{`0})
  name.vb: FindIndex(Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.ListBase<T>.FindIndex(System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  nameWithType: ListBase<T>.FindIndex(Int32, Predicate<T>)
  nameWithType.vb: ListBase(Of T).FindIndex(Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.ListBase`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<T>)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindIndex_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.FindIndex(System.Predicate{`0})
  name.vb: FindIndex(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ListBase<T>.FindIndex(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindIndex(System.Predicate(Of T))
  nameWithType: ListBase<T>.FindIndex(Predicate<T>)
  nameWithType.vb: ListBase(Of T).FindIndex(Predicate(Of T))
- uid: Wintellect.PowerCollections.ListBase`1.FindIndex*
  name: FindIndex
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindIndex_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.FindIndex
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.FindIndex
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindIndex
  nameWithType: ListBase<T>.FindIndex
  nameWithType.vb: ListBase(Of T).FindIndex
- uid: Wintellect.PowerCollections.ListBase`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<T>)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindLast_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.FindLast(System.Predicate{`0})
  name.vb: FindLast(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ListBase<T>.FindLast(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindLast(System.Predicate(Of T))
  nameWithType: ListBase<T>.FindLast(Predicate<T>)
  nameWithType.vb: ListBase(Of T).FindLast(Predicate(Of T))
- uid: Wintellect.PowerCollections.ListBase`1.FindLast*
  name: FindLast
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindLast_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.FindLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.FindLast
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindLast
  nameWithType: ListBase<T>.FindLast
  nameWithType.vb: ListBase(Of T).FindLast
- uid: Wintellect.PowerCollections.ListBase`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindLastIndex_System_Int32_System_Int32_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.ListBase<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  nameWithType: ListBase<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType.vb: ListBase(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.ListBase`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindLastIndex_System_Int32_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.ListBase<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  nameWithType: ListBase<T>.FindLastIndex(Int32, Predicate<T>)
  nameWithType.vb: ListBase(Of T).FindLastIndex(Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.ListBase`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<T>)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindLastIndex_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.FindLastIndex(System.Predicate{`0})
  name.vb: FindLastIndex(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ListBase<T>.FindLastIndex(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindLastIndex(System.Predicate(Of T))
  nameWithType: ListBase<T>.FindLastIndex(Predicate<T>)
  nameWithType.vb: ListBase(Of T).FindLastIndex(Predicate(Of T))
- uid: Wintellect.PowerCollections.ListBase`1.FindLastIndex*
  name: FindLastIndex
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_FindLastIndex_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.FindLastIndex
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.FindLastIndex
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).FindLastIndex
  nameWithType: ListBase<T>.FindLastIndex
  nameWithType.vb: ListBase(Of T).FindLastIndex
- uid: Wintellect.PowerCollections.ListBase`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.ListBase`1.GetEnumerator
  fullName: Wintellect.PowerCollections.ListBase<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).GetEnumerator()
  nameWithType: ListBase<T>.GetEnumerator()
  nameWithType.vb: ListBase(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.ListBase`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).GetEnumerator
  nameWithType: ListBase<T>.GetEnumerator
  nameWithType.vb: ListBase(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.ListBase`1.IndexOf(`0)
  name: IndexOf(T)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_IndexOf__0_
  commentId: M:Wintellect.PowerCollections.ListBase`1.IndexOf(`0)
  fullName: Wintellect.PowerCollections.ListBase<T>.IndexOf(T)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).IndexOf(T)
  nameWithType: ListBase<T>.IndexOf(T)
  nameWithType.vb: ListBase(Of T).IndexOf(T)
- uid: Wintellect.PowerCollections.ListBase`1.IndexOf(`0,System.Int32)
  name: IndexOf(T, Int32)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_IndexOf__0_System_Int32_
  commentId: M:Wintellect.PowerCollections.ListBase`1.IndexOf(`0,System.Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.IndexOf(T, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).IndexOf(T, System.Int32)
  nameWithType: ListBase<T>.IndexOf(T, Int32)
  nameWithType.vb: ListBase(Of T).IndexOf(T, Int32)
- uid: Wintellect.PowerCollections.ListBase`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(T, Int32, Int32)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_IndexOf__0_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.ListBase`1.IndexOf(`0,System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.IndexOf(T, System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).IndexOf(T, System.Int32, System.Int32)
  nameWithType: ListBase<T>.IndexOf(T, Int32, Int32)
  nameWithType.vb: ListBase(Of T).IndexOf(T, Int32, Int32)
- uid: Wintellect.PowerCollections.ListBase`1.IndexOf*
  name: IndexOf
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_IndexOf_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.IndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.IndexOf
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).IndexOf
  nameWithType: ListBase<T>.IndexOf
  nameWithType.vb: ListBase(Of T).IndexOf
- uid: Wintellect.PowerCollections.ListBase`1.Insert(System.Int32,`0)
  name: Insert(Int32, T)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Insert_System_Int32__0_
  commentId: M:Wintellect.PowerCollections.ListBase`1.Insert(System.Int32,`0)
  fullName: Wintellect.PowerCollections.ListBase<T>.Insert(System.Int32, T)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Insert(System.Int32, T)
  nameWithType: ListBase<T>.Insert(Int32, T)
  nameWithType.vb: ListBase(Of T).Insert(Int32, T)
- uid: Wintellect.PowerCollections.ListBase`1.Insert*
  name: Insert
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Insert_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Insert
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Insert
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Insert
  nameWithType: ListBase<T>.Insert
  nameWithType.vb: ListBase(Of T).Insert
- uid: Wintellect.PowerCollections.ListBase`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.ListBase`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Item(System.Int32)
  nameWithType: ListBase<T>.Item[Int32]
  nameWithType.vb: ListBase(Of T).Item(Int32)
- uid: Wintellect.PowerCollections.ListBase`1.Item*
  name: Item
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Item_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Item
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Item
  nameWithType: ListBase<T>.Item
  nameWithType.vb: ListBase(Of T).Item
- uid: Wintellect.PowerCollections.ListBase`1.LastIndexOf(`0)
  name: LastIndexOf(T)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_LastIndexOf__0_
  commentId: M:Wintellect.PowerCollections.ListBase`1.LastIndexOf(`0)
  fullName: Wintellect.PowerCollections.ListBase<T>.LastIndexOf(T)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).LastIndexOf(T)
  nameWithType: ListBase<T>.LastIndexOf(T)
  nameWithType.vb: ListBase(Of T).LastIndexOf(T)
- uid: Wintellect.PowerCollections.ListBase`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(T, Int32)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_LastIndexOf__0_System_Int32_
  commentId: M:Wintellect.PowerCollections.ListBase`1.LastIndexOf(`0,System.Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.LastIndexOf(T, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).LastIndexOf(T, System.Int32)
  nameWithType: ListBase<T>.LastIndexOf(T, Int32)
  nameWithType.vb: ListBase(Of T).LastIndexOf(T, Int32)
- uid: Wintellect.PowerCollections.ListBase`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(T, Int32, Int32)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_LastIndexOf__0_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.ListBase`1.LastIndexOf(`0,System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.LastIndexOf(T, System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).LastIndexOf(T, System.Int32, System.Int32)
  nameWithType: ListBase<T>.LastIndexOf(T, Int32, Int32)
  nameWithType.vb: ListBase(Of T).LastIndexOf(T, Int32, Int32)
- uid: Wintellect.PowerCollections.ListBase`1.LastIndexOf*
  name: LastIndexOf
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_LastIndexOf_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.LastIndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.LastIndexOf
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).LastIndexOf
  nameWithType: ListBase<T>.LastIndexOf
  nameWithType.vb: ListBase(Of T).LastIndexOf
- uid: Wintellect.PowerCollections.ListBase`1.Range(System.Int32,System.Int32)
  name: Range(Int32, Int32)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Range_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.ListBase`1.Range(System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.Range(System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Range(System.Int32, System.Int32)
  nameWithType: ListBase<T>.Range(Int32, Int32)
  nameWithType.vb: ListBase(Of T).Range(Int32, Int32)
- uid: Wintellect.PowerCollections.ListBase`1.Range*
  name: Range
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Range_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Range
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Range
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Range
  nameWithType: ListBase<T>.Range
  nameWithType.vb: ListBase(Of T).Range
- uid: Wintellect.PowerCollections.ListBase`1.Remove(`0)
  name: Remove(T)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Remove__0_
  commentId: M:Wintellect.PowerCollections.ListBase`1.Remove(`0)
  fullName: Wintellect.PowerCollections.ListBase<T>.Remove(T)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Remove(T)
  nameWithType: ListBase<T>.Remove(T)
  nameWithType.vb: ListBase(Of T).Remove(T)
- uid: Wintellect.PowerCollections.ListBase`1.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_Remove_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.Remove
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).Remove
  nameWithType: ListBase<T>.Remove
  nameWithType.vb: ListBase(Of T).Remove
- uid: Wintellect.PowerCollections.ListBase`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_RemoveAt_System_Int32_
  commentId: M:Wintellect.PowerCollections.ListBase`1.RemoveAt(System.Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.RemoveAt(System.Int32)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).RemoveAt(System.Int32)
  nameWithType: ListBase<T>.RemoveAt(Int32)
  nameWithType.vb: ListBase(Of T).RemoveAt(Int32)
- uid: Wintellect.PowerCollections.ListBase`1.RemoveAt*
  name: RemoveAt
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_RemoveAt_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.RemoveAt
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.RemoveAt
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).RemoveAt
  nameWithType: ListBase<T>.RemoveAt
  nameWithType.vb: ListBase(Of T).RemoveAt
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Add_System_Object_
  commentId: M:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Add(System.Object)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Add(System.Object)
  nameWithType: ListBase<T>.IList.Add(Object)
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Add(Object)
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Add*
  name: IList.Add
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Add_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Add
  isSpec: "True"
  name.vb: System.Collections.IList.Add
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Add
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Add
  nameWithType: ListBase<T>.IList.Add
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Add
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Clear
  name: IList.Clear()
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Clear
  commentId: M:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Clear
  name.vb: System.Collections.IList.Clear()
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Clear()
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Clear()
  nameWithType: ListBase<T>.IList.Clear()
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Clear()
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Clear*
  name: IList.Clear
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Clear_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Clear
  isSpec: "True"
  name.vb: System.Collections.IList.Clear
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Clear
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Clear
  nameWithType: ListBase<T>.IList.Clear
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Clear
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Contains_System_Object_
  commentId: M:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Contains(System.Object)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Contains(System.Object)
  nameWithType: ListBase<T>.IList.Contains(Object)
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Contains(Object)
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Contains*
  name: IList.Contains
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Contains_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Contains
  isSpec: "True"
  name.vb: System.Collections.IList.Contains
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Contains
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Contains
  nameWithType: ListBase<T>.IList.Contains
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Contains
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_IndexOf_System_Object_
  commentId: M:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.IndexOf(System.Object)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.IndexOf(System.Object)
  nameWithType: ListBase<T>.IList.IndexOf(Object)
  nameWithType.vb: ListBase(Of T).System.Collections.IList.IndexOf(Object)
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IndexOf*
  name: IList.IndexOf
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_IndexOf_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IndexOf
  isSpec: "True"
  name.vb: System.Collections.IList.IndexOf
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.IndexOf
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.IndexOf
  nameWithType: ListBase<T>.IList.IndexOf
  nameWithType.vb: ListBase(Of T).System.Collections.IList.IndexOf
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Insert_System_Int32_System_Object_
  commentId: M:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType: ListBase<T>.IList.Insert(Int32, Object)
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Insert(Int32, Object)
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Insert*
  name: IList.Insert
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Insert_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Insert
  isSpec: "True"
  name.vb: System.Collections.IList.Insert
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Insert
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Insert
  nameWithType: ListBase<T>.IList.Insert
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Insert
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_IsFixedSize
  commentId: P:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.IsFixedSize
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.IsFixedSize
  nameWithType: ListBase<T>.IList.IsFixedSize
  nameWithType.vb: ListBase(Of T).System.Collections.IList.IsFixedSize
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IsFixedSize*
  name: IList.IsFixedSize
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_IsFixedSize_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IsFixedSize
  isSpec: "True"
  name.vb: System.Collections.IList.IsFixedSize
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.IsFixedSize
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.IsFixedSize
  nameWithType: ListBase<T>.IList.IsFixedSize
  nameWithType.vb: ListBase(Of T).System.Collections.IList.IsFixedSize
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_IsReadOnly
  commentId: P:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.IsReadOnly
  nameWithType: ListBase<T>.IList.IsReadOnly
  nameWithType.vb: ListBase(Of T).System.Collections.IList.IsReadOnly
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IsReadOnly*
  name: IList.IsReadOnly
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_IsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#IsReadOnly
  isSpec: "True"
  name.vb: System.Collections.IList.IsReadOnly
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.IsReadOnly
  nameWithType: ListBase<T>.IList.IsReadOnly
  nameWithType.vb: ListBase(Of T).System.Collections.IList.IsReadOnly
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Item(System.Int32)
  nameWithType: ListBase<T>.IList.Item[Int32]
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Item(Int32)
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Item*
  name: IList.Item
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Item_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Item
  isSpec: "True"
  name.vb: System.Collections.IList.Item
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Item
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Item
  nameWithType: ListBase<T>.IList.Item
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Item
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Remove_System_Object_
  commentId: M:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Remove(System.Object)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Remove(System.Object)
  nameWithType: ListBase<T>.IList.Remove(Object)
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Remove(Object)
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Remove*
  name: IList.Remove
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_Remove_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#Remove
  isSpec: "True"
  name.vb: System.Collections.IList.Remove
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.Remove
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.Remove
  nameWithType: ListBase<T>.IList.Remove
  nameWithType.vb: ListBase(Of T).System.Collections.IList.Remove
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#RemoveAt(System.Int32)
  name: IList.RemoveAt(Int32)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_RemoveAt_System_Int32_
  commentId: M:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.RemoveAt(System.Int32)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.RemoveAt(System.Int32)
  nameWithType: ListBase<T>.IList.RemoveAt(Int32)
  nameWithType.vb: ListBase(Of T).System.Collections.IList.RemoveAt(Int32)
- uid: Wintellect.PowerCollections.ListBase`1.System#Collections#IList#RemoveAt*
  name: IList.RemoveAt
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_System_Collections_IList_RemoveAt_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.System#Collections#IList#RemoveAt
  isSpec: "True"
  name.vb: System.Collections.IList.RemoveAt
  fullName: Wintellect.PowerCollections.ListBase<T>.System.Collections.IList.RemoveAt
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).System.Collections.IList.RemoveAt
  nameWithType: ListBase<T>.IList.RemoveAt
  nameWithType.vb: ListBase(Of T).System.Collections.IList.RemoveAt
- uid: Wintellect.PowerCollections.ListBase`1.TryFind(System.Predicate{`0},`0@)
  name: TryFind(Predicate<T>, out T)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_TryFind_System_Predicate__0___0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.TryFind(System.Predicate{`0},`0@)
  name.vb: TryFind(Predicate(Of T), ByRef T)
  fullName: Wintellect.PowerCollections.ListBase<T>.TryFind(System.Predicate<T>, out T)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).TryFind(System.Predicate(Of T), ByRef T)
  nameWithType: ListBase<T>.TryFind(Predicate<T>, out T)
  nameWithType.vb: ListBase(Of T).TryFind(Predicate(Of T), ByRef T)
- uid: Wintellect.PowerCollections.ListBase`1.TryFind*
  name: TryFind
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_TryFind_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.TryFind
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.TryFind
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).TryFind
  nameWithType: ListBase<T>.TryFind
  nameWithType.vb: ListBase(Of T).TryFind
- uid: Wintellect.PowerCollections.ListBase`1.TryFindLast(System.Predicate{`0},`0@)
  name: TryFindLast(Predicate<T>, out T)
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_TryFindLast_System_Predicate__0___0__
  commentId: M:Wintellect.PowerCollections.ListBase`1.TryFindLast(System.Predicate{`0},`0@)
  name.vb: TryFindLast(Predicate(Of T), ByRef T)
  fullName: Wintellect.PowerCollections.ListBase<T>.TryFindLast(System.Predicate<T>, out T)
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).TryFindLast(System.Predicate(Of T), ByRef T)
  nameWithType: ListBase<T>.TryFindLast(Predicate<T>, out T)
  nameWithType.vb: ListBase(Of T).TryFindLast(Predicate(Of T), ByRef T)
- uid: Wintellect.PowerCollections.ListBase`1.TryFindLast*
  name: TryFindLast
  href: api/Wintellect.PowerCollections.ListBase-1.html#Wintellect_PowerCollections_ListBase_1_TryFindLast_
  commentId: Overload:Wintellect.PowerCollections.ListBase`1.TryFindLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ListBase<T>.TryFindLast
  fullName.vb: Wintellect.PowerCollections.ListBase(Of T).TryFindLast
  nameWithType: ListBase<T>.TryFindLast
  nameWithType.vb: ListBase(Of T).TryFindLast
- uid: Wintellect.PowerCollections.MultiDictionary`2
  name: MultiDictionary<TKey, TValue>
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html
  commentId: T:Wintellect.PowerCollections.MultiDictionary`2
  name.vb: MultiDictionary(Of TKey, TValue)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue)
  nameWithType: MultiDictionary<TKey, TValue>
  nameWithType.vb: MultiDictionary(Of TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionary`2.#ctor(System.Boolean)
  name: MultiDictionary(Boolean)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2__ctor_System_Boolean_
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.#ctor(System.Boolean)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.MultiDictionary(System.Boolean)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).MultiDictionary(System.Boolean)
  nameWithType: MultiDictionary<TKey, TValue>.MultiDictionary(Boolean)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).MultiDictionary(Boolean)
- uid: Wintellect.PowerCollections.MultiDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IEqualityComparer{`0})
  name: MultiDictionary(Boolean, IEqualityComparer<TKey>)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2__ctor_System_Boolean_System_Collections_Generic_IEqualityComparer__0__
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IEqualityComparer{`0})
  name.vb: MultiDictionary(Boolean, IEqualityComparer(Of TKey))
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.MultiDictionary(System.Boolean, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).MultiDictionary(System.Boolean, System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: MultiDictionary<TKey, TValue>.MultiDictionary(Boolean, IEqualityComparer<TKey>)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).MultiDictionary(Boolean, IEqualityComparer(Of TKey))
- uid: Wintellect.PowerCollections.MultiDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  name: MultiDictionary(Boolean, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2__ctor_System_Boolean_System_Collections_Generic_IEqualityComparer__0__System_Collections_Generic_IEqualityComparer__1__
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  name.vb: MultiDictionary(Boolean, IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.MultiDictionary(System.Boolean, System.Collections.Generic.IEqualityComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).MultiDictionary(System.Boolean, System.Collections.Generic.IEqualityComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  nameWithType: MultiDictionary<TKey, TValue>.MultiDictionary(Boolean, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).MultiDictionary(Boolean, IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: Wintellect.PowerCollections.MultiDictionary`2.#ctor*
  name: MultiDictionary
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2__ctor_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.MultiDictionary
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).MultiDictionary
  nameWithType: MultiDictionary<TKey, TValue>.MultiDictionary
  nameWithType.vb: MultiDictionary(Of TKey, TValue).MultiDictionary
- uid: Wintellect.PowerCollections.MultiDictionary`2.Add(`0,`1)
  name: Add(TKey, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Add__0__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.Add(`0,`1)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Add(TKey, TValue)
  nameWithType: MultiDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Add(TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionary`2.Add*
  name: Add
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Add_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Add
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Add
  nameWithType: MultiDictionary<TKey, TValue>.Add
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Add
- uid: Wintellect.PowerCollections.MultiDictionary`2.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Clear
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.Clear
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Clear()
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Clear()
  nameWithType: MultiDictionary<TKey, TValue>.Clear()
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Clear()
- uid: Wintellect.PowerCollections.MultiDictionary`2.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Clear_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Clear
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Clear
  nameWithType: MultiDictionary<TKey, TValue>.Clear
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Clear
- uid: Wintellect.PowerCollections.MultiDictionary`2.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Clone
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.Clone
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Clone()
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Clone()
  nameWithType: MultiDictionary<TKey, TValue>.Clone()
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Clone()
- uid: Wintellect.PowerCollections.MultiDictionary`2.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Clone_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Clone
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Clone
  nameWithType: MultiDictionary<TKey, TValue>.Clone
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Clone
- uid: Wintellect.PowerCollections.MultiDictionary`2.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_CloneContents
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.CloneContents
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).CloneContents()
  nameWithType: MultiDictionary<TKey, TValue>.CloneContents()
  nameWithType.vb: MultiDictionary(Of TKey, TValue).CloneContents()
- uid: Wintellect.PowerCollections.MultiDictionary`2.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.CloneContents
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).CloneContents
  nameWithType: MultiDictionary<TKey, TValue>.CloneContents
  nameWithType.vb: MultiDictionary(Of TKey, TValue).CloneContents
- uid: Wintellect.PowerCollections.MultiDictionary`2.Contains(`0,`1)
  name: Contains(TKey, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Contains__0__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.Contains(`0,`1)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Contains(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Contains(TKey, TValue)
  nameWithType: MultiDictionary<TKey, TValue>.Contains(TKey, TValue)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Contains(TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionary`2.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Contains_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Contains
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Contains
  nameWithType: MultiDictionary<TKey, TValue>.Contains
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Contains
- uid: Wintellect.PowerCollections.MultiDictionary`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: MultiDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: Wintellect.PowerCollections.MultiDictionary`2.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.ContainsKey
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).ContainsKey
  nameWithType: MultiDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: MultiDictionary(Of TKey, TValue).ContainsKey
- uid: Wintellect.PowerCollections.MultiDictionary`2.Count
  name: Count
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Count
  commentId: P:Wintellect.PowerCollections.MultiDictionary`2.Count
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Count
  nameWithType: MultiDictionary<TKey, TValue>.Count
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.MultiDictionary`2.Count*
  name: Count
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Count_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Count
  nameWithType: MultiDictionary<TKey, TValue>.Count
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.MultiDictionary`2.CountValues(`0)
  name: CountValues(TKey)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_CountValues__0_
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.CountValues(`0)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.CountValues(TKey)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).CountValues(TKey)
  nameWithType: MultiDictionary<TKey, TValue>.CountValues(TKey)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).CountValues(TKey)
- uid: Wintellect.PowerCollections.MultiDictionary`2.CountValues*
  name: CountValues
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_CountValues_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.CountValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.CountValues
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).CountValues
  nameWithType: MultiDictionary<TKey, TValue>.CountValues
  nameWithType.vb: MultiDictionary(Of TKey, TValue).CountValues
- uid: Wintellect.PowerCollections.MultiDictionary`2.EnumerateKeys
  name: EnumerateKeys()
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_EnumerateKeys
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.EnumerateKeys
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.EnumerateKeys()
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).EnumerateKeys()
  nameWithType: MultiDictionary<TKey, TValue>.EnumerateKeys()
  nameWithType.vb: MultiDictionary(Of TKey, TValue).EnumerateKeys()
- uid: Wintellect.PowerCollections.MultiDictionary`2.EnumerateKeys*
  name: EnumerateKeys
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_EnumerateKeys_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.EnumerateKeys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.EnumerateKeys
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).EnumerateKeys
  nameWithType: MultiDictionary<TKey, TValue>.EnumerateKeys
  nameWithType.vb: MultiDictionary(Of TKey, TValue).EnumerateKeys
- uid: Wintellect.PowerCollections.MultiDictionary`2.EqualValues(`1,`1)
  name: EqualValues(TValue, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_EqualValues__1__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.EqualValues(`1,`1)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.EqualValues(TValue, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).EqualValues(TValue, TValue)
  nameWithType: MultiDictionary<TKey, TValue>.EqualValues(TValue, TValue)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).EqualValues(TValue, TValue)
- uid: Wintellect.PowerCollections.MultiDictionary`2.EqualValues*
  name: EqualValues
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_EqualValues_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.EqualValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.EqualValues
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).EqualValues
  nameWithType: MultiDictionary<TKey, TValue>.EqualValues
  nameWithType.vb: MultiDictionary(Of TKey, TValue).EqualValues
- uid: Wintellect.PowerCollections.MultiDictionary`2.KeyComparer
  name: KeyComparer
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_KeyComparer
  commentId: P:Wintellect.PowerCollections.MultiDictionary`2.KeyComparer
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.KeyComparer
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).KeyComparer
  nameWithType: MultiDictionary<TKey, TValue>.KeyComparer
  nameWithType.vb: MultiDictionary(Of TKey, TValue).KeyComparer
- uid: Wintellect.PowerCollections.MultiDictionary`2.KeyComparer*
  name: KeyComparer
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_KeyComparer_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.KeyComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.KeyComparer
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).KeyComparer
  nameWithType: MultiDictionary<TKey, TValue>.KeyComparer
  nameWithType.vb: MultiDictionary(Of TKey, TValue).KeyComparer
- uid: Wintellect.PowerCollections.MultiDictionary`2.Remove(`0)
  name: Remove(TKey)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Remove__0_
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.Remove(`0)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Remove(TKey)
  nameWithType: MultiDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Remove(TKey)
- uid: Wintellect.PowerCollections.MultiDictionary`2.Remove(`0,`1)
  name: Remove(TKey, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Remove__0__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.Remove(`0,`1)
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Remove(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Remove(TKey, TValue)
  nameWithType: MultiDictionary<TKey, TValue>.Remove(TKey, TValue)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Remove(TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionary`2.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_Remove_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.Remove
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).Remove
  nameWithType: MultiDictionary<TKey, TValue>.Remove
  nameWithType.vb: MultiDictionary(Of TKey, TValue).Remove
- uid: Wintellect.PowerCollections.MultiDictionary`2.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).System.ICloneable.Clone()
  nameWithType: MultiDictionary<TKey, TValue>.ICloneable.Clone()
  nameWithType.vb: MultiDictionary(Of TKey, TValue).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.MultiDictionary`2.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).System.ICloneable.Clone
  nameWithType: MultiDictionary<TKey, TValue>.ICloneable.Clone
  nameWithType.vb: MultiDictionary(Of TKey, TValue).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.MultiDictionary`2.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name: TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_TryEnumerateValuesForKey__0_System_Collections_Generic_IEnumerator__1___
  commentId: M:Wintellect.PowerCollections.MultiDictionary`2.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name.vb: TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.TryEnumerateValuesForKey(TKey, out System.Collections.Generic.IEnumerator<TValue>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).TryEnumerateValuesForKey(TKey, ByRef System.Collections.Generic.IEnumerator(Of TValue))
  nameWithType: MultiDictionary<TKey, TValue>.TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  nameWithType.vb: MultiDictionary(Of TKey, TValue).TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
- uid: Wintellect.PowerCollections.MultiDictionary`2.TryEnumerateValuesForKey*
  name: TryEnumerateValuesForKey
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_TryEnumerateValuesForKey_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.TryEnumerateValuesForKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.TryEnumerateValuesForKey
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).TryEnumerateValuesForKey
  nameWithType: MultiDictionary<TKey, TValue>.TryEnumerateValuesForKey
  nameWithType.vb: MultiDictionary(Of TKey, TValue).TryEnumerateValuesForKey
- uid: Wintellect.PowerCollections.MultiDictionary`2.ValueComparer
  name: ValueComparer
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_ValueComparer
  commentId: P:Wintellect.PowerCollections.MultiDictionary`2.ValueComparer
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.ValueComparer
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).ValueComparer
  nameWithType: MultiDictionary<TKey, TValue>.ValueComparer
  nameWithType.vb: MultiDictionary(Of TKey, TValue).ValueComparer
- uid: Wintellect.PowerCollections.MultiDictionary`2.ValueComparer*
  name: ValueComparer
  href: api/Wintellect.PowerCollections.MultiDictionary-2.html#Wintellect_PowerCollections_MultiDictionary_2_ValueComparer_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionary`2.ValueComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionary<TKey, TValue>.ValueComparer
  fullName.vb: Wintellect.PowerCollections.MultiDictionary(Of TKey, TValue).ValueComparer
  nameWithType: MultiDictionary<TKey, TValue>.ValueComparer
  nameWithType.vb: MultiDictionary(Of TKey, TValue).ValueComparer
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2
  name: MultiDictionaryBase<TKey, TValue>
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html
  commentId: T:Wintellect.PowerCollections.MultiDictionaryBase`2
  name.vb: MultiDictionaryBase(Of TKey, TValue)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue)
  nameWithType: MultiDictionaryBase<TKey, TValue>
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Add(`0,`1)
  name: Add(TKey, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Add__0__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Add(`0,`1)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Add(TKey, TValue)
  nameWithType: MultiDictionaryBase<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Add(TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Add(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.ICollection{`1}})
  name: Add(KeyValuePair<TKey, ICollection<TValue>>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Add_System_Collections_Generic_KeyValuePair__0_System_Collections_Generic_ICollection__1___
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Add(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.ICollection{`1}})
  name.vb: Add(KeyValuePair(Of TKey, ICollection(Of TValue)))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Add(System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.ICollection<TValue>>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Add(System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.ICollection(Of TValue)))
  nameWithType: MultiDictionaryBase<TKey, TValue>.Add(KeyValuePair<TKey, ICollection<TValue>>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Add(KeyValuePair(Of TKey, ICollection(Of TValue)))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Add*
  name: Add
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Add_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Add
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Add
  nameWithType: MultiDictionaryBase<TKey, TValue>.Add
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Add
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.AddMany(`0,System.Collections.Generic.IEnumerable{`1})
  name: AddMany(TKey, IEnumerable<TValue>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_AddMany__0_System_Collections_Generic_IEnumerable__1__
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.AddMany(`0,System.Collections.Generic.IEnumerable{`1})
  name.vb: AddMany(TKey, IEnumerable(Of TValue))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.AddMany(TKey, System.Collections.Generic.IEnumerable<TValue>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).AddMany(TKey, System.Collections.Generic.IEnumerable(Of TValue))
  nameWithType: MultiDictionaryBase<TKey, TValue>.AddMany(TKey, IEnumerable<TValue>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).AddMany(TKey, IEnumerable(Of TValue))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.AddMany*
  name: AddMany
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_AddMany_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.AddMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.AddMany
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).AddMany
  nameWithType: MultiDictionaryBase<TKey, TValue>.AddMany
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).AddMany
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Clear
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Clear
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Clear()
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Clear()
  nameWithType: MultiDictionaryBase<TKey, TValue>.Clear()
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Clear()
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Clear_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Clear
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Clear
  nameWithType: MultiDictionaryBase<TKey, TValue>.Clear
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Clear
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Contains(`0,`1)
  name: Contains(TKey, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Contains__0__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Contains(`0,`1)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Contains(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Contains(TKey, TValue)
  nameWithType: MultiDictionaryBase<TKey, TValue>.Contains(TKey, TValue)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Contains(TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Contains(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.ICollection{`1}})
  name: Contains(KeyValuePair<TKey, ICollection<TValue>>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Contains_System_Collections_Generic_KeyValuePair__0_System_Collections_Generic_ICollection__1___
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Contains(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.ICollection{`1}})
  name.vb: Contains(KeyValuePair(Of TKey, ICollection(Of TValue)))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.ICollection<TValue>>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.ICollection(Of TValue)))
  nameWithType: MultiDictionaryBase<TKey, TValue>.Contains(KeyValuePair<TKey, ICollection<TValue>>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Contains(KeyValuePair(Of TKey, ICollection(Of TValue)))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Contains_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Contains
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Contains
  nameWithType: MultiDictionaryBase<TKey, TValue>.Contains
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Contains
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: MultiDictionaryBase<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).ContainsKey(TKey)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.ContainsKey
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).ContainsKey
  nameWithType: MultiDictionaryBase<TKey, TValue>.ContainsKey
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).ContainsKey
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Count
  name: Count
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Count
  commentId: P:Wintellect.PowerCollections.MultiDictionaryBase`2.Count
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Count
  nameWithType: MultiDictionaryBase<TKey, TValue>.Count
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Count*
  name: Count
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Count_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Count
  nameWithType: MultiDictionaryBase<TKey, TValue>.Count
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.CountAllValues
  name: CountAllValues()
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_CountAllValues
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.CountAllValues
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.CountAllValues()
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).CountAllValues()
  nameWithType: MultiDictionaryBase<TKey, TValue>.CountAllValues()
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).CountAllValues()
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.CountAllValues*
  name: CountAllValues
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_CountAllValues_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.CountAllValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.CountAllValues
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).CountAllValues
  nameWithType: MultiDictionaryBase<TKey, TValue>.CountAllValues
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).CountAllValues
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.CountValues(`0)
  name: CountValues(TKey)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_CountValues__0_
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.CountValues(`0)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.CountValues(TKey)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).CountValues(TKey)
  nameWithType: MultiDictionaryBase<TKey, TValue>.CountValues(TKey)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).CountValues(TKey)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.CountValues*
  name: CountValues
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_CountValues_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.CountValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.CountValues
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).CountValues
  nameWithType: MultiDictionaryBase<TKey, TValue>.CountValues
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).CountValues
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.EnumerateKeys
  name: EnumerateKeys()
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_EnumerateKeys
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.EnumerateKeys
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.EnumerateKeys()
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).EnumerateKeys()
  nameWithType: MultiDictionaryBase<TKey, TValue>.EnumerateKeys()
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).EnumerateKeys()
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.EnumerateKeys*
  name: EnumerateKeys
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_EnumerateKeys_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.EnumerateKeys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.EnumerateKeys
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).EnumerateKeys
  nameWithType: MultiDictionaryBase<TKey, TValue>.EnumerateKeys
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).EnumerateKeys
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.EqualValues(`1,`1)
  name: EqualValues(TValue, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_EqualValues__1__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.EqualValues(`1,`1)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.EqualValues(TValue, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).EqualValues(TValue, TValue)
  nameWithType: MultiDictionaryBase<TKey, TValue>.EqualValues(TValue, TValue)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).EqualValues(TValue, TValue)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.EqualValues*
  name: EqualValues
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_EqualValues_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.EqualValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.EqualValues
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).EqualValues
  nameWithType: MultiDictionaryBase<TKey, TValue>.EqualValues
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).EqualValues
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_GetEnumerator
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.GetEnumerator
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).GetEnumerator()
  nameWithType: MultiDictionaryBase<TKey, TValue>.GetEnumerator()
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).GetEnumerator()
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).GetEnumerator
  nameWithType: MultiDictionaryBase<TKey, TValue>.GetEnumerator
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).GetEnumerator
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Item(`0)
  name: Item[TKey]
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Item__0_
  commentId: P:Wintellect.PowerCollections.MultiDictionaryBase`2.Item(`0)
  name.vb: Item(TKey)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Item[TKey]
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Item(TKey)
  nameWithType: MultiDictionaryBase<TKey, TValue>.Item[TKey]
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Item(TKey)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Item*
  name: Item
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Item_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Item
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Item
  nameWithType: MultiDictionaryBase<TKey, TValue>.Item
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Item
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Keys
  name: Keys
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Keys
  commentId: P:Wintellect.PowerCollections.MultiDictionaryBase`2.Keys
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Keys
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Keys
  nameWithType: MultiDictionaryBase<TKey, TValue>.Keys
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Keys
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Keys*
  name: Keys
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Keys_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Keys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Keys
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Keys
  nameWithType: MultiDictionaryBase<TKey, TValue>.Keys
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Keys
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.KeyValuePairs
  name: KeyValuePairs
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_KeyValuePairs
  commentId: P:Wintellect.PowerCollections.MultiDictionaryBase`2.KeyValuePairs
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.KeyValuePairs
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).KeyValuePairs
  nameWithType: MultiDictionaryBase<TKey, TValue>.KeyValuePairs
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).KeyValuePairs
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.KeyValuePairs*
  name: KeyValuePairs
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_KeyValuePairs_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.KeyValuePairs
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.KeyValuePairs
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).KeyValuePairs
  nameWithType: MultiDictionaryBase<TKey, TValue>.KeyValuePairs
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).KeyValuePairs
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Remove(`0)
  name: Remove(TKey)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Remove__0_
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Remove(`0)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Remove(TKey)
  nameWithType: MultiDictionaryBase<TKey, TValue>.Remove(TKey)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Remove(TKey)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Remove(`0,`1)
  name: Remove(TKey, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Remove__0__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Remove(`0,`1)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Remove(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Remove(TKey, TValue)
  nameWithType: MultiDictionaryBase<TKey, TValue>.Remove(TKey, TValue)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Remove(TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Remove(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.ICollection{`1}})
  name: Remove(KeyValuePair<TKey, ICollection<TValue>>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Remove_System_Collections_Generic_KeyValuePair__0_System_Collections_Generic_ICollection__1___
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Remove(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.ICollection{`1}})
  name.vb: Remove(KeyValuePair(Of TKey, ICollection(Of TValue)))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Remove(System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.ICollection<TValue>>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Remove(System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.ICollection(Of TValue)))
  nameWithType: MultiDictionaryBase<TKey, TValue>.Remove(KeyValuePair<TKey, ICollection<TValue>>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Remove(KeyValuePair(Of TKey, ICollection(Of TValue)))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Remove_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Remove
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Remove
  nameWithType: MultiDictionaryBase<TKey, TValue>.Remove
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Remove
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.RemoveMany(`0,System.Collections.Generic.IEnumerable{`1})
  name: RemoveMany(TKey, IEnumerable<TValue>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_RemoveMany__0_System_Collections_Generic_IEnumerable__1__
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.RemoveMany(`0,System.Collections.Generic.IEnumerable{`1})
  name.vb: RemoveMany(TKey, IEnumerable(Of TValue))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.RemoveMany(TKey, System.Collections.Generic.IEnumerable<TValue>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).RemoveMany(TKey, System.Collections.Generic.IEnumerable(Of TValue))
  nameWithType: MultiDictionaryBase<TKey, TValue>.RemoveMany(TKey, IEnumerable<TValue>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).RemoveMany(TKey, IEnumerable(Of TValue))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name: RemoveMany(IEnumerable<TKey>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_RemoveMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: RemoveMany(IEnumerable(Of TKey))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.RemoveMany(System.Collections.Generic.IEnumerable<TKey>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).RemoveMany(System.Collections.Generic.IEnumerable(Of TKey))
  nameWithType: MultiDictionaryBase<TKey, TValue>.RemoveMany(IEnumerable<TKey>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).RemoveMany(IEnumerable(Of TKey))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.RemoveMany*
  name: RemoveMany
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_RemoveMany_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.RemoveMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.RemoveMany
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).RemoveMany
  nameWithType: MultiDictionaryBase<TKey, TValue>.RemoveMany
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).RemoveMany
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Replace(`0,`1)
  name: Replace(TKey, TValue)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Replace__0__1_
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.Replace(`0,`1)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Replace(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Replace(TKey, TValue)
  nameWithType: MultiDictionaryBase<TKey, TValue>.Replace(TKey, TValue)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Replace(TKey, TValue)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Replace*
  name: Replace
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Replace_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Replace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Replace
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Replace
  nameWithType: MultiDictionaryBase<TKey, TValue>.Replace
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Replace
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.ReplaceMany(`0,System.Collections.Generic.IEnumerable{`1})
  name: ReplaceMany(TKey, IEnumerable<TValue>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_ReplaceMany__0_System_Collections_Generic_IEnumerable__1__
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.ReplaceMany(`0,System.Collections.Generic.IEnumerable{`1})
  name.vb: ReplaceMany(TKey, IEnumerable(Of TValue))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.ReplaceMany(TKey, System.Collections.Generic.IEnumerable<TValue>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).ReplaceMany(TKey, System.Collections.Generic.IEnumerable(Of TValue))
  nameWithType: MultiDictionaryBase<TKey, TValue>.ReplaceMany(TKey, IEnumerable<TValue>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).ReplaceMany(TKey, IEnumerable(Of TValue))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.ReplaceMany*
  name: ReplaceMany
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_ReplaceMany_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.ReplaceMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.ReplaceMany
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).ReplaceMany
  nameWithType: MultiDictionaryBase<TKey, TValue>.ReplaceMany
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).ReplaceMany
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Add(`0,System.Collections.Generic.ICollection{`1})
  name: IDictionary<TKey, ICollection<TValue>>.Add(TKey, ICollection<TValue>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Add__0_System_Collections_Generic_ICollection__1__
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Add(`0,System.Collections.Generic.ICollection{`1})
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add(TKey, ICollection(Of TValue))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Add(TKey, System.Collections.Generic.ICollection<TValue>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add(TKey, System.Collections.Generic.ICollection(Of TValue))
  nameWithType: MultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Add(TKey, ICollection<TValue>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add(TKey, ICollection(Of TValue))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Add*
  name: IDictionary<TKey, ICollection<TValue>>.Add
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Add_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Add
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Add
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add
  nameWithType: MultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Add
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Item(`0)
  name: IDictionary<TKey, ICollection<TValue>>.Item[TKey]
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Item__0_
  commentId: P:Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Item(`0)
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item(TKey)
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Item[TKey]
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item(TKey)
  nameWithType: MultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Item[TKey]
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item(TKey)
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Item*
  name: IDictionary<TKey, ICollection<TValue>>.Item
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Item_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Item
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Item
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item
  nameWithType: MultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Item
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#TryGetValue(`0,System.Collections.Generic.ICollection{`1}@)
  name: IDictionary<TKey, ICollection<TValue>>.TryGetValue(TKey, out ICollection<TValue>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___TryGetValue__0_System_Collections_Generic_ICollection__1___
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#TryGetValue(`0,System.Collections.Generic.ICollection{`1}@)
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue(TKey, ByRef ICollection(Of TValue))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.TryGetValue(TKey, out System.Collections.Generic.ICollection<TValue>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue(TKey, ByRef System.Collections.Generic.ICollection(Of TValue))
  nameWithType: MultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.TryGetValue(TKey, out ICollection<TValue>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue(TKey, ByRef ICollection(Of TValue))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#TryGetValue*
  name: IDictionary<TKey, ICollection<TValue>>.TryGetValue
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___TryGetValue_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#TryGetValue
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.TryGetValue
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue
  nameWithType: MultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.TryGetValue
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Values
  name: IDictionary<TKey, ICollection<TValue>>.Values
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Values
  commentId: P:Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Values
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Values
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
  nameWithType: MultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Values
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Values*
  name: IDictionary<TKey, ICollection<TValue>>.Values
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Values_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Values
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Values
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
  nameWithType: MultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Values
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.ToString
  name: ToString()
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_ToString
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.ToString
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.ToString()
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).ToString()
  nameWithType: MultiDictionaryBase<TKey, TValue>.ToString()
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).ToString()
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_ToString_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.ToString
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).ToString
  nameWithType: MultiDictionaryBase<TKey, TValue>.ToString
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).ToString
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name: TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_TryEnumerateValuesForKey__0_System_Collections_Generic_IEnumerator__1___
  commentId: M:Wintellect.PowerCollections.MultiDictionaryBase`2.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name.vb: TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.TryEnumerateValuesForKey(TKey, out System.Collections.Generic.IEnumerator<TValue>)
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).TryEnumerateValuesForKey(TKey, ByRef System.Collections.Generic.IEnumerator(Of TValue))
  nameWithType: MultiDictionaryBase<TKey, TValue>.TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.TryEnumerateValuesForKey*
  name: TryEnumerateValuesForKey
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_TryEnumerateValuesForKey_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.TryEnumerateValuesForKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.TryEnumerateValuesForKey
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).TryEnumerateValuesForKey
  nameWithType: MultiDictionaryBase<TKey, TValue>.TryEnumerateValuesForKey
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).TryEnumerateValuesForKey
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Values
  name: Values
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Values
  commentId: P:Wintellect.PowerCollections.MultiDictionaryBase`2.Values
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Values
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Values
  nameWithType: MultiDictionaryBase<TKey, TValue>.Values
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Values
- uid: Wintellect.PowerCollections.MultiDictionaryBase`2.Values*
  name: Values
  href: api/Wintellect.PowerCollections.MultiDictionaryBase-2.html#Wintellect_PowerCollections_MultiDictionaryBase_2_Values_
  commentId: Overload:Wintellect.PowerCollections.MultiDictionaryBase`2.Values
  isSpec: "True"
  fullName: Wintellect.PowerCollections.MultiDictionaryBase<TKey, TValue>.Values
  fullName.vb: Wintellect.PowerCollections.MultiDictionaryBase(Of TKey, TValue).Values
  nameWithType: MultiDictionaryBase<TKey, TValue>.Values
  nameWithType.vb: MultiDictionaryBase(Of TKey, TValue).Values
- uid: Wintellect.PowerCollections.OrderedBag`1
  name: OrderedBag<T>
  href: api/Wintellect.PowerCollections.OrderedBag-1.html
  commentId: T:Wintellect.PowerCollections.OrderedBag`1
  name.vb: OrderedBag(Of T)
  fullName: Wintellect.PowerCollections.OrderedBag<T>
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T)
  nameWithType: OrderedBag<T>
  nameWithType.vb: OrderedBag(Of T)
- uid: Wintellect.PowerCollections.OrderedBag`1.#ctor
  name: OrderedBag()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1__ctor
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.#ctor
  fullName: Wintellect.PowerCollections.OrderedBag<T>.OrderedBag()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).OrderedBag()
  nameWithType: OrderedBag<T>.OrderedBag()
  nameWithType.vb: OrderedBag(Of T).OrderedBag()
- uid: Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Collections.Generic.IComparer{`0})
  name: OrderedBag(IComparer<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1__ctor_System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Collections.Generic.IComparer{`0})
  name.vb: OrderedBag(IComparer(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.OrderedBag(System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).OrderedBag(System.Collections.Generic.IComparer(Of T))
  nameWithType: OrderedBag<T>.OrderedBag(IComparer<T>)
  nameWithType.vb: OrderedBag(Of T).OrderedBag(IComparer(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name: OrderedBag(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1__ctor_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name.vb: OrderedBag(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.OrderedBag(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).OrderedBag(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: OrderedBag<T>.OrderedBag(IEnumerable<T>)
  nameWithType.vb: OrderedBag(Of T).OrderedBag(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})
  name: OrderedBag(IEnumerable<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1__ctor_System_Collections_Generic_IEnumerable__0__System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})
  name.vb: OrderedBag(IEnumerable(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.OrderedBag(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).OrderedBag(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: OrderedBag<T>.OrderedBag(IEnumerable<T>, IComparer<T>)
  nameWithType.vb: OrderedBag(Of T).OrderedBag(IEnumerable(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Comparison{`0})
  name: OrderedBag(IEnumerable<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1__ctor_System_Collections_Generic_IEnumerable__0__System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Comparison{`0})
  name.vb: OrderedBag(IEnumerable(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.OrderedBag(System.Collections.Generic.IEnumerable<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).OrderedBag(System.Collections.Generic.IEnumerable(Of T), System.Comparison(Of T))
  nameWithType: OrderedBag<T>.OrderedBag(IEnumerable<T>, Comparison<T>)
  nameWithType.vb: OrderedBag(Of T).OrderedBag(IEnumerable(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Comparison{`0})
  name: OrderedBag(Comparison<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1__ctor_System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.#ctor(System.Comparison{`0})
  name.vb: OrderedBag(Comparison(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.OrderedBag(System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).OrderedBag(System.Comparison(Of T))
  nameWithType: OrderedBag<T>.OrderedBag(Comparison<T>)
  nameWithType.vb: OrderedBag(Of T).OrderedBag(Comparison(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.#ctor*
  name: OrderedBag
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1__ctor_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.OrderedBag
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).OrderedBag
  nameWithType: OrderedBag<T>.OrderedBag
  nameWithType.vb: OrderedBag(Of T).OrderedBag
- uid: Wintellect.PowerCollections.OrderedBag`1.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Add__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Add(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Add(T)
  nameWithType: OrderedBag<T>.Add(T)
  nameWithType.vb: OrderedBag(Of T).Add(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.Add*
  name: Add
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Add
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Add
  nameWithType: OrderedBag<T>.Add
  nameWithType.vb: OrderedBag(Of T).Add
- uid: Wintellect.PowerCollections.OrderedBag`1.AddMany(System.Collections.Generic.IEnumerable{`0})
  name: AddMany(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_AddMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.AddMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddMany(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.AddMany(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).AddMany(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: OrderedBag<T>.AddMany(IEnumerable<T>)
  nameWithType.vb: OrderedBag(Of T).AddMany(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.AddMany*
  name: AddMany
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_AddMany_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.AddMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.AddMany
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).AddMany
  nameWithType: OrderedBag<T>.AddMany
  nameWithType.vb: OrderedBag(Of T).AddMany
- uid: Wintellect.PowerCollections.OrderedBag`1.AsList
  name: AsList()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_AsList
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.AsList
  fullName: Wintellect.PowerCollections.OrderedBag<T>.AsList()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).AsList()
  nameWithType: OrderedBag<T>.AsList()
  nameWithType.vb: OrderedBag(Of T).AsList()
- uid: Wintellect.PowerCollections.OrderedBag`1.AsList*
  name: AsList
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_AsList_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.AsList
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.AsList
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).AsList
  nameWithType: OrderedBag<T>.AsList
  nameWithType.vb: OrderedBag(Of T).AsList
- uid: Wintellect.PowerCollections.OrderedBag`1.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Clear
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Clear
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Clear()
  nameWithType: OrderedBag<T>.Clear()
  nameWithType.vb: OrderedBag(Of T).Clear()
- uid: Wintellect.PowerCollections.OrderedBag`1.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Clear_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Clear
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Clear
  nameWithType: OrderedBag<T>.Clear
  nameWithType.vb: OrderedBag(Of T).Clear
- uid: Wintellect.PowerCollections.OrderedBag`1.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Clone
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Clone
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Clone()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Clone()
  nameWithType: OrderedBag<T>.Clone()
  nameWithType.vb: OrderedBag(Of T).Clone()
- uid: Wintellect.PowerCollections.OrderedBag`1.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Clone_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Clone
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Clone
  nameWithType: OrderedBag<T>.Clone
  nameWithType.vb: OrderedBag(Of T).Clone
- uid: Wintellect.PowerCollections.OrderedBag`1.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_CloneContents
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.CloneContents
  fullName: Wintellect.PowerCollections.OrderedBag<T>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).CloneContents()
  nameWithType: OrderedBag<T>.CloneContents()
  nameWithType.vb: OrderedBag(Of T).CloneContents()
- uid: Wintellect.PowerCollections.OrderedBag`1.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.CloneContents
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).CloneContents
  nameWithType: OrderedBag<T>.CloneContents
  nameWithType.vb: OrderedBag(Of T).CloneContents
- uid: Wintellect.PowerCollections.OrderedBag`1.Comparer
  name: Comparer
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Comparer
  commentId: P:Wintellect.PowerCollections.OrderedBag`1.Comparer
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Comparer
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Comparer
  nameWithType: OrderedBag<T>.Comparer
  nameWithType.vb: OrderedBag(Of T).Comparer
- uid: Wintellect.PowerCollections.OrderedBag`1.Comparer*
  name: Comparer
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Comparer_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Comparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Comparer
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Comparer
  nameWithType: OrderedBag<T>.Comparer
  nameWithType.vb: OrderedBag(Of T).Comparer
- uid: Wintellect.PowerCollections.OrderedBag`1.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Contains__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Contains(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Contains(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Contains(T)
  nameWithType: OrderedBag<T>.Contains(T)
  nameWithType.vb: OrderedBag(Of T).Contains(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Contains_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Contains
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Contains
  nameWithType: OrderedBag<T>.Contains
  nameWithType.vb: OrderedBag(Of T).Contains
- uid: Wintellect.PowerCollections.OrderedBag`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Count
  commentId: P:Wintellect.PowerCollections.OrderedBag`1.Count
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Count
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Count
  nameWithType: OrderedBag<T>.Count
  nameWithType.vb: OrderedBag(Of T).Count
- uid: Wintellect.PowerCollections.OrderedBag`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Count_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Count
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Count
  nameWithType: OrderedBag<T>.Count
  nameWithType.vb: OrderedBag(Of T).Count
- uid: Wintellect.PowerCollections.OrderedBag`1.Difference(Wintellect.PowerCollections.OrderedBag{`0})
  name: Difference(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Difference_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Difference(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: Difference(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Difference(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Difference(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.Difference(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).Difference(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.Difference*
  name: Difference
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Difference_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Difference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Difference
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Difference
  nameWithType: OrderedBag<T>.Difference
  nameWithType.vb: OrderedBag(Of T).Difference
- uid: Wintellect.PowerCollections.OrderedBag`1.DifferenceWith(Wintellect.PowerCollections.OrderedBag{`0})
  name: DifferenceWith(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_DifferenceWith_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.DifferenceWith(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: DifferenceWith(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.DifferenceWith(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).DifferenceWith(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.DifferenceWith(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).DifferenceWith(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.DifferenceWith*
  name: DifferenceWith
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_DifferenceWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.DifferenceWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.DifferenceWith
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).DifferenceWith
  nameWithType: OrderedBag<T>.DifferenceWith
  nameWithType.vb: OrderedBag(Of T).DifferenceWith
- uid: Wintellect.PowerCollections.OrderedBag`1.DistinctItems
  name: DistinctItems()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_DistinctItems
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.DistinctItems
  fullName: Wintellect.PowerCollections.OrderedBag<T>.DistinctItems()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).DistinctItems()
  nameWithType: OrderedBag<T>.DistinctItems()
  nameWithType.vb: OrderedBag(Of T).DistinctItems()
- uid: Wintellect.PowerCollections.OrderedBag`1.DistinctItems*
  name: DistinctItems
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_DistinctItems_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.DistinctItems
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.DistinctItems
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).DistinctItems
  nameWithType: OrderedBag<T>.DistinctItems
  nameWithType.vb: OrderedBag(Of T).DistinctItems
- uid: Wintellect.PowerCollections.OrderedBag`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.GetEnumerator
  fullName: Wintellect.PowerCollections.OrderedBag<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).GetEnumerator()
  nameWithType: OrderedBag<T>.GetEnumerator()
  nameWithType.vb: OrderedBag(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.OrderedBag`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).GetEnumerator
  nameWithType: OrderedBag<T>.GetEnumerator
  nameWithType.vb: OrderedBag(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.OrderedBag`1.GetEqualItems(`0)
  name: GetEqualItems(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_GetEqualItems__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.GetEqualItems(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.GetEqualItems(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).GetEqualItems(T)
  nameWithType: OrderedBag<T>.GetEqualItems(T)
  nameWithType.vb: OrderedBag(Of T).GetEqualItems(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.GetEqualItems*
  name: GetEqualItems
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_GetEqualItems_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.GetEqualItems
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.GetEqualItems
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).GetEqualItems
  nameWithType: OrderedBag<T>.GetEqualItems
  nameWithType.vb: OrderedBag(Of T).GetEqualItems
- uid: Wintellect.PowerCollections.OrderedBag`1.GetFirst
  name: GetFirst()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_GetFirst
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.GetFirst
  fullName: Wintellect.PowerCollections.OrderedBag<T>.GetFirst()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).GetFirst()
  nameWithType: OrderedBag<T>.GetFirst()
  nameWithType.vb: OrderedBag(Of T).GetFirst()
- uid: Wintellect.PowerCollections.OrderedBag`1.GetFirst*
  name: GetFirst
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_GetFirst_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.GetFirst
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.GetFirst
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).GetFirst
  nameWithType: OrderedBag<T>.GetFirst
  nameWithType.vb: OrderedBag(Of T).GetFirst
- uid: Wintellect.PowerCollections.OrderedBag`1.GetLast
  name: GetLast()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_GetLast
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.GetLast
  fullName: Wintellect.PowerCollections.OrderedBag<T>.GetLast()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).GetLast()
  nameWithType: OrderedBag<T>.GetLast()
  nameWithType.vb: OrderedBag(Of T).GetLast()
- uid: Wintellect.PowerCollections.OrderedBag`1.GetLast*
  name: GetLast
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_GetLast_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.GetLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.GetLast
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).GetLast
  nameWithType: OrderedBag<T>.GetLast
  nameWithType.vb: OrderedBag(Of T).GetLast
- uid: Wintellect.PowerCollections.OrderedBag`1.IndexOf(`0)
  name: IndexOf(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IndexOf__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.IndexOf(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IndexOf(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IndexOf(T)
  nameWithType: OrderedBag<T>.IndexOf(T)
  nameWithType.vb: OrderedBag(Of T).IndexOf(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.IndexOf*
  name: IndexOf
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IndexOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.IndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IndexOf
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IndexOf
  nameWithType: OrderedBag<T>.IndexOf
  nameWithType.vb: OrderedBag(Of T).IndexOf
- uid: Wintellect.PowerCollections.OrderedBag`1.Intersection(Wintellect.PowerCollections.OrderedBag{`0})
  name: Intersection(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Intersection_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Intersection(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: Intersection(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Intersection(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Intersection(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.Intersection(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).Intersection(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.Intersection*
  name: Intersection
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Intersection_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Intersection
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Intersection
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Intersection
  nameWithType: OrderedBag<T>.Intersection
  nameWithType.vb: OrderedBag(Of T).Intersection
- uid: Wintellect.PowerCollections.OrderedBag`1.IntersectionWith(Wintellect.PowerCollections.OrderedBag{`0})
  name: IntersectionWith(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IntersectionWith_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.IntersectionWith(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: IntersectionWith(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IntersectionWith(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IntersectionWith(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.IntersectionWith(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).IntersectionWith(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.IntersectionWith*
  name: IntersectionWith
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IntersectionWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.IntersectionWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IntersectionWith
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IntersectionWith
  nameWithType: OrderedBag<T>.IntersectionWith
  nameWithType.vb: OrderedBag(Of T).IntersectionWith
- uid: Wintellect.PowerCollections.OrderedBag`1.IsDisjointFrom(Wintellect.PowerCollections.OrderedBag{`0})
  name: IsDisjointFrom(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsDisjointFrom_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.IsDisjointFrom(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: IsDisjointFrom(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsDisjointFrom(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsDisjointFrom(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.IsDisjointFrom(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).IsDisjointFrom(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.IsDisjointFrom*
  name: IsDisjointFrom
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsDisjointFrom_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.IsDisjointFrom
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsDisjointFrom
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsDisjointFrom
  nameWithType: OrderedBag<T>.IsDisjointFrom
  nameWithType.vb: OrderedBag(Of T).IsDisjointFrom
- uid: Wintellect.PowerCollections.OrderedBag`1.IsEqualTo(Wintellect.PowerCollections.OrderedBag{`0})
  name: IsEqualTo(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsEqualTo_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.IsEqualTo(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: IsEqualTo(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsEqualTo(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsEqualTo(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.IsEqualTo(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).IsEqualTo(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.IsEqualTo*
  name: IsEqualTo
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsEqualTo_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.IsEqualTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsEqualTo
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsEqualTo
  nameWithType: OrderedBag<T>.IsEqualTo
  nameWithType.vb: OrderedBag(Of T).IsEqualTo
- uid: Wintellect.PowerCollections.OrderedBag`1.IsProperSubsetOf(Wintellect.PowerCollections.OrderedBag{`0})
  name: IsProperSubsetOf(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsProperSubsetOf_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.IsProperSubsetOf(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: IsProperSubsetOf(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsProperSubsetOf(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsProperSubsetOf(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.IsProperSubsetOf(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).IsProperSubsetOf(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsProperSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.IsProperSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsProperSubsetOf
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsProperSubsetOf
  nameWithType: OrderedBag<T>.IsProperSubsetOf
  nameWithType.vb: OrderedBag(Of T).IsProperSubsetOf
- uid: Wintellect.PowerCollections.OrderedBag`1.IsProperSupersetOf(Wintellect.PowerCollections.OrderedBag{`0})
  name: IsProperSupersetOf(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsProperSupersetOf_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.IsProperSupersetOf(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: IsProperSupersetOf(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsProperSupersetOf(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsProperSupersetOf(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.IsProperSupersetOf(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).IsProperSupersetOf(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsProperSupersetOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.IsProperSupersetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsProperSupersetOf
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsProperSupersetOf
  nameWithType: OrderedBag<T>.IsProperSupersetOf
  nameWithType.vb: OrderedBag(Of T).IsProperSupersetOf
- uid: Wintellect.PowerCollections.OrderedBag`1.IsSubsetOf(Wintellect.PowerCollections.OrderedBag{`0})
  name: IsSubsetOf(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsSubsetOf_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.IsSubsetOf(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: IsSubsetOf(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsSubsetOf(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsSubsetOf(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.IsSubsetOf(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).IsSubsetOf(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.IsSubsetOf*
  name: IsSubsetOf
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.IsSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsSubsetOf
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsSubsetOf
  nameWithType: OrderedBag<T>.IsSubsetOf
  nameWithType.vb: OrderedBag(Of T).IsSubsetOf
- uid: Wintellect.PowerCollections.OrderedBag`1.IsSupersetOf(Wintellect.PowerCollections.OrderedBag{`0})
  name: IsSupersetOf(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsSupersetOf_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.IsSupersetOf(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: IsSupersetOf(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsSupersetOf(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsSupersetOf(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.IsSupersetOf(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).IsSupersetOf(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.IsSupersetOf*
  name: IsSupersetOf
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_IsSupersetOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.IsSupersetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.IsSupersetOf
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).IsSupersetOf
  nameWithType: OrderedBag<T>.IsSupersetOf
  nameWithType.vb: OrderedBag(Of T).IsSupersetOf
- uid: Wintellect.PowerCollections.OrderedBag`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.OrderedBag`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Item(System.Int32)
  nameWithType: OrderedBag<T>.Item[Int32]
  nameWithType.vb: OrderedBag(Of T).Item(Int32)
- uid: Wintellect.PowerCollections.OrderedBag`1.Item*
  name: Item
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Item_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Item
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Item
  nameWithType: OrderedBag<T>.Item
  nameWithType.vb: OrderedBag(Of T).Item
- uid: Wintellect.PowerCollections.OrderedBag`1.LastIndexOf(`0)
  name: LastIndexOf(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_LastIndexOf__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.LastIndexOf(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.LastIndexOf(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).LastIndexOf(T)
  nameWithType: OrderedBag<T>.LastIndexOf(T)
  nameWithType.vb: OrderedBag(Of T).LastIndexOf(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.LastIndexOf*
  name: LastIndexOf
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_LastIndexOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.LastIndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.LastIndexOf
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).LastIndexOf
  nameWithType: OrderedBag<T>.LastIndexOf
  nameWithType.vb: OrderedBag(Of T).LastIndexOf
- uid: Wintellect.PowerCollections.OrderedBag`1.NumberOfCopies(`0)
  name: NumberOfCopies(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_NumberOfCopies__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.NumberOfCopies(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.NumberOfCopies(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).NumberOfCopies(T)
  nameWithType: OrderedBag<T>.NumberOfCopies(T)
  nameWithType.vb: OrderedBag(Of T).NumberOfCopies(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.NumberOfCopies*
  name: NumberOfCopies
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_NumberOfCopies_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.NumberOfCopies
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.NumberOfCopies
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).NumberOfCopies
  nameWithType: OrderedBag<T>.NumberOfCopies
  nameWithType.vb: OrderedBag(Of T).NumberOfCopies
- uid: Wintellect.PowerCollections.OrderedBag`1.Range(`0,System.Boolean,`0,System.Boolean)
  name: Range(T, Boolean, T, Boolean)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Range__0_System_Boolean__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Range(`0,System.Boolean,`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Range(T, System.Boolean, T, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Range(T, System.Boolean, T, System.Boolean)
  nameWithType: OrderedBag<T>.Range(T, Boolean, T, Boolean)
  nameWithType.vb: OrderedBag(Of T).Range(T, Boolean, T, Boolean)
- uid: Wintellect.PowerCollections.OrderedBag`1.Range*
  name: Range
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Range_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Range
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Range
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Range
  nameWithType: OrderedBag<T>.Range
  nameWithType.vb: OrderedBag(Of T).Range
- uid: Wintellect.PowerCollections.OrderedBag`1.RangeFrom(`0,System.Boolean)
  name: RangeFrom(T, Boolean)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RangeFrom__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.RangeFrom(`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RangeFrom(T, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RangeFrom(T, System.Boolean)
  nameWithType: OrderedBag<T>.RangeFrom(T, Boolean)
  nameWithType.vb: OrderedBag(Of T).RangeFrom(T, Boolean)
- uid: Wintellect.PowerCollections.OrderedBag`1.RangeFrom*
  name: RangeFrom
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RangeFrom_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.RangeFrom
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RangeFrom
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RangeFrom
  nameWithType: OrderedBag<T>.RangeFrom
  nameWithType.vb: OrderedBag(Of T).RangeFrom
- uid: Wintellect.PowerCollections.OrderedBag`1.RangeTo(`0,System.Boolean)
  name: RangeTo(T, Boolean)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RangeTo__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.RangeTo(`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RangeTo(T, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RangeTo(T, System.Boolean)
  nameWithType: OrderedBag<T>.RangeTo(T, Boolean)
  nameWithType.vb: OrderedBag(Of T).RangeTo(T, Boolean)
- uid: Wintellect.PowerCollections.OrderedBag`1.RangeTo*
  name: RangeTo
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RangeTo_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.RangeTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RangeTo
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RangeTo
  nameWithType: OrderedBag<T>.RangeTo
  nameWithType.vb: OrderedBag(Of T).RangeTo
- uid: Wintellect.PowerCollections.OrderedBag`1.Remove(`0)
  name: Remove(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Remove__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Remove(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Remove(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Remove(T)
  nameWithType: OrderedBag<T>.Remove(T)
  nameWithType.vb: OrderedBag(Of T).Remove(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Remove_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Remove
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Remove
  nameWithType: OrderedBag<T>.Remove
  nameWithType.vb: OrderedBag(Of T).Remove
- uid: Wintellect.PowerCollections.OrderedBag`1.RemoveAllCopies(`0)
  name: RemoveAllCopies(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RemoveAllCopies__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.RemoveAllCopies(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RemoveAllCopies(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RemoveAllCopies(T)
  nameWithType: OrderedBag<T>.RemoveAllCopies(T)
  nameWithType.vb: OrderedBag(Of T).RemoveAllCopies(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.RemoveAllCopies*
  name: RemoveAllCopies
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RemoveAllCopies_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.RemoveAllCopies
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RemoveAllCopies
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RemoveAllCopies
  nameWithType: OrderedBag<T>.RemoveAllCopies
  nameWithType.vb: OrderedBag(Of T).RemoveAllCopies
- uid: Wintellect.PowerCollections.OrderedBag`1.RemoveFirst
  name: RemoveFirst()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RemoveFirst
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.RemoveFirst
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RemoveFirst()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RemoveFirst()
  nameWithType: OrderedBag<T>.RemoveFirst()
  nameWithType.vb: OrderedBag(Of T).RemoveFirst()
- uid: Wintellect.PowerCollections.OrderedBag`1.RemoveFirst*
  name: RemoveFirst
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RemoveFirst_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.RemoveFirst
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RemoveFirst
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RemoveFirst
  nameWithType: OrderedBag<T>.RemoveFirst
  nameWithType.vb: OrderedBag(Of T).RemoveFirst
- uid: Wintellect.PowerCollections.OrderedBag`1.RemoveLast
  name: RemoveLast()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RemoveLast
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.RemoveLast
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RemoveLast()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RemoveLast()
  nameWithType: OrderedBag<T>.RemoveLast()
  nameWithType.vb: OrderedBag(Of T).RemoveLast()
- uid: Wintellect.PowerCollections.OrderedBag`1.RemoveLast*
  name: RemoveLast
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RemoveLast_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.RemoveLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RemoveLast
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RemoveLast
  nameWithType: OrderedBag<T>.RemoveLast
  nameWithType.vb: OrderedBag(Of T).RemoveLast
- uid: Wintellect.PowerCollections.OrderedBag`1.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name: RemoveMany(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RemoveMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: RemoveMany(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RemoveMany(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RemoveMany(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: OrderedBag<T>.RemoveMany(IEnumerable<T>)
  nameWithType.vb: OrderedBag(Of T).RemoveMany(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.RemoveMany*
  name: RemoveMany
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_RemoveMany_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.RemoveMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.RemoveMany
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).RemoveMany
  nameWithType: OrderedBag<T>.RemoveMany
  nameWithType.vb: OrderedBag(Of T).RemoveMany
- uid: Wintellect.PowerCollections.OrderedBag`1.Reversed
  name: Reversed()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Reversed
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Reversed
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Reversed()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Reversed()
  nameWithType: OrderedBag<T>.Reversed()
  nameWithType.vb: OrderedBag(Of T).Reversed()
- uid: Wintellect.PowerCollections.OrderedBag`1.Reversed*
  name: Reversed
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Reversed_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Reversed
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Reversed
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Reversed
  nameWithType: OrderedBag<T>.Reversed
  nameWithType.vb: OrderedBag(Of T).Reversed
- uid: Wintellect.PowerCollections.OrderedBag`1.Sum(Wintellect.PowerCollections.OrderedBag{`0})
  name: Sum(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Sum_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Sum(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: Sum(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Sum(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Sum(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.Sum(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).Sum(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.Sum*
  name: Sum
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Sum_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Sum
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Sum
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Sum
  nameWithType: OrderedBag<T>.Sum
  nameWithType.vb: OrderedBag(Of T).Sum
- uid: Wintellect.PowerCollections.OrderedBag`1.SumWith(Wintellect.PowerCollections.OrderedBag{`0})
  name: SumWith(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_SumWith_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.SumWith(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: SumWith(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.SumWith(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).SumWith(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.SumWith(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).SumWith(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.SumWith*
  name: SumWith
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_SumWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.SumWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.SumWith
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).SumWith
  nameWithType: OrderedBag<T>.SumWith
  nameWithType.vb: OrderedBag(Of T).SumWith
- uid: Wintellect.PowerCollections.OrderedBag`1.SymmetricDifference(Wintellect.PowerCollections.OrderedBag{`0})
  name: SymmetricDifference(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_SymmetricDifference_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.SymmetricDifference(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: SymmetricDifference(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.SymmetricDifference(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).SymmetricDifference(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.SymmetricDifference(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).SymmetricDifference(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.SymmetricDifference*
  name: SymmetricDifference
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_SymmetricDifference_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.SymmetricDifference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.SymmetricDifference
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).SymmetricDifference
  nameWithType: OrderedBag<T>.SymmetricDifference
  nameWithType.vb: OrderedBag(Of T).SymmetricDifference
- uid: Wintellect.PowerCollections.OrderedBag`1.SymmetricDifferenceWith(Wintellect.PowerCollections.OrderedBag{`0})
  name: SymmetricDifferenceWith(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_SymmetricDifferenceWith_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.SymmetricDifferenceWith(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: SymmetricDifferenceWith(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.SymmetricDifferenceWith(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).SymmetricDifferenceWith(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.SymmetricDifferenceWith(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).SymmetricDifferenceWith(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.SymmetricDifferenceWith*
  name: SymmetricDifferenceWith
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_SymmetricDifferenceWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.SymmetricDifferenceWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.SymmetricDifferenceWith
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).SymmetricDifferenceWith
  nameWithType: OrderedBag<T>.SymmetricDifferenceWith
  nameWithType.vb: OrderedBag(Of T).SymmetricDifferenceWith
- uid: Wintellect.PowerCollections.OrderedBag`1.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.OrderedBag<T>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).System.ICloneable.Clone()
  nameWithType: OrderedBag<T>.ICloneable.Clone()
  nameWithType.vb: OrderedBag(Of T).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.OrderedBag`1.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.OrderedBag<T>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).System.ICloneable.Clone
  nameWithType: OrderedBag<T>.ICloneable.Clone
  nameWithType.vb: OrderedBag(Of T).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.OrderedBag`1.Union(Wintellect.PowerCollections.OrderedBag{`0})
  name: Union(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Union_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.Union(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: Union(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Union(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Union(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.Union(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).Union(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.Union*
  name: Union
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_Union_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.Union
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.Union
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).Union
  nameWithType: OrderedBag<T>.Union
  nameWithType.vb: OrderedBag(Of T).Union
- uid: Wintellect.PowerCollections.OrderedBag`1.UnionWith(Wintellect.PowerCollections.OrderedBag{`0})
  name: UnionWith(OrderedBag<T>)
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_UnionWith_Wintellect_PowerCollections_OrderedBag__0__
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.UnionWith(Wintellect.PowerCollections.OrderedBag{`0})
  name.vb: UnionWith(OrderedBag(Of T))
  fullName: Wintellect.PowerCollections.OrderedBag<T>.UnionWith(Wintellect.PowerCollections.OrderedBag<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).UnionWith(Wintellect.PowerCollections.OrderedBag(Of T))
  nameWithType: OrderedBag<T>.UnionWith(OrderedBag<T>)
  nameWithType.vb: OrderedBag(Of T).UnionWith(OrderedBag(Of T))
- uid: Wintellect.PowerCollections.OrderedBag`1.UnionWith*
  name: UnionWith
  href: api/Wintellect.PowerCollections.OrderedBag-1.html#Wintellect_PowerCollections_OrderedBag_1_UnionWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.UnionWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.UnionWith
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).UnionWith
  nameWithType: OrderedBag<T>.UnionWith
  nameWithType.vb: OrderedBag(Of T).UnionWith
- uid: Wintellect.PowerCollections.OrderedBag`1.View
  name: OrderedBag<T>.View
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html
  commentId: T:Wintellect.PowerCollections.OrderedBag`1.View
  name.vb: OrderedBag(Of T).View
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View
  nameWithType: OrderedBag<T>.View
  nameWithType.vb: OrderedBag(Of T).View
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Add__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.Add(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Add(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Add(T)
  nameWithType: OrderedBag<T>.View.Add(T)
  nameWithType.vb: OrderedBag(Of T).View.Add(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Add*
  name: Add
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Add
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Add
  nameWithType: OrderedBag<T>.View.Add
  nameWithType.vb: OrderedBag(Of T).View.Add
- uid: Wintellect.PowerCollections.OrderedBag`1.View.AsList
  name: AsList()
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_AsList
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.AsList
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.AsList()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.AsList()
  nameWithType: OrderedBag<T>.View.AsList()
  nameWithType.vb: OrderedBag(Of T).View.AsList()
- uid: Wintellect.PowerCollections.OrderedBag`1.View.AsList*
  name: AsList
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_AsList_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.AsList
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.AsList
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.AsList
  nameWithType: OrderedBag<T>.View.AsList
  nameWithType.vb: OrderedBag(Of T).View.AsList
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Clear
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.Clear
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Clear()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Clear()
  nameWithType: OrderedBag<T>.View.Clear()
  nameWithType.vb: OrderedBag(Of T).View.Clear()
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Clear_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Clear
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Clear
  nameWithType: OrderedBag<T>.View.Clear
  nameWithType.vb: OrderedBag(Of T).View.Clear
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Contains__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.Contains(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Contains(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Contains(T)
  nameWithType: OrderedBag<T>.View.Contains(T)
  nameWithType.vb: OrderedBag(Of T).View.Contains(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Contains_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Contains
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Contains
  nameWithType: OrderedBag<T>.View.Contains
  nameWithType.vb: OrderedBag(Of T).View.Contains
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Count
  name: Count
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Count
  commentId: P:Wintellect.PowerCollections.OrderedBag`1.View.Count
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Count
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Count
  nameWithType: OrderedBag<T>.View.Count
  nameWithType.vb: OrderedBag(Of T).View.Count
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Count*
  name: Count
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Count_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Count
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Count
  nameWithType: OrderedBag<T>.View.Count
  nameWithType.vb: OrderedBag(Of T).View.Count
- uid: Wintellect.PowerCollections.OrderedBag`1.View.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_GetEnumerator
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.GetEnumerator
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.GetEnumerator()
  nameWithType: OrderedBag<T>.View.GetEnumerator()
  nameWithType.vb: OrderedBag(Of T).View.GetEnumerator()
- uid: Wintellect.PowerCollections.OrderedBag`1.View.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.GetEnumerator
  nameWithType: OrderedBag<T>.View.GetEnumerator
  nameWithType.vb: OrderedBag(Of T).View.GetEnumerator
- uid: Wintellect.PowerCollections.OrderedBag`1.View.GetFirst
  name: GetFirst()
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_GetFirst
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.GetFirst
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.GetFirst()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.GetFirst()
  nameWithType: OrderedBag<T>.View.GetFirst()
  nameWithType.vb: OrderedBag(Of T).View.GetFirst()
- uid: Wintellect.PowerCollections.OrderedBag`1.View.GetFirst*
  name: GetFirst
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_GetFirst_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.GetFirst
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.GetFirst
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.GetFirst
  nameWithType: OrderedBag<T>.View.GetFirst
  nameWithType.vb: OrderedBag(Of T).View.GetFirst
- uid: Wintellect.PowerCollections.OrderedBag`1.View.GetLast
  name: GetLast()
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_GetLast
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.GetLast
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.GetLast()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.GetLast()
  nameWithType: OrderedBag<T>.View.GetLast()
  nameWithType.vb: OrderedBag(Of T).View.GetLast()
- uid: Wintellect.PowerCollections.OrderedBag`1.View.GetLast*
  name: GetLast
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_GetLast_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.GetLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.GetLast
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.GetLast
  nameWithType: OrderedBag<T>.View.GetLast
  nameWithType.vb: OrderedBag(Of T).View.GetLast
- uid: Wintellect.PowerCollections.OrderedBag`1.View.IndexOf(`0)
  name: IndexOf(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_IndexOf__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.IndexOf(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.IndexOf(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.IndexOf(T)
  nameWithType: OrderedBag<T>.View.IndexOf(T)
  nameWithType.vb: OrderedBag(Of T).View.IndexOf(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.View.IndexOf*
  name: IndexOf
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_IndexOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.IndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.IndexOf
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.IndexOf
  nameWithType: OrderedBag<T>.View.IndexOf
  nameWithType.vb: OrderedBag(Of T).View.IndexOf
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Item(System.Int32)
  name: Item[Int32]
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.OrderedBag`1.View.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Item(System.Int32)
  nameWithType: OrderedBag<T>.View.Item[Int32]
  nameWithType.vb: OrderedBag(Of T).View.Item(Int32)
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Item*
  name: Item
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Item_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Item
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Item
  nameWithType: OrderedBag<T>.View.Item
  nameWithType.vb: OrderedBag(Of T).View.Item
- uid: Wintellect.PowerCollections.OrderedBag`1.View.LastIndexOf(`0)
  name: LastIndexOf(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_LastIndexOf__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.LastIndexOf(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.LastIndexOf(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.LastIndexOf(T)
  nameWithType: OrderedBag<T>.View.LastIndexOf(T)
  nameWithType.vb: OrderedBag(Of T).View.LastIndexOf(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.View.LastIndexOf*
  name: LastIndexOf
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_LastIndexOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.LastIndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.LastIndexOf
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.LastIndexOf
  nameWithType: OrderedBag<T>.View.LastIndexOf
  nameWithType.vb: OrderedBag(Of T).View.LastIndexOf
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Remove(`0)
  name: Remove(T)
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Remove__0_
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.Remove(`0)
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Remove(T)
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Remove(T)
  nameWithType: OrderedBag<T>.View.Remove(T)
  nameWithType.vb: OrderedBag(Of T).View.Remove(T)
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Remove_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Remove
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Remove
  nameWithType: OrderedBag<T>.View.Remove
  nameWithType.vb: OrderedBag(Of T).View.Remove
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Reversed
  name: Reversed()
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Reversed
  commentId: M:Wintellect.PowerCollections.OrderedBag`1.View.Reversed
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Reversed()
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Reversed()
  nameWithType: OrderedBag<T>.View.Reversed()
  nameWithType.vb: OrderedBag(Of T).View.Reversed()
- uid: Wintellect.PowerCollections.OrderedBag`1.View.Reversed*
  name: Reversed
  href: api/Wintellect.PowerCollections.OrderedBag-1.View.html#Wintellect_PowerCollections_OrderedBag_1_View_Reversed_
  commentId: Overload:Wintellect.PowerCollections.OrderedBag`1.View.Reversed
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedBag<T>.View.Reversed
  fullName.vb: Wintellect.PowerCollections.OrderedBag(Of T).View.Reversed
  nameWithType: OrderedBag<T>.View.Reversed
  nameWithType.vb: OrderedBag(Of T).View.Reversed
- uid: Wintellect.PowerCollections.OrderedDictionary`2
  name: OrderedDictionary<TKey, TValue>
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html
  commentId: T:Wintellect.PowerCollections.OrderedDictionary`2
  name.vb: OrderedDictionary(Of TKey, TValue)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue)
  nameWithType: OrderedDictionary<TKey, TValue>
  nameWithType.vb: OrderedDictionary(Of TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.#ctor
  name: OrderedDictionary()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2__ctor
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.#ctor
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.OrderedDictionary()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).OrderedDictionary()
  nameWithType: OrderedDictionary<TKey, TValue>.OrderedDictionary()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).OrderedDictionary()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})
  name: OrderedDictionary(IComparer<TKey>)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2__ctor_System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})
  name.vb: OrderedDictionary(IComparer(Of TKey))
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.OrderedDictionary(System.Collections.Generic.IComparer<TKey>)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).OrderedDictionary(System.Collections.Generic.IComparer(Of TKey))
  nameWithType: OrderedDictionary<TKey, TValue>.OrderedDictionary(IComparer<TKey>)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).OrderedDictionary(IComparer(Of TKey))
- uid: Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  name: OrderedDictionary(IEnumerable<KeyValuePair<TKey, TValue>>)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2__ctor_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair__0__1___
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  name.vb: OrderedDictionary(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.OrderedDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).OrderedDictionary(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  nameWithType: OrderedDictionary<TKey, TValue>.OrderedDictionary(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).OrderedDictionary(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IComparer{`0})
  name: OrderedDictionary(IEnumerable<KeyValuePair<TKey, TValue>>, IComparer<TKey>)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2__ctor_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair__0__1___System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IComparer{`0})
  name.vb: OrderedDictionary(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IComparer(Of TKey))
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.OrderedDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).OrderedDictionary(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IComparer(Of TKey))
  nameWithType: OrderedDictionary<TKey, TValue>.OrderedDictionary(IEnumerable<KeyValuePair<TKey, TValue>>, IComparer<TKey>)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).OrderedDictionary(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IComparer(Of TKey))
- uid: Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Comparison{`0})
  name: OrderedDictionary(IEnumerable<KeyValuePair<TKey, TValue>>, Comparison<TKey>)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2__ctor_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair__0__1___System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Comparison{`0})
  name.vb: OrderedDictionary(IEnumerable(Of KeyValuePair(Of TKey, TValue)), Comparison(Of TKey))
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.OrderedDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Comparison<TKey>)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).OrderedDictionary(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Comparison(Of TKey))
  nameWithType: OrderedDictionary<TKey, TValue>.OrderedDictionary(IEnumerable<KeyValuePair<TKey, TValue>>, Comparison<TKey>)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).OrderedDictionary(IEnumerable(Of KeyValuePair(Of TKey, TValue)), Comparison(Of TKey))
- uid: Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Comparison{`0})
  name: OrderedDictionary(Comparison<TKey>)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2__ctor_System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.#ctor(System.Comparison{`0})
  name.vb: OrderedDictionary(Comparison(Of TKey))
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.OrderedDictionary(System.Comparison<TKey>)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).OrderedDictionary(System.Comparison(Of TKey))
  nameWithType: OrderedDictionary<TKey, TValue>.OrderedDictionary(Comparison<TKey>)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).OrderedDictionary(Comparison(Of TKey))
- uid: Wintellect.PowerCollections.OrderedDictionary`2.#ctor*
  name: OrderedDictionary
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2__ctor_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.OrderedDictionary
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).OrderedDictionary
  nameWithType: OrderedDictionary<TKey, TValue>.OrderedDictionary
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).OrderedDictionary
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Add(`0,`1)
  name: Add(TKey, TValue)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Add__0__1_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.Add(`0,`1)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Add(TKey, TValue)
  nameWithType: OrderedDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Add(TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Add*
  name: Add
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Add
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Add
  nameWithType: OrderedDictionary<TKey, TValue>.Add
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Add
- uid: Wintellect.PowerCollections.OrderedDictionary`2.AddMany(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  name: AddMany(IEnumerable<KeyValuePair<TKey, TValue>>)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_AddMany_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair__0__1___
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.AddMany(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  name.vb: AddMany(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.AddMany(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).AddMany(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  nameWithType: OrderedDictionary<TKey, TValue>.AddMany(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).AddMany(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
- uid: Wintellect.PowerCollections.OrderedDictionary`2.AddMany*
  name: AddMany
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_AddMany_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.AddMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.AddMany
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).AddMany
  nameWithType: OrderedDictionary<TKey, TValue>.AddMany
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).AddMany
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Clear
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.Clear
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Clear()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Clear()
  nameWithType: OrderedDictionary<TKey, TValue>.Clear()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Clear()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Clear_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Clear
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Clear
  nameWithType: OrderedDictionary<TKey, TValue>.Clear
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Clear
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Clone
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.Clone
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Clone()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Clone()
  nameWithType: OrderedDictionary<TKey, TValue>.Clone()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Clone()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Clone_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Clone
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Clone
  nameWithType: OrderedDictionary<TKey, TValue>.Clone
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Clone
- uid: Wintellect.PowerCollections.OrderedDictionary`2.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_CloneContents
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.CloneContents
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).CloneContents()
  nameWithType: OrderedDictionary<TKey, TValue>.CloneContents()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).CloneContents()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.CloneContents
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).CloneContents
  nameWithType: OrderedDictionary<TKey, TValue>.CloneContents
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).CloneContents
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Comparer
  name: Comparer
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Comparer
  commentId: P:Wintellect.PowerCollections.OrderedDictionary`2.Comparer
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Comparer
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Comparer
  nameWithType: OrderedDictionary<TKey, TValue>.Comparer
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Comparer
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Comparer*
  name: Comparer
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Comparer_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Comparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Comparer
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Comparer
  nameWithType: OrderedDictionary<TKey, TValue>.Comparer
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Comparer
- uid: Wintellect.PowerCollections.OrderedDictionary`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: OrderedDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.ContainsKey
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).ContainsKey
  nameWithType: OrderedDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).ContainsKey
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Count
  name: Count
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Count
  commentId: P:Wintellect.PowerCollections.OrderedDictionary`2.Count
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Count
  nameWithType: OrderedDictionary<TKey, TValue>.Count
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Count*
  name: Count
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Count_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Count
  nameWithType: OrderedDictionary<TKey, TValue>.Count
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.OrderedDictionary`2.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_GetEnumerator
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.GetEnumerator
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).GetEnumerator()
  nameWithType: OrderedDictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).GetEnumerator()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).GetEnumerator
  nameWithType: OrderedDictionary<TKey, TValue>.GetEnumerator
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).GetEnumerator
- uid: Wintellect.PowerCollections.OrderedDictionary`2.GetValueElseAdd(`0,`1@)
  name: GetValueElseAdd(TKey, ref TValue)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_GetValueElseAdd__0__1__
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.GetValueElseAdd(`0,`1@)
  name.vb: GetValueElseAdd(TKey, ByRef TValue)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.GetValueElseAdd(TKey, ref TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).GetValueElseAdd(TKey, ByRef TValue)
  nameWithType: OrderedDictionary<TKey, TValue>.GetValueElseAdd(TKey, ref TValue)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).GetValueElseAdd(TKey, ByRef TValue)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.GetValueElseAdd*
  name: GetValueElseAdd
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_GetValueElseAdd_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.GetValueElseAdd
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.GetValueElseAdd
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).GetValueElseAdd
  nameWithType: OrderedDictionary<TKey, TValue>.GetValueElseAdd
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).GetValueElseAdd
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Item(`0)
  name: Item[TKey]
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Item__0_
  commentId: P:Wintellect.PowerCollections.OrderedDictionary`2.Item(`0)
  name.vb: Item(TKey)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Item[TKey]
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Item(TKey)
  nameWithType: OrderedDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Item(TKey)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Item*
  name: Item
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Item_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Item
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Item
  nameWithType: OrderedDictionary<TKey, TValue>.Item
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Item
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Range(`0,System.Boolean,`0,System.Boolean)
  name: Range(TKey, Boolean, TKey, Boolean)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Range__0_System_Boolean__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.Range(`0,System.Boolean,`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Range(TKey, System.Boolean, TKey, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Range(TKey, System.Boolean, TKey, System.Boolean)
  nameWithType: OrderedDictionary<TKey, TValue>.Range(TKey, Boolean, TKey, Boolean)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Range(TKey, Boolean, TKey, Boolean)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Range*
  name: Range
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Range_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Range
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Range
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Range
  nameWithType: OrderedDictionary<TKey, TValue>.Range
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Range
- uid: Wintellect.PowerCollections.OrderedDictionary`2.RangeFrom(`0,System.Boolean)
  name: RangeFrom(TKey, Boolean)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_RangeFrom__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.RangeFrom(`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.RangeFrom(TKey, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).RangeFrom(TKey, System.Boolean)
  nameWithType: OrderedDictionary<TKey, TValue>.RangeFrom(TKey, Boolean)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).RangeFrom(TKey, Boolean)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.RangeFrom*
  name: RangeFrom
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_RangeFrom_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.RangeFrom
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.RangeFrom
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).RangeFrom
  nameWithType: OrderedDictionary<TKey, TValue>.RangeFrom
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).RangeFrom
- uid: Wintellect.PowerCollections.OrderedDictionary`2.RangeTo(`0,System.Boolean)
  name: RangeTo(TKey, Boolean)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_RangeTo__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.RangeTo(`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.RangeTo(TKey, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).RangeTo(TKey, System.Boolean)
  nameWithType: OrderedDictionary<TKey, TValue>.RangeTo(TKey, Boolean)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).RangeTo(TKey, Boolean)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.RangeTo*
  name: RangeTo
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_RangeTo_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.RangeTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.RangeTo
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).RangeTo
  nameWithType: OrderedDictionary<TKey, TValue>.RangeTo
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).RangeTo
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Remove(`0)
  name: Remove(TKey)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Remove__0_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.Remove(`0)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Remove(TKey)
  nameWithType: OrderedDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Remove(TKey)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Remove_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Remove
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Remove
  nameWithType: OrderedDictionary<TKey, TValue>.Remove
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Remove
- uid: Wintellect.PowerCollections.OrderedDictionary`2.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name: RemoveMany(IEnumerable<TKey>)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_RemoveMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: RemoveMany(IEnumerable(Of TKey))
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.RemoveMany(System.Collections.Generic.IEnumerable<TKey>)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).RemoveMany(System.Collections.Generic.IEnumerable(Of TKey))
  nameWithType: OrderedDictionary<TKey, TValue>.RemoveMany(IEnumerable<TKey>)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).RemoveMany(IEnumerable(Of TKey))
- uid: Wintellect.PowerCollections.OrderedDictionary`2.RemoveMany*
  name: RemoveMany
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_RemoveMany_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.RemoveMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.RemoveMany
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).RemoveMany
  nameWithType: OrderedDictionary<TKey, TValue>.RemoveMany
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).RemoveMany
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Replace(`0,`1)
  name: Replace(TKey, TValue)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Replace__0__1_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.Replace(`0,`1)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Replace(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Replace(TKey, TValue)
  nameWithType: OrderedDictionary<TKey, TValue>.Replace(TKey, TValue)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Replace(TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Replace*
  name: Replace
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Replace_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Replace
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Replace
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Replace
  nameWithType: OrderedDictionary<TKey, TValue>.Replace
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Replace
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Reversed
  name: Reversed()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Reversed
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.Reversed
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Reversed()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Reversed()
  nameWithType: OrderedDictionary<TKey, TValue>.Reversed()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Reversed()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.Reversed*
  name: Reversed
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_Reversed_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.Reversed
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.Reversed
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).Reversed
  nameWithType: OrderedDictionary<TKey, TValue>.Reversed
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).Reversed
- uid: Wintellect.PowerCollections.OrderedDictionary`2.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).System.ICloneable.Clone()
  nameWithType: OrderedDictionary<TKey, TValue>.ICloneable.Clone()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).System.ICloneable.Clone
  nameWithType: OrderedDictionary<TKey, TValue>.ICloneable.Clone
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.OrderedDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, out TValue)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_TryGetValue__0__1__
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.TryGetValue(`0,`1@)
  name.vb: TryGetValue(TKey, ByRef TValue)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  nameWithType: OrderedDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.TryGetValue*
  name: TryGetValue
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.html#Wintellect_PowerCollections_OrderedDictionary_2_TryGetValue_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.TryGetValue
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.TryGetValue
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).TryGetValue
  nameWithType: OrderedDictionary<TKey, TValue>.TryGetValue
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).TryGetValue
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View
  name: OrderedDictionary<TKey, TValue>.View
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html
  commentId: T:Wintellect.PowerCollections.OrderedDictionary`2.View
  name.vb: OrderedDictionary(Of TKey, TValue).View
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View
  nameWithType: OrderedDictionary<TKey, TValue>.View
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Clear
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.View.Clear
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Clear()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Clear()
  nameWithType: OrderedDictionary<TKey, TValue>.View.Clear()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Clear()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Clear_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.View.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Clear
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Clear
  nameWithType: OrderedDictionary<TKey, TValue>.View.Clear
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Clear
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.View.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.ContainsKey(TKey)
  nameWithType: OrderedDictionary<TKey, TValue>.View.ContainsKey(TKey)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.ContainsKey(TKey)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.View.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.ContainsKey
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.ContainsKey
  nameWithType: OrderedDictionary<TKey, TValue>.View.ContainsKey
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.ContainsKey
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Count
  name: Count
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Count
  commentId: P:Wintellect.PowerCollections.OrderedDictionary`2.View.Count
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Count
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Count
  nameWithType: OrderedDictionary<TKey, TValue>.View.Count
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Count
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Count*
  name: Count
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Count_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.View.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Count
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Count
  nameWithType: OrderedDictionary<TKey, TValue>.View.Count
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Count
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_GetEnumerator
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.View.GetEnumerator
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.GetEnumerator()
  nameWithType: OrderedDictionary<TKey, TValue>.View.GetEnumerator()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.GetEnumerator()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.View.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.GetEnumerator
  nameWithType: OrderedDictionary<TKey, TValue>.View.GetEnumerator
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.GetEnumerator
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Item(`0)
  name: Item[TKey]
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Item__0_
  commentId: P:Wintellect.PowerCollections.OrderedDictionary`2.View.Item(`0)
  name.vb: Item(TKey)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Item[TKey]
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Item(TKey)
  nameWithType: OrderedDictionary<TKey, TValue>.View.Item[TKey]
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Item(TKey)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Item*
  name: Item
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Item_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.View.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Item
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Item
  nameWithType: OrderedDictionary<TKey, TValue>.View.Item
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Item
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Remove(`0)
  name: Remove(TKey)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Remove__0_
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.View.Remove(`0)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Remove(TKey)
  nameWithType: OrderedDictionary<TKey, TValue>.View.Remove(TKey)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Remove(TKey)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Remove_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.View.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Remove
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Remove
  nameWithType: OrderedDictionary<TKey, TValue>.View.Remove
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Remove
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Reversed
  name: Reversed()
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Reversed
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.View.Reversed
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Reversed()
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Reversed()
  nameWithType: OrderedDictionary<TKey, TValue>.View.Reversed()
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Reversed()
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.Reversed*
  name: Reversed
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_Reversed_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.View.Reversed
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.Reversed
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.Reversed
  nameWithType: OrderedDictionary<TKey, TValue>.View.Reversed
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.Reversed
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, out TValue)
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_TryGetValue__0__1__
  commentId: M:Wintellect.PowerCollections.OrderedDictionary`2.View.TryGetValue(`0,`1@)
  name.vb: TryGetValue(TKey, ByRef TValue)
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.TryGetValue(TKey, out TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.TryGetValue(TKey, ByRef TValue)
  nameWithType: OrderedDictionary<TKey, TValue>.View.TryGetValue(TKey, out TValue)
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.TryGetValue(TKey, ByRef TValue)
- uid: Wintellect.PowerCollections.OrderedDictionary`2.View.TryGetValue*
  name: TryGetValue
  href: api/Wintellect.PowerCollections.OrderedDictionary-2.View.html#Wintellect_PowerCollections_OrderedDictionary_2_View_TryGetValue_
  commentId: Overload:Wintellect.PowerCollections.OrderedDictionary`2.View.TryGetValue
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedDictionary<TKey, TValue>.View.TryGetValue
  fullName.vb: Wintellect.PowerCollections.OrderedDictionary(Of TKey, TValue).View.TryGetValue
  nameWithType: OrderedDictionary<TKey, TValue>.View.TryGetValue
  nameWithType.vb: OrderedDictionary(Of TKey, TValue).View.TryGetValue
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2
  name: OrderedMultiDictionary<TKey, TValue>
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html
  commentId: T:Wintellect.PowerCollections.OrderedMultiDictionary`2
  name.vb: OrderedMultiDictionary(Of TKey, TValue)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue)
  nameWithType: OrderedMultiDictionary<TKey, TValue>
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean)
  name: OrderedMultiDictionary(Boolean)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2__ctor_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(System.Boolean)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(Boolean)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(Boolean)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IComparer{`0})
  name: OrderedMultiDictionary(Boolean, IComparer<TKey>)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2__ctor_System_Boolean_System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IComparer{`0})
  name.vb: OrderedMultiDictionary(Boolean, IComparer(Of TKey))
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(System.Boolean, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(System.Boolean, System.Collections.Generic.IComparer(Of TKey))
  nameWithType: OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(Boolean, IComparer<TKey>)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(Boolean, IComparer(Of TKey))
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IComparer{`0},System.Collections.Generic.IComparer{`1})
  name: OrderedMultiDictionary(Boolean, IComparer<TKey>, IComparer<TValue>)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2__ctor_System_Boolean_System_Collections_Generic_IComparer__0__System_Collections_Generic_IComparer__1__
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean,System.Collections.Generic.IComparer{`0},System.Collections.Generic.IComparer{`1})
  name.vb: OrderedMultiDictionary(Boolean, IComparer(Of TKey), IComparer(Of TValue))
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(System.Boolean, System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IComparer<TValue>)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(System.Boolean, System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IComparer(Of TValue))
  nameWithType: OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(Boolean, IComparer<TKey>, IComparer<TValue>)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(Boolean, IComparer(Of TKey), IComparer(Of TValue))
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean,System.Comparison{`0})
  name: OrderedMultiDictionary(Boolean, Comparison<TKey>)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2__ctor_System_Boolean_System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean,System.Comparison{`0})
  name.vb: OrderedMultiDictionary(Boolean, Comparison(Of TKey))
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(System.Boolean, System.Comparison<TKey>)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(System.Boolean, System.Comparison(Of TKey))
  nameWithType: OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(Boolean, Comparison<TKey>)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(Boolean, Comparison(Of TKey))
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean,System.Comparison{`0},System.Comparison{`1})
  name: OrderedMultiDictionary(Boolean, Comparison<TKey>, Comparison<TValue>)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2__ctor_System_Boolean_System_Comparison__0__System_Comparison__1__
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor(System.Boolean,System.Comparison{`0},System.Comparison{`1})
  name.vb: OrderedMultiDictionary(Boolean, Comparison(Of TKey), Comparison(Of TValue))
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(System.Boolean, System.Comparison<TKey>, System.Comparison<TValue>)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(System.Boolean, System.Comparison(Of TKey), System.Comparison(Of TValue))
  nameWithType: OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary(Boolean, Comparison<TKey>, Comparison<TValue>)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary(Boolean, Comparison(Of TKey), Comparison(Of TValue))
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor*
  name: OrderedMultiDictionary
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2__ctor_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary
  nameWithType: OrderedMultiDictionary<TKey, TValue>.OrderedMultiDictionary
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).OrderedMultiDictionary
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Add(`0,`1)
  name: Add(TKey, TValue)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Add__0__1_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.Add(`0,`1)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Add(TKey, TValue)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Add(TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Add*
  name: Add
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Add
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Add
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Add
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Add
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Clear
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.Clear
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Clear()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Clear()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Clear()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Clear()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Clear_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Clear
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Clear
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Clear
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Clear
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Clone
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.Clone
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Clone()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Clone()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Clone()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Clone()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Clone_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Clone
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Clone
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Clone
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Clone
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_CloneContents
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.CloneContents
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).CloneContents()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.CloneContents()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).CloneContents()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.CloneContents
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).CloneContents
  nameWithType: OrderedMultiDictionary<TKey, TValue>.CloneContents
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).CloneContents
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Contains(`0,`1)
  name: Contains(TKey, TValue)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Contains__0__1_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.Contains(`0,`1)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Contains(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Contains(TKey, TValue)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Contains(TKey, TValue)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Contains(TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Contains_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Contains
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Contains
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Contains
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Contains
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.ContainsKey
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).ContainsKey
  nameWithType: OrderedMultiDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).ContainsKey
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Count
  name: Count
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Count
  commentId: P:Wintellect.PowerCollections.OrderedMultiDictionary`2.Count
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Count
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Count
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Count*
  name: Count
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Count_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Count
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Count
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.CountAllValues
  name: CountAllValues()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_CountAllValues
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.CountAllValues
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.CountAllValues()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).CountAllValues()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.CountAllValues()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).CountAllValues()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.CountAllValues*
  name: CountAllValues
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_CountAllValues_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.CountAllValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.CountAllValues
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).CountAllValues
  nameWithType: OrderedMultiDictionary<TKey, TValue>.CountAllValues
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).CountAllValues
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.CountValues(`0)
  name: CountValues(TKey)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_CountValues__0_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.CountValues(`0)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.CountValues(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).CountValues(TKey)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.CountValues(TKey)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).CountValues(TKey)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.CountValues*
  name: CountValues
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_CountValues_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.CountValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.CountValues
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).CountValues
  nameWithType: OrderedMultiDictionary<TKey, TValue>.CountValues
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).CountValues
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.EnumerateKeys
  name: EnumerateKeys()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_EnumerateKeys
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.EnumerateKeys
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.EnumerateKeys()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).EnumerateKeys()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.EnumerateKeys()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).EnumerateKeys()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.EnumerateKeys*
  name: EnumerateKeys
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_EnumerateKeys_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.EnumerateKeys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.EnumerateKeys
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).EnumerateKeys
  nameWithType: OrderedMultiDictionary<TKey, TValue>.EnumerateKeys
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).EnumerateKeys
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.EqualValues(`1,`1)
  name: EqualValues(TValue, TValue)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_EqualValues__1__1_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.EqualValues(`1,`1)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.EqualValues(TValue, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).EqualValues(TValue, TValue)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.EqualValues(TValue, TValue)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).EqualValues(TValue, TValue)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.EqualValues*
  name: EqualValues
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_EqualValues_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.EqualValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.EqualValues
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).EqualValues
  nameWithType: OrderedMultiDictionary<TKey, TValue>.EqualValues
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).EqualValues
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.KeyComparer
  name: KeyComparer
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_KeyComparer
  commentId: P:Wintellect.PowerCollections.OrderedMultiDictionary`2.KeyComparer
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.KeyComparer
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).KeyComparer
  nameWithType: OrderedMultiDictionary<TKey, TValue>.KeyComparer
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).KeyComparer
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.KeyComparer*
  name: KeyComparer
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_KeyComparer_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.KeyComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.KeyComparer
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).KeyComparer
  nameWithType: OrderedMultiDictionary<TKey, TValue>.KeyComparer
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).KeyComparer
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.KeyValuePairs
  name: KeyValuePairs
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_KeyValuePairs
  commentId: P:Wintellect.PowerCollections.OrderedMultiDictionary`2.KeyValuePairs
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.KeyValuePairs
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).KeyValuePairs
  nameWithType: OrderedMultiDictionary<TKey, TValue>.KeyValuePairs
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).KeyValuePairs
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.KeyValuePairs*
  name: KeyValuePairs
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_KeyValuePairs_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.KeyValuePairs
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.KeyValuePairs
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).KeyValuePairs
  nameWithType: OrderedMultiDictionary<TKey, TValue>.KeyValuePairs
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).KeyValuePairs
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Range(`0,System.Boolean,`0,System.Boolean)
  name: Range(TKey, Boolean, TKey, Boolean)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Range__0_System_Boolean__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.Range(`0,System.Boolean,`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Range(TKey, System.Boolean, TKey, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Range(TKey, System.Boolean, TKey, System.Boolean)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Range(TKey, Boolean, TKey, Boolean)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Range(TKey, Boolean, TKey, Boolean)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Range*
  name: Range
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Range_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.Range
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Range
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Range
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Range
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Range
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.RangeFrom(`0,System.Boolean)
  name: RangeFrom(TKey, Boolean)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_RangeFrom__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.RangeFrom(`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.RangeFrom(TKey, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).RangeFrom(TKey, System.Boolean)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.RangeFrom(TKey, Boolean)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).RangeFrom(TKey, Boolean)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.RangeFrom*
  name: RangeFrom
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_RangeFrom_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.RangeFrom
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.RangeFrom
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).RangeFrom
  nameWithType: OrderedMultiDictionary<TKey, TValue>.RangeFrom
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).RangeFrom
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.RangeTo(`0,System.Boolean)
  name: RangeTo(TKey, Boolean)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_RangeTo__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.RangeTo(`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.RangeTo(TKey, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).RangeTo(TKey, System.Boolean)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.RangeTo(TKey, Boolean)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).RangeTo(TKey, Boolean)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.RangeTo*
  name: RangeTo
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_RangeTo_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.RangeTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.RangeTo
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).RangeTo
  nameWithType: OrderedMultiDictionary<TKey, TValue>.RangeTo
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).RangeTo
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Remove(`0)
  name: Remove(TKey)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Remove__0_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.Remove(`0)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Remove(TKey)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Remove(TKey)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Remove(`0,`1)
  name: Remove(TKey, TValue)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Remove__0__1_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.Remove(`0,`1)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Remove(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Remove(TKey, TValue)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Remove(TKey, TValue)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Remove(TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Remove_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Remove
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Remove
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Remove
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Remove
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Reversed
  name: Reversed()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Reversed
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.Reversed
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Reversed()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Reversed()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Reversed()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Reversed()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.Reversed*
  name: Reversed
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_Reversed_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.Reversed
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.Reversed
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).Reversed
  nameWithType: OrderedMultiDictionary<TKey, TValue>.Reversed
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).Reversed
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).System.ICloneable.Clone()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.ICloneable.Clone()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).System.ICloneable.Clone
  nameWithType: OrderedMultiDictionary<TKey, TValue>.ICloneable.Clone
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name: TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_TryEnumerateValuesForKey__0_System_Collections_Generic_IEnumerator__1___
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name.vb: TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.TryEnumerateValuesForKey(TKey, out System.Collections.Generic.IEnumerator<TValue>)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).TryEnumerateValuesForKey(TKey, ByRef System.Collections.Generic.IEnumerator(Of TValue))
  nameWithType: OrderedMultiDictionary<TKey, TValue>.TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.TryEnumerateValuesForKey*
  name: TryEnumerateValuesForKey
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_TryEnumerateValuesForKey_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.TryEnumerateValuesForKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.TryEnumerateValuesForKey
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).TryEnumerateValuesForKey
  nameWithType: OrderedMultiDictionary<TKey, TValue>.TryEnumerateValuesForKey
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).TryEnumerateValuesForKey
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.ValueComparer
  name: ValueComparer
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_ValueComparer
  commentId: P:Wintellect.PowerCollections.OrderedMultiDictionary`2.ValueComparer
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.ValueComparer
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).ValueComparer
  nameWithType: OrderedMultiDictionary<TKey, TValue>.ValueComparer
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).ValueComparer
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.ValueComparer*
  name: ValueComparer
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_ValueComparer_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.ValueComparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.ValueComparer
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).ValueComparer
  nameWithType: OrderedMultiDictionary<TKey, TValue>.ValueComparer
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).ValueComparer
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View
  name: OrderedMultiDictionary<TKey, TValue>.View
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html
  commentId: T:Wintellect.PowerCollections.OrderedMultiDictionary`2.View
  name.vb: OrderedMultiDictionary(Of TKey, TValue).View
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Add(`0,`1)
  name: Add(TKey, TValue)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Add__0__1_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Add(`0,`1)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Add(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Add(TKey, TValue)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Add(TKey, TValue)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Add(TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Add*
  name: Add
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Add
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Add
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Add
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Add
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Clear
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Clear
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Clear()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Clear()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Clear()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Clear()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Clear_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Clear
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Clear
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Clear
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Clear
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Contains(`0,`1)
  name: Contains(TKey, TValue)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Contains__0__1_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Contains(`0,`1)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Contains(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Contains(TKey, TValue)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Contains(TKey, TValue)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Contains(TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Contains_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Contains
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Contains
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Contains
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Contains
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.ContainsKey(TKey)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.ContainsKey(TKey)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.ContainsKey(TKey)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.ContainsKey
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.ContainsKey
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.ContainsKey
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.ContainsKey
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Count
  name: Count
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Count
  commentId: P:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Count
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Count
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Count
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Count
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Count
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Count*
  name: Count
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Count_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Count
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Count
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Count
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Count
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.CountValues(`0)
  name: CountValues(TKey)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_CountValues__0_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.CountValues(`0)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.CountValues(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.CountValues(TKey)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.CountValues(TKey)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.CountValues(TKey)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.CountValues*
  name: CountValues
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_CountValues_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.CountValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.CountValues
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.CountValues
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.CountValues
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.CountValues
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.EnumerateKeys
  name: EnumerateKeys()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_EnumerateKeys
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.EnumerateKeys
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.EnumerateKeys()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.EnumerateKeys()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.EnumerateKeys()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.EnumerateKeys()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.EnumerateKeys*
  name: EnumerateKeys
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_EnumerateKeys_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.EnumerateKeys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.EnumerateKeys
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.EnumerateKeys
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.EnumerateKeys
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.EnumerateKeys
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Remove(`0)
  name: Remove(TKey)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Remove__0_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Remove(`0)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Remove(TKey)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Remove(TKey)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Remove(TKey)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Remove(`0,`1)
  name: Remove(TKey, TValue)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Remove__0__1_
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Remove(`0,`1)
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Remove(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Remove(TKey, TValue)
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Remove(TKey, TValue)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Remove(TKey, TValue)
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Remove_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Remove
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Remove
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Remove
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Remove
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Reversed
  name: Reversed()
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Reversed
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Reversed
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Reversed()
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Reversed()
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Reversed()
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Reversed()
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Reversed*
  name: Reversed
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_Reversed_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.Reversed
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.Reversed
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.Reversed
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.Reversed
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.Reversed
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name: TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_TryEnumerateValuesForKey__0_System_Collections_Generic_IEnumerator__1___
  commentId: M:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name.vb: TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.TryEnumerateValuesForKey(TKey, out System.Collections.Generic.IEnumerator<TValue>)
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.TryEnumerateValuesForKey(TKey, ByRef System.Collections.Generic.IEnumerator(Of TValue))
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
- uid: Wintellect.PowerCollections.OrderedMultiDictionary`2.View.TryEnumerateValuesForKey*
  name: TryEnumerateValuesForKey
  href: api/Wintellect.PowerCollections.OrderedMultiDictionary-2.View.html#Wintellect_PowerCollections_OrderedMultiDictionary_2_View_TryEnumerateValuesForKey_
  commentId: Overload:Wintellect.PowerCollections.OrderedMultiDictionary`2.View.TryEnumerateValuesForKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedMultiDictionary<TKey, TValue>.View.TryEnumerateValuesForKey
  fullName.vb: Wintellect.PowerCollections.OrderedMultiDictionary(Of TKey, TValue).View.TryEnumerateValuesForKey
  nameWithType: OrderedMultiDictionary<TKey, TValue>.View.TryEnumerateValuesForKey
  nameWithType.vb: OrderedMultiDictionary(Of TKey, TValue).View.TryEnumerateValuesForKey
- uid: Wintellect.PowerCollections.OrderedSet`1
  name: OrderedSet<T>
  href: api/Wintellect.PowerCollections.OrderedSet-1.html
  commentId: T:Wintellect.PowerCollections.OrderedSet`1
  name.vb: OrderedSet(Of T)
  fullName: Wintellect.PowerCollections.OrderedSet<T>
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T)
  nameWithType: OrderedSet<T>
  nameWithType.vb: OrderedSet(Of T)
- uid: Wintellect.PowerCollections.OrderedSet`1.#ctor
  name: OrderedSet()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1__ctor
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.#ctor
  fullName: Wintellect.PowerCollections.OrderedSet<T>.OrderedSet()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).OrderedSet()
  nameWithType: OrderedSet<T>.OrderedSet()
  nameWithType.vb: OrderedSet(Of T).OrderedSet()
- uid: Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Collections.Generic.IComparer{`0})
  name: OrderedSet(IComparer<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1__ctor_System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Collections.Generic.IComparer{`0})
  name.vb: OrderedSet(IComparer(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.OrderedSet(System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).OrderedSet(System.Collections.Generic.IComparer(Of T))
  nameWithType: OrderedSet<T>.OrderedSet(IComparer<T>)
  nameWithType.vb: OrderedSet(Of T).OrderedSet(IComparer(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name: OrderedSet(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1__ctor_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name.vb: OrderedSet(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.OrderedSet(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).OrderedSet(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: OrderedSet<T>.OrderedSet(IEnumerable<T>)
  nameWithType.vb: OrderedSet(Of T).OrderedSet(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})
  name: OrderedSet(IEnumerable<T>, IComparer<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1__ctor_System_Collections_Generic_IEnumerable__0__System_Collections_Generic_IComparer__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})
  name.vb: OrderedSet(IEnumerable(Of T), IComparer(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.OrderedSet(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IComparer<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).OrderedSet(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IComparer(Of T))
  nameWithType: OrderedSet<T>.OrderedSet(IEnumerable<T>, IComparer<T>)
  nameWithType.vb: OrderedSet(Of T).OrderedSet(IEnumerable(Of T), IComparer(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Comparison{`0})
  name: OrderedSet(IEnumerable<T>, Comparison<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1__ctor_System_Collections_Generic_IEnumerable__0__System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Comparison{`0})
  name.vb: OrderedSet(IEnumerable(Of T), Comparison(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.OrderedSet(System.Collections.Generic.IEnumerable<T>, System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).OrderedSet(System.Collections.Generic.IEnumerable(Of T), System.Comparison(Of T))
  nameWithType: OrderedSet<T>.OrderedSet(IEnumerable<T>, Comparison<T>)
  nameWithType.vb: OrderedSet(Of T).OrderedSet(IEnumerable(Of T), Comparison(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Comparison{`0})
  name: OrderedSet(Comparison<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1__ctor_System_Comparison__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.#ctor(System.Comparison{`0})
  name.vb: OrderedSet(Comparison(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.OrderedSet(System.Comparison<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).OrderedSet(System.Comparison(Of T))
  nameWithType: OrderedSet<T>.OrderedSet(Comparison<T>)
  nameWithType.vb: OrderedSet(Of T).OrderedSet(Comparison(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.#ctor*
  name: OrderedSet
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1__ctor_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.OrderedSet
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).OrderedSet
  nameWithType: OrderedSet<T>.OrderedSet
  nameWithType.vb: OrderedSet(Of T).OrderedSet
- uid: Wintellect.PowerCollections.OrderedSet`1.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Add__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Add(`0)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Add(T)
  nameWithType: OrderedSet<T>.Add(T)
  nameWithType.vb: OrderedSet(Of T).Add(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.Add*
  name: Add
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Add
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Add
  nameWithType: OrderedSet<T>.Add
  nameWithType.vb: OrderedSet(Of T).Add
- uid: Wintellect.PowerCollections.OrderedSet`1.AddMany(System.Collections.Generic.IEnumerable{`0})
  name: AddMany(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_AddMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.AddMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddMany(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.AddMany(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).AddMany(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: OrderedSet<T>.AddMany(IEnumerable<T>)
  nameWithType.vb: OrderedSet(Of T).AddMany(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.AddMany*
  name: AddMany
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_AddMany_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.AddMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.AddMany
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).AddMany
  nameWithType: OrderedSet<T>.AddMany
  nameWithType.vb: OrderedSet(Of T).AddMany
- uid: Wintellect.PowerCollections.OrderedSet`1.AsList
  name: AsList()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_AsList
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.AsList
  fullName: Wintellect.PowerCollections.OrderedSet<T>.AsList()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).AsList()
  nameWithType: OrderedSet<T>.AsList()
  nameWithType.vb: OrderedSet(Of T).AsList()
- uid: Wintellect.PowerCollections.OrderedSet`1.AsList*
  name: AsList
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_AsList_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.AsList
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.AsList
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).AsList
  nameWithType: OrderedSet<T>.AsList
  nameWithType.vb: OrderedSet(Of T).AsList
- uid: Wintellect.PowerCollections.OrderedSet`1.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Clear
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Clear
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Clear()
  nameWithType: OrderedSet<T>.Clear()
  nameWithType.vb: OrderedSet(Of T).Clear()
- uid: Wintellect.PowerCollections.OrderedSet`1.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Clear_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Clear
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Clear
  nameWithType: OrderedSet<T>.Clear
  nameWithType.vb: OrderedSet(Of T).Clear
- uid: Wintellect.PowerCollections.OrderedSet`1.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Clone
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Clone
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Clone()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Clone()
  nameWithType: OrderedSet<T>.Clone()
  nameWithType.vb: OrderedSet(Of T).Clone()
- uid: Wintellect.PowerCollections.OrderedSet`1.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Clone_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Clone
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Clone
  nameWithType: OrderedSet<T>.Clone
  nameWithType.vb: OrderedSet(Of T).Clone
- uid: Wintellect.PowerCollections.OrderedSet`1.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_CloneContents
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.CloneContents
  fullName: Wintellect.PowerCollections.OrderedSet<T>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).CloneContents()
  nameWithType: OrderedSet<T>.CloneContents()
  nameWithType.vb: OrderedSet(Of T).CloneContents()
- uid: Wintellect.PowerCollections.OrderedSet`1.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.CloneContents
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).CloneContents
  nameWithType: OrderedSet<T>.CloneContents
  nameWithType.vb: OrderedSet(Of T).CloneContents
- uid: Wintellect.PowerCollections.OrderedSet`1.Comparer
  name: Comparer
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Comparer
  commentId: P:Wintellect.PowerCollections.OrderedSet`1.Comparer
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Comparer
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Comparer
  nameWithType: OrderedSet<T>.Comparer
  nameWithType.vb: OrderedSet(Of T).Comparer
- uid: Wintellect.PowerCollections.OrderedSet`1.Comparer*
  name: Comparer
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Comparer_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Comparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Comparer
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Comparer
  nameWithType: OrderedSet<T>.Comparer
  nameWithType.vb: OrderedSet(Of T).Comparer
- uid: Wintellect.PowerCollections.OrderedSet`1.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Contains__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Contains(`0)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Contains(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Contains(T)
  nameWithType: OrderedSet<T>.Contains(T)
  nameWithType.vb: OrderedSet(Of T).Contains(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Contains_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Contains
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Contains
  nameWithType: OrderedSet<T>.Contains
  nameWithType.vb: OrderedSet(Of T).Contains
- uid: Wintellect.PowerCollections.OrderedSet`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Count
  commentId: P:Wintellect.PowerCollections.OrderedSet`1.Count
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Count
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Count
  nameWithType: OrderedSet<T>.Count
  nameWithType.vb: OrderedSet(Of T).Count
- uid: Wintellect.PowerCollections.OrderedSet`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Count_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Count
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Count
  nameWithType: OrderedSet<T>.Count
  nameWithType.vb: OrderedSet(Of T).Count
- uid: Wintellect.PowerCollections.OrderedSet`1.Difference(Wintellect.PowerCollections.OrderedSet{`0})
  name: Difference(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Difference_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Difference(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: Difference(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Difference(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Difference(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.Difference(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).Difference(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.Difference*
  name: Difference
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Difference_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Difference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Difference
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Difference
  nameWithType: OrderedSet<T>.Difference
  nameWithType.vb: OrderedSet(Of T).Difference
- uid: Wintellect.PowerCollections.OrderedSet`1.DifferenceWith(Wintellect.PowerCollections.OrderedSet{`0})
  name: DifferenceWith(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_DifferenceWith_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.DifferenceWith(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: DifferenceWith(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.DifferenceWith(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).DifferenceWith(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.DifferenceWith(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).DifferenceWith(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.DifferenceWith*
  name: DifferenceWith
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_DifferenceWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.DifferenceWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.DifferenceWith
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).DifferenceWith
  nameWithType: OrderedSet<T>.DifferenceWith
  nameWithType.vb: OrderedSet(Of T).DifferenceWith
- uid: Wintellect.PowerCollections.OrderedSet`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.GetEnumerator
  fullName: Wintellect.PowerCollections.OrderedSet<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).GetEnumerator()
  nameWithType: OrderedSet<T>.GetEnumerator()
  nameWithType.vb: OrderedSet(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.OrderedSet`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).GetEnumerator
  nameWithType: OrderedSet<T>.GetEnumerator
  nameWithType.vb: OrderedSet(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.OrderedSet`1.GetFirst
  name: GetFirst()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_GetFirst
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.GetFirst
  fullName: Wintellect.PowerCollections.OrderedSet<T>.GetFirst()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).GetFirst()
  nameWithType: OrderedSet<T>.GetFirst()
  nameWithType.vb: OrderedSet(Of T).GetFirst()
- uid: Wintellect.PowerCollections.OrderedSet`1.GetFirst*
  name: GetFirst
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_GetFirst_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.GetFirst
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.GetFirst
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).GetFirst
  nameWithType: OrderedSet<T>.GetFirst
  nameWithType.vb: OrderedSet(Of T).GetFirst
- uid: Wintellect.PowerCollections.OrderedSet`1.GetLast
  name: GetLast()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_GetLast
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.GetLast
  fullName: Wintellect.PowerCollections.OrderedSet<T>.GetLast()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).GetLast()
  nameWithType: OrderedSet<T>.GetLast()
  nameWithType.vb: OrderedSet(Of T).GetLast()
- uid: Wintellect.PowerCollections.OrderedSet`1.GetLast*
  name: GetLast
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_GetLast_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.GetLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.GetLast
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).GetLast
  nameWithType: OrderedSet<T>.GetLast
  nameWithType.vb: OrderedSet(Of T).GetLast
- uid: Wintellect.PowerCollections.OrderedSet`1.IndexOf(`0)
  name: IndexOf(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IndexOf__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.IndexOf(`0)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IndexOf(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IndexOf(T)
  nameWithType: OrderedSet<T>.IndexOf(T)
  nameWithType.vb: OrderedSet(Of T).IndexOf(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.IndexOf*
  name: IndexOf
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IndexOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.IndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IndexOf
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IndexOf
  nameWithType: OrderedSet<T>.IndexOf
  nameWithType.vb: OrderedSet(Of T).IndexOf
- uid: Wintellect.PowerCollections.OrderedSet`1.Intersection(Wintellect.PowerCollections.OrderedSet{`0})
  name: Intersection(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Intersection_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Intersection(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: Intersection(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Intersection(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Intersection(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.Intersection(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).Intersection(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.Intersection*
  name: Intersection
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Intersection_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Intersection
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Intersection
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Intersection
  nameWithType: OrderedSet<T>.Intersection
  nameWithType.vb: OrderedSet(Of T).Intersection
- uid: Wintellect.PowerCollections.OrderedSet`1.IntersectionWith(Wintellect.PowerCollections.OrderedSet{`0})
  name: IntersectionWith(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IntersectionWith_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.IntersectionWith(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: IntersectionWith(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IntersectionWith(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IntersectionWith(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.IntersectionWith(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).IntersectionWith(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.IntersectionWith*
  name: IntersectionWith
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IntersectionWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.IntersectionWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IntersectionWith
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IntersectionWith
  nameWithType: OrderedSet<T>.IntersectionWith
  nameWithType.vb: OrderedSet(Of T).IntersectionWith
- uid: Wintellect.PowerCollections.OrderedSet`1.IsDisjointFrom(Wintellect.PowerCollections.OrderedSet{`0})
  name: IsDisjointFrom(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsDisjointFrom_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.IsDisjointFrom(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: IsDisjointFrom(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsDisjointFrom(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsDisjointFrom(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.IsDisjointFrom(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).IsDisjointFrom(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.IsDisjointFrom*
  name: IsDisjointFrom
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsDisjointFrom_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.IsDisjointFrom
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsDisjointFrom
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsDisjointFrom
  nameWithType: OrderedSet<T>.IsDisjointFrom
  nameWithType.vb: OrderedSet(Of T).IsDisjointFrom
- uid: Wintellect.PowerCollections.OrderedSet`1.IsEqualTo(Wintellect.PowerCollections.OrderedSet{`0})
  name: IsEqualTo(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsEqualTo_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.IsEqualTo(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: IsEqualTo(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsEqualTo(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsEqualTo(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.IsEqualTo(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).IsEqualTo(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.IsEqualTo*
  name: IsEqualTo
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsEqualTo_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.IsEqualTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsEqualTo
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsEqualTo
  nameWithType: OrderedSet<T>.IsEqualTo
  nameWithType.vb: OrderedSet(Of T).IsEqualTo
- uid: Wintellect.PowerCollections.OrderedSet`1.IsProperSubsetOf(Wintellect.PowerCollections.OrderedSet{`0})
  name: IsProperSubsetOf(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsProperSubsetOf_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.IsProperSubsetOf(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: IsProperSubsetOf(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsProperSubsetOf(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsProperSubsetOf(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.IsProperSubsetOf(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).IsProperSubsetOf(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsProperSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.IsProperSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsProperSubsetOf
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsProperSubsetOf
  nameWithType: OrderedSet<T>.IsProperSubsetOf
  nameWithType.vb: OrderedSet(Of T).IsProperSubsetOf
- uid: Wintellect.PowerCollections.OrderedSet`1.IsProperSupersetOf(Wintellect.PowerCollections.OrderedSet{`0})
  name: IsProperSupersetOf(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsProperSupersetOf_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.IsProperSupersetOf(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: IsProperSupersetOf(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsProperSupersetOf(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsProperSupersetOf(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.IsProperSupersetOf(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).IsProperSupersetOf(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsProperSupersetOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.IsProperSupersetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsProperSupersetOf
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsProperSupersetOf
  nameWithType: OrderedSet<T>.IsProperSupersetOf
  nameWithType.vb: OrderedSet(Of T).IsProperSupersetOf
- uid: Wintellect.PowerCollections.OrderedSet`1.IsSubsetOf(Wintellect.PowerCollections.OrderedSet{`0})
  name: IsSubsetOf(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsSubsetOf_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.IsSubsetOf(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: IsSubsetOf(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsSubsetOf(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsSubsetOf(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.IsSubsetOf(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).IsSubsetOf(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.IsSubsetOf*
  name: IsSubsetOf
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.IsSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsSubsetOf
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsSubsetOf
  nameWithType: OrderedSet<T>.IsSubsetOf
  nameWithType.vb: OrderedSet(Of T).IsSubsetOf
- uid: Wintellect.PowerCollections.OrderedSet`1.IsSupersetOf(Wintellect.PowerCollections.OrderedSet{`0})
  name: IsSupersetOf(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsSupersetOf_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.IsSupersetOf(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: IsSupersetOf(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsSupersetOf(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsSupersetOf(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.IsSupersetOf(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).IsSupersetOf(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.IsSupersetOf*
  name: IsSupersetOf
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_IsSupersetOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.IsSupersetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.IsSupersetOf
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).IsSupersetOf
  nameWithType: OrderedSet<T>.IsSupersetOf
  nameWithType.vb: OrderedSet(Of T).IsSupersetOf
- uid: Wintellect.PowerCollections.OrderedSet`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.OrderedSet`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Item(System.Int32)
  nameWithType: OrderedSet<T>.Item[Int32]
  nameWithType.vb: OrderedSet(Of T).Item(Int32)
- uid: Wintellect.PowerCollections.OrderedSet`1.Item*
  name: Item
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Item_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Item
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Item
  nameWithType: OrderedSet<T>.Item
  nameWithType.vb: OrderedSet(Of T).Item
- uid: Wintellect.PowerCollections.OrderedSet`1.Range(`0,System.Boolean,`0,System.Boolean)
  name: Range(T, Boolean, T, Boolean)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Range__0_System_Boolean__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Range(`0,System.Boolean,`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Range(T, System.Boolean, T, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Range(T, System.Boolean, T, System.Boolean)
  nameWithType: OrderedSet<T>.Range(T, Boolean, T, Boolean)
  nameWithType.vb: OrderedSet(Of T).Range(T, Boolean, T, Boolean)
- uid: Wintellect.PowerCollections.OrderedSet`1.Range*
  name: Range
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Range_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Range
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Range
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Range
  nameWithType: OrderedSet<T>.Range
  nameWithType.vb: OrderedSet(Of T).Range
- uid: Wintellect.PowerCollections.OrderedSet`1.RangeFrom(`0,System.Boolean)
  name: RangeFrom(T, Boolean)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RangeFrom__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.RangeFrom(`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RangeFrom(T, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RangeFrom(T, System.Boolean)
  nameWithType: OrderedSet<T>.RangeFrom(T, Boolean)
  nameWithType.vb: OrderedSet(Of T).RangeFrom(T, Boolean)
- uid: Wintellect.PowerCollections.OrderedSet`1.RangeFrom*
  name: RangeFrom
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RangeFrom_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.RangeFrom
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RangeFrom
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RangeFrom
  nameWithType: OrderedSet<T>.RangeFrom
  nameWithType.vb: OrderedSet(Of T).RangeFrom
- uid: Wintellect.PowerCollections.OrderedSet`1.RangeTo(`0,System.Boolean)
  name: RangeTo(T, Boolean)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RangeTo__0_System_Boolean_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.RangeTo(`0,System.Boolean)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RangeTo(T, System.Boolean)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RangeTo(T, System.Boolean)
  nameWithType: OrderedSet<T>.RangeTo(T, Boolean)
  nameWithType.vb: OrderedSet(Of T).RangeTo(T, Boolean)
- uid: Wintellect.PowerCollections.OrderedSet`1.RangeTo*
  name: RangeTo
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RangeTo_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.RangeTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RangeTo
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RangeTo
  nameWithType: OrderedSet<T>.RangeTo
  nameWithType.vb: OrderedSet(Of T).RangeTo
- uid: Wintellect.PowerCollections.OrderedSet`1.Remove(`0)
  name: Remove(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Remove__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Remove(`0)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Remove(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Remove(T)
  nameWithType: OrderedSet<T>.Remove(T)
  nameWithType.vb: OrderedSet(Of T).Remove(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Remove_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Remove
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Remove
  nameWithType: OrderedSet<T>.Remove
  nameWithType.vb: OrderedSet(Of T).Remove
- uid: Wintellect.PowerCollections.OrderedSet`1.RemoveFirst
  name: RemoveFirst()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RemoveFirst
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.RemoveFirst
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RemoveFirst()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RemoveFirst()
  nameWithType: OrderedSet<T>.RemoveFirst()
  nameWithType.vb: OrderedSet(Of T).RemoveFirst()
- uid: Wintellect.PowerCollections.OrderedSet`1.RemoveFirst*
  name: RemoveFirst
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RemoveFirst_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.RemoveFirst
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RemoveFirst
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RemoveFirst
  nameWithType: OrderedSet<T>.RemoveFirst
  nameWithType.vb: OrderedSet(Of T).RemoveFirst
- uid: Wintellect.PowerCollections.OrderedSet`1.RemoveLast
  name: RemoveLast()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RemoveLast
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.RemoveLast
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RemoveLast()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RemoveLast()
  nameWithType: OrderedSet<T>.RemoveLast()
  nameWithType.vb: OrderedSet(Of T).RemoveLast()
- uid: Wintellect.PowerCollections.OrderedSet`1.RemoveLast*
  name: RemoveLast
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RemoveLast_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.RemoveLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RemoveLast
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RemoveLast
  nameWithType: OrderedSet<T>.RemoveLast
  nameWithType.vb: OrderedSet(Of T).RemoveLast
- uid: Wintellect.PowerCollections.OrderedSet`1.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name: RemoveMany(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RemoveMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: RemoveMany(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RemoveMany(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RemoveMany(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: OrderedSet<T>.RemoveMany(IEnumerable<T>)
  nameWithType.vb: OrderedSet(Of T).RemoveMany(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.RemoveMany*
  name: RemoveMany
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_RemoveMany_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.RemoveMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.RemoveMany
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).RemoveMany
  nameWithType: OrderedSet<T>.RemoveMany
  nameWithType.vb: OrderedSet(Of T).RemoveMany
- uid: Wintellect.PowerCollections.OrderedSet`1.Reversed
  name: Reversed()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Reversed
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Reversed
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Reversed()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Reversed()
  nameWithType: OrderedSet<T>.Reversed()
  nameWithType.vb: OrderedSet(Of T).Reversed()
- uid: Wintellect.PowerCollections.OrderedSet`1.Reversed*
  name: Reversed
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Reversed_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Reversed
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Reversed
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Reversed
  nameWithType: OrderedSet<T>.Reversed
  nameWithType.vb: OrderedSet(Of T).Reversed
- uid: Wintellect.PowerCollections.OrderedSet`1.SymmetricDifference(Wintellect.PowerCollections.OrderedSet{`0})
  name: SymmetricDifference(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_SymmetricDifference_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.SymmetricDifference(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: SymmetricDifference(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.SymmetricDifference(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).SymmetricDifference(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.SymmetricDifference(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).SymmetricDifference(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.SymmetricDifference*
  name: SymmetricDifference
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_SymmetricDifference_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.SymmetricDifference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.SymmetricDifference
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).SymmetricDifference
  nameWithType: OrderedSet<T>.SymmetricDifference
  nameWithType.vb: OrderedSet(Of T).SymmetricDifference
- uid: Wintellect.PowerCollections.OrderedSet`1.SymmetricDifferenceWith(Wintellect.PowerCollections.OrderedSet{`0})
  name: SymmetricDifferenceWith(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_SymmetricDifferenceWith_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.SymmetricDifferenceWith(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: SymmetricDifferenceWith(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.SymmetricDifferenceWith(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).SymmetricDifferenceWith(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.SymmetricDifferenceWith(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).SymmetricDifferenceWith(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.SymmetricDifferenceWith*
  name: SymmetricDifferenceWith
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_SymmetricDifferenceWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.SymmetricDifferenceWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.SymmetricDifferenceWith
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).SymmetricDifferenceWith
  nameWithType: OrderedSet<T>.SymmetricDifferenceWith
  nameWithType.vb: OrderedSet(Of T).SymmetricDifferenceWith
- uid: Wintellect.PowerCollections.OrderedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<T>.Add(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_System_Collections_Generic_ICollection_T__Add__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType: OrderedSet<T>.ICollection<T>.Add(T)
  nameWithType.vb: OrderedSet(Of T).System.Collections.Generic.ICollection<T>.Add(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.System#Collections#Generic#ICollection{T}#Add*
  name: ICollection<T>.Add
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_System_Collections_Generic_ICollection_T__Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.System#Collections#Generic#ICollection{T}#Add
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Add
  fullName: Wintellect.PowerCollections.OrderedSet<T>.System.Collections.Generic.ICollection<T>.Add
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).System.Collections.Generic.ICollection<T>.Add
  nameWithType: OrderedSet<T>.ICollection<T>.Add
  nameWithType.vb: OrderedSet(Of T).System.Collections.Generic.ICollection<T>.Add
- uid: Wintellect.PowerCollections.OrderedSet`1.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.OrderedSet<T>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).System.ICloneable.Clone()
  nameWithType: OrderedSet<T>.ICloneable.Clone()
  nameWithType.vb: OrderedSet(Of T).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.OrderedSet`1.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.OrderedSet<T>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).System.ICloneable.Clone
  nameWithType: OrderedSet<T>.ICloneable.Clone
  nameWithType.vb: OrderedSet(Of T).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.OrderedSet`1.TryGetItem(`0,`0@)
  name: TryGetItem(T, out T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_TryGetItem__0__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.TryGetItem(`0,`0@)
  name.vb: TryGetItem(T, ByRef T)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.TryGetItem(T, out T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).TryGetItem(T, ByRef T)
  nameWithType: OrderedSet<T>.TryGetItem(T, out T)
  nameWithType.vb: OrderedSet(Of T).TryGetItem(T, ByRef T)
- uid: Wintellect.PowerCollections.OrderedSet`1.TryGetItem*
  name: TryGetItem
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_TryGetItem_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.TryGetItem
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.TryGetItem
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).TryGetItem
  nameWithType: OrderedSet<T>.TryGetItem
  nameWithType.vb: OrderedSet(Of T).TryGetItem
- uid: Wintellect.PowerCollections.OrderedSet`1.Union(Wintellect.PowerCollections.OrderedSet{`0})
  name: Union(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Union_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.Union(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: Union(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Union(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Union(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.Union(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).Union(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.Union*
  name: Union
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_Union_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.Union
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.Union
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).Union
  nameWithType: OrderedSet<T>.Union
  nameWithType.vb: OrderedSet(Of T).Union
- uid: Wintellect.PowerCollections.OrderedSet`1.UnionWith(Wintellect.PowerCollections.OrderedSet{`0})
  name: UnionWith(OrderedSet<T>)
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_UnionWith_Wintellect_PowerCollections_OrderedSet__0__
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.UnionWith(Wintellect.PowerCollections.OrderedSet{`0})
  name.vb: UnionWith(OrderedSet(Of T))
  fullName: Wintellect.PowerCollections.OrderedSet<T>.UnionWith(Wintellect.PowerCollections.OrderedSet<T>)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).UnionWith(Wintellect.PowerCollections.OrderedSet(Of T))
  nameWithType: OrderedSet<T>.UnionWith(OrderedSet<T>)
  nameWithType.vb: OrderedSet(Of T).UnionWith(OrderedSet(Of T))
- uid: Wintellect.PowerCollections.OrderedSet`1.UnionWith*
  name: UnionWith
  href: api/Wintellect.PowerCollections.OrderedSet-1.html#Wintellect_PowerCollections_OrderedSet_1_UnionWith_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.UnionWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.UnionWith
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).UnionWith
  nameWithType: OrderedSet<T>.UnionWith
  nameWithType.vb: OrderedSet(Of T).UnionWith
- uid: Wintellect.PowerCollections.OrderedSet`1.View
  name: OrderedSet<T>.View
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html
  commentId: T:Wintellect.PowerCollections.OrderedSet`1.View
  name.vb: OrderedSet(Of T).View
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View
  nameWithType: OrderedSet<T>.View
  nameWithType.vb: OrderedSet(Of T).View
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Add__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.Add(`0)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Add(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Add(T)
  nameWithType: OrderedSet<T>.View.Add(T)
  nameWithType.vb: OrderedSet(Of T).View.Add(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Add*
  name: Add
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Add
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Add
  nameWithType: OrderedSet<T>.View.Add
  nameWithType.vb: OrderedSet(Of T).View.Add
- uid: Wintellect.PowerCollections.OrderedSet`1.View.AsList
  name: AsList()
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_AsList
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.AsList
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.AsList()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.AsList()
  nameWithType: OrderedSet<T>.View.AsList()
  nameWithType.vb: OrderedSet(Of T).View.AsList()
- uid: Wintellect.PowerCollections.OrderedSet`1.View.AsList*
  name: AsList
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_AsList_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.AsList
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.AsList
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.AsList
  nameWithType: OrderedSet<T>.View.AsList
  nameWithType.vb: OrderedSet(Of T).View.AsList
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Clear
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.Clear
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Clear()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Clear()
  nameWithType: OrderedSet<T>.View.Clear()
  nameWithType.vb: OrderedSet(Of T).View.Clear()
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Clear_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Clear
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Clear
  nameWithType: OrderedSet<T>.View.Clear
  nameWithType.vb: OrderedSet(Of T).View.Clear
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Contains__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.Contains(`0)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Contains(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Contains(T)
  nameWithType: OrderedSet<T>.View.Contains(T)
  nameWithType.vb: OrderedSet(Of T).View.Contains(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Contains_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Contains
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Contains
  nameWithType: OrderedSet<T>.View.Contains
  nameWithType.vb: OrderedSet(Of T).View.Contains
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Count
  name: Count
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Count
  commentId: P:Wintellect.PowerCollections.OrderedSet`1.View.Count
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Count
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Count
  nameWithType: OrderedSet<T>.View.Count
  nameWithType.vb: OrderedSet(Of T).View.Count
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Count*
  name: Count
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Count_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Count
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Count
  nameWithType: OrderedSet<T>.View.Count
  nameWithType.vb: OrderedSet(Of T).View.Count
- uid: Wintellect.PowerCollections.OrderedSet`1.View.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_GetEnumerator
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.GetEnumerator
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.GetEnumerator()
  nameWithType: OrderedSet<T>.View.GetEnumerator()
  nameWithType.vb: OrderedSet(Of T).View.GetEnumerator()
- uid: Wintellect.PowerCollections.OrderedSet`1.View.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.GetEnumerator
  nameWithType: OrderedSet<T>.View.GetEnumerator
  nameWithType.vb: OrderedSet(Of T).View.GetEnumerator
- uid: Wintellect.PowerCollections.OrderedSet`1.View.GetFirst
  name: GetFirst()
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_GetFirst
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.GetFirst
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.GetFirst()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.GetFirst()
  nameWithType: OrderedSet<T>.View.GetFirst()
  nameWithType.vb: OrderedSet(Of T).View.GetFirst()
- uid: Wintellect.PowerCollections.OrderedSet`1.View.GetFirst*
  name: GetFirst
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_GetFirst_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.GetFirst
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.GetFirst
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.GetFirst
  nameWithType: OrderedSet<T>.View.GetFirst
  nameWithType.vb: OrderedSet(Of T).View.GetFirst
- uid: Wintellect.PowerCollections.OrderedSet`1.View.GetLast
  name: GetLast()
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_GetLast
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.GetLast
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.GetLast()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.GetLast()
  nameWithType: OrderedSet<T>.View.GetLast()
  nameWithType.vb: OrderedSet(Of T).View.GetLast()
- uid: Wintellect.PowerCollections.OrderedSet`1.View.GetLast*
  name: GetLast
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_GetLast_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.GetLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.GetLast
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.GetLast
  nameWithType: OrderedSet<T>.View.GetLast
  nameWithType.vb: OrderedSet(Of T).View.GetLast
- uid: Wintellect.PowerCollections.OrderedSet`1.View.IndexOf(`0)
  name: IndexOf(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_IndexOf__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.IndexOf(`0)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.IndexOf(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.IndexOf(T)
  nameWithType: OrderedSet<T>.View.IndexOf(T)
  nameWithType.vb: OrderedSet(Of T).View.IndexOf(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.View.IndexOf*
  name: IndexOf
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_IndexOf_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.IndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.IndexOf
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.IndexOf
  nameWithType: OrderedSet<T>.View.IndexOf
  nameWithType.vb: OrderedSet(Of T).View.IndexOf
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Item(System.Int32)
  name: Item[Int32]
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.OrderedSet`1.View.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Item(System.Int32)
  nameWithType: OrderedSet<T>.View.Item[Int32]
  nameWithType.vb: OrderedSet(Of T).View.Item(Int32)
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Item*
  name: Item
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Item_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Item
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Item
  nameWithType: OrderedSet<T>.View.Item
  nameWithType.vb: OrderedSet(Of T).View.Item
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Remove(`0)
  name: Remove(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Remove__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.Remove(`0)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Remove(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Remove(T)
  nameWithType: OrderedSet<T>.View.Remove(T)
  nameWithType.vb: OrderedSet(Of T).View.Remove(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Remove_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Remove
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Remove
  nameWithType: OrderedSet<T>.View.Remove
  nameWithType.vb: OrderedSet(Of T).View.Remove
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Reversed
  name: Reversed()
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Reversed
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.Reversed
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Reversed()
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Reversed()
  nameWithType: OrderedSet<T>.View.Reversed()
  nameWithType.vb: OrderedSet(Of T).View.Reversed()
- uid: Wintellect.PowerCollections.OrderedSet`1.View.Reversed*
  name: Reversed
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_Reversed_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.Reversed
  isSpec: "True"
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.Reversed
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.Reversed
  nameWithType: OrderedSet<T>.View.Reversed
  nameWithType.vb: OrderedSet(Of T).View.Reversed
- uid: Wintellect.PowerCollections.OrderedSet`1.View.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<T>.Add(T)
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_System_Collections_Generic_ICollection_T__Add__0_
  commentId: M:Wintellect.PowerCollections.OrderedSet`1.View.System#Collections#Generic#ICollection{T}#Add(`0)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType: OrderedSet<T>.View.ICollection<T>.Add(T)
  nameWithType.vb: OrderedSet(Of T).View.System.Collections.Generic.ICollection<T>.Add(T)
- uid: Wintellect.PowerCollections.OrderedSet`1.View.System#Collections#Generic#ICollection{T}#Add*
  name: ICollection<T>.Add
  href: api/Wintellect.PowerCollections.OrderedSet-1.View.html#Wintellect_PowerCollections_OrderedSet_1_View_System_Collections_Generic_ICollection_T__Add_
  commentId: Overload:Wintellect.PowerCollections.OrderedSet`1.View.System#Collections#Generic#ICollection{T}#Add
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Add
  fullName: Wintellect.PowerCollections.OrderedSet<T>.View.System.Collections.Generic.ICollection<T>.Add
  fullName.vb: Wintellect.PowerCollections.OrderedSet(Of T).View.System.Collections.Generic.ICollection<T>.Add
  nameWithType: OrderedSet<T>.View.ICollection<T>.Add
  nameWithType.vb: OrderedSet(Of T).View.System.Collections.Generic.ICollection<T>.Add
- uid: Wintellect.PowerCollections.Pair`2
  name: Pair<TFirst, TSecond>
  href: api/Wintellect.PowerCollections.Pair-2.html
  commentId: T:Wintellect.PowerCollections.Pair`2
  name.vb: Pair(Of TFirst, TSecond)
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond)
  nameWithType: Pair<TFirst, TSecond>
  nameWithType.vb: Pair(Of TFirst, TSecond)
- uid: Wintellect.PowerCollections.Pair`2.#ctor(`0,`1)
  name: Pair(TFirst, TSecond)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2__ctor__0__1_
  commentId: M:Wintellect.PowerCollections.Pair`2.#ctor(`0,`1)
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Pair(TFirst, TSecond)
  nameWithType: Pair<TFirst, TSecond>.Pair(TFirst, TSecond)
  nameWithType.vb: Pair(Of TFirst, TSecond).Pair(TFirst, TSecond)
- uid: Wintellect.PowerCollections.Pair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1})
  name: Pair(KeyValuePair<TFirst, TSecond>)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2__ctor_System_Collections_Generic_KeyValuePair__0__1__
  commentId: M:Wintellect.PowerCollections.Pair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1})
  name.vb: Pair(KeyValuePair(Of TFirst, TSecond))
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Pair(System.Collections.Generic.KeyValuePair<TFirst, TSecond>)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Pair(System.Collections.Generic.KeyValuePair(Of TFirst, TSecond))
  nameWithType: Pair<TFirst, TSecond>.Pair(KeyValuePair<TFirst, TSecond>)
  nameWithType.vb: Pair(Of TFirst, TSecond).Pair(KeyValuePair(Of TFirst, TSecond))
- uid: Wintellect.PowerCollections.Pair`2.#ctor*
  name: Pair
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2__ctor_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Pair
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Pair
  nameWithType: Pair<TFirst, TSecond>.Pair
  nameWithType.vb: Pair(Of TFirst, TSecond).Pair
- uid: Wintellect.PowerCollections.Pair`2.CompareTo(Wintellect.PowerCollections.Pair{`0,`1})
  name: CompareTo(Pair<TFirst, TSecond>)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_CompareTo_Wintellect_PowerCollections_Pair__0__1__
  commentId: M:Wintellect.PowerCollections.Pair`2.CompareTo(Wintellect.PowerCollections.Pair{`0,`1})
  name.vb: CompareTo(Pair(Of TFirst, TSecond))
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.CompareTo(Wintellect.PowerCollections.Pair<TFirst, TSecond>)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).CompareTo(Wintellect.PowerCollections.Pair(Of TFirst, TSecond))
  nameWithType: Pair<TFirst, TSecond>.CompareTo(Pair<TFirst, TSecond>)
  nameWithType.vb: Pair(Of TFirst, TSecond).CompareTo(Pair(Of TFirst, TSecond))
- uid: Wintellect.PowerCollections.Pair`2.CompareTo*
  name: CompareTo
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_CompareTo_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.CompareTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.CompareTo
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).CompareTo
  nameWithType: Pair<TFirst, TSecond>.CompareTo
  nameWithType.vb: Pair(Of TFirst, TSecond).CompareTo
- uid: Wintellect.PowerCollections.Pair`2.Equals(System.Object)
  name: Equals(Object)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_Equals_System_Object_
  commentId: M:Wintellect.PowerCollections.Pair`2.Equals(System.Object)
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Equals(System.Object)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Equals(System.Object)
  nameWithType: Pair<TFirst, TSecond>.Equals(Object)
  nameWithType.vb: Pair(Of TFirst, TSecond).Equals(Object)
- uid: Wintellect.PowerCollections.Pair`2.Equals(Wintellect.PowerCollections.Pair{`0,`1})
  name: Equals(Pair<TFirst, TSecond>)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_Equals_Wintellect_PowerCollections_Pair__0__1__
  commentId: M:Wintellect.PowerCollections.Pair`2.Equals(Wintellect.PowerCollections.Pair{`0,`1})
  name.vb: Equals(Pair(Of TFirst, TSecond))
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Equals(Wintellect.PowerCollections.Pair<TFirst, TSecond>)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Equals(Wintellect.PowerCollections.Pair(Of TFirst, TSecond))
  nameWithType: Pair<TFirst, TSecond>.Equals(Pair<TFirst, TSecond>)
  nameWithType.vb: Pair(Of TFirst, TSecond).Equals(Pair(Of TFirst, TSecond))
- uid: Wintellect.PowerCollections.Pair`2.Equals*
  name: Equals
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_Equals_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.Equals
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Equals
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Equals
  nameWithType: Pair<TFirst, TSecond>.Equals
  nameWithType.vb: Pair(Of TFirst, TSecond).Equals
- uid: Wintellect.PowerCollections.Pair`2.First
  name: First
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_First
  commentId: F:Wintellect.PowerCollections.Pair`2.First
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.First
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).First
  nameWithType: Pair<TFirst, TSecond>.First
  nameWithType.vb: Pair(Of TFirst, TSecond).First
- uid: Wintellect.PowerCollections.Pair`2.GetHashCode
  name: GetHashCode()
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_GetHashCode
  commentId: M:Wintellect.PowerCollections.Pair`2.GetHashCode
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.GetHashCode()
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).GetHashCode()
  nameWithType: Pair<TFirst, TSecond>.GetHashCode()
  nameWithType.vb: Pair(Of TFirst, TSecond).GetHashCode()
- uid: Wintellect.PowerCollections.Pair`2.GetHashCode*
  name: GetHashCode
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_GetHashCode_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.GetHashCode
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.GetHashCode
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).GetHashCode
  nameWithType: Pair<TFirst, TSecond>.GetHashCode
  nameWithType.vb: Pair(Of TFirst, TSecond).GetHashCode
- uid: Wintellect.PowerCollections.Pair`2.op_Equality(Wintellect.PowerCollections.Pair{`0,`1},Wintellect.PowerCollections.Pair{`0,`1})
  name: Equality(Pair<TFirst, TSecond>, Pair<TFirst, TSecond>)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_op_Equality_Wintellect_PowerCollections_Pair__0__1__Wintellect_PowerCollections_Pair__0__1__
  commentId: M:Wintellect.PowerCollections.Pair`2.op_Equality(Wintellect.PowerCollections.Pair{`0,`1},Wintellect.PowerCollections.Pair{`0,`1})
  name.vb: Equality(Pair(Of TFirst, TSecond), Pair(Of TFirst, TSecond))
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Equality(Wintellect.PowerCollections.Pair<TFirst, TSecond>, Wintellect.PowerCollections.Pair<TFirst, TSecond>)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Equality(Wintellect.PowerCollections.Pair(Of TFirst, TSecond), Wintellect.PowerCollections.Pair(Of TFirst, TSecond))
  nameWithType: Pair<TFirst, TSecond>.Equality(Pair<TFirst, TSecond>, Pair<TFirst, TSecond>)
  nameWithType.vb: Pair(Of TFirst, TSecond).Equality(Pair(Of TFirst, TSecond), Pair(Of TFirst, TSecond))
- uid: Wintellect.PowerCollections.Pair`2.op_Equality*
  name: Equality
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_op_Equality_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.op_Equality
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Equality
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Equality
  nameWithType: Pair<TFirst, TSecond>.Equality
  nameWithType.vb: Pair(Of TFirst, TSecond).Equality
- uid: Wintellect.PowerCollections.Pair`2.op_Explicit(System.Collections.Generic.KeyValuePair{`0,`1})~Wintellect.PowerCollections.Pair{`0,`1}
  name: Explicit(KeyValuePair<TFirst, TSecond> to Pair<TFirst, TSecond>)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_op_Explicit_System_Collections_Generic_KeyValuePair__0__1___Wintellect_PowerCollections_Pair__0__1_
  commentId: M:Wintellect.PowerCollections.Pair`2.op_Explicit(System.Collections.Generic.KeyValuePair{`0,`1})~Wintellect.PowerCollections.Pair{`0,`1}
  name.vb: Narrowing(KeyValuePair(Of TFirst, TSecond) to Pair(Of TFirst, TSecond))
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Explicit(System.Collections.Generic.KeyValuePair<TFirst, TSecond> to Wintellect.PowerCollections.Pair<TFirst, TSecond>)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Narrowing(System.Collections.Generic.KeyValuePair(Of TFirst, TSecond) to Wintellect.PowerCollections.Pair(Of TFirst, TSecond))
  nameWithType: Pair<TFirst, TSecond>.Explicit(KeyValuePair<TFirst, TSecond> to Pair<TFirst, TSecond>)
  nameWithType.vb: Pair(Of TFirst, TSecond).Narrowing(KeyValuePair(Of TFirst, TSecond) to Pair(Of TFirst, TSecond))
- uid: Wintellect.PowerCollections.Pair`2.op_Explicit(Wintellect.PowerCollections.Pair{`0,`1})~System.Collections.Generic.KeyValuePair{`0,`1}
  name: Explicit(Pair<TFirst, TSecond> to KeyValuePair<TFirst, TSecond>)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_op_Explicit_Wintellect_PowerCollections_Pair__0__1___System_Collections_Generic_KeyValuePair__0__1_
  commentId: M:Wintellect.PowerCollections.Pair`2.op_Explicit(Wintellect.PowerCollections.Pair{`0,`1})~System.Collections.Generic.KeyValuePair{`0,`1}
  name.vb: Narrowing(Pair(Of TFirst, TSecond) to KeyValuePair(Of TFirst, TSecond))
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Explicit(Wintellect.PowerCollections.Pair<TFirst, TSecond> to System.Collections.Generic.KeyValuePair<TFirst, TSecond>)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Narrowing(Wintellect.PowerCollections.Pair(Of TFirst, TSecond) to System.Collections.Generic.KeyValuePair(Of TFirst, TSecond))
  nameWithType: Pair<TFirst, TSecond>.Explicit(Pair<TFirst, TSecond> to KeyValuePair<TFirst, TSecond>)
  nameWithType.vb: Pair(Of TFirst, TSecond).Narrowing(Pair(Of TFirst, TSecond) to KeyValuePair(Of TFirst, TSecond))
- uid: Wintellect.PowerCollections.Pair`2.op_Explicit*
  name: Explicit
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_op_Explicit_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Explicit
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Narrowing
  nameWithType: Pair<TFirst, TSecond>.Explicit
  nameWithType.vb: Pair(Of TFirst, TSecond).Narrowing
- uid: Wintellect.PowerCollections.Pair`2.op_Inequality(Wintellect.PowerCollections.Pair{`0,`1},Wintellect.PowerCollections.Pair{`0,`1})
  name: Inequality(Pair<TFirst, TSecond>, Pair<TFirst, TSecond>)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_op_Inequality_Wintellect_PowerCollections_Pair__0__1__Wintellect_PowerCollections_Pair__0__1__
  commentId: M:Wintellect.PowerCollections.Pair`2.op_Inequality(Wintellect.PowerCollections.Pair{`0,`1},Wintellect.PowerCollections.Pair{`0,`1})
  name.vb: Inequality(Pair(Of TFirst, TSecond), Pair(Of TFirst, TSecond))
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Inequality(Wintellect.PowerCollections.Pair<TFirst, TSecond>, Wintellect.PowerCollections.Pair<TFirst, TSecond>)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Inequality(Wintellect.PowerCollections.Pair(Of TFirst, TSecond), Wintellect.PowerCollections.Pair(Of TFirst, TSecond))
  nameWithType: Pair<TFirst, TSecond>.Inequality(Pair<TFirst, TSecond>, Pair<TFirst, TSecond>)
  nameWithType.vb: Pair(Of TFirst, TSecond).Inequality(Pair(Of TFirst, TSecond), Pair(Of TFirst, TSecond))
- uid: Wintellect.PowerCollections.Pair`2.op_Inequality*
  name: Inequality
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_op_Inequality_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.op_Inequality
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Inequality
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Inequality
  nameWithType: Pair<TFirst, TSecond>.Inequality
  nameWithType.vb: Pair(Of TFirst, TSecond).Inequality
- uid: Wintellect.PowerCollections.Pair`2.Second
  name: Second
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_Second
  commentId: F:Wintellect.PowerCollections.Pair`2.Second
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.Second
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).Second
  nameWithType: Pair<TFirst, TSecond>.Second
  nameWithType.vb: Pair(Of TFirst, TSecond).Second
- uid: Wintellect.PowerCollections.Pair`2.System#IComparable#CompareTo(System.Object)
  name: IComparable.CompareTo(Object)
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_System_IComparable_CompareTo_System_Object_
  commentId: M:Wintellect.PowerCollections.Pair`2.System#IComparable#CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.System.IComparable.CompareTo(System.Object)
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).System.IComparable.CompareTo(System.Object)
  nameWithType: Pair<TFirst, TSecond>.IComparable.CompareTo(Object)
  nameWithType.vb: Pair(Of TFirst, TSecond).System.IComparable.CompareTo(Object)
- uid: Wintellect.PowerCollections.Pair`2.System#IComparable#CompareTo*
  name: IComparable.CompareTo
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_System_IComparable_CompareTo_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.System#IComparable#CompareTo
  isSpec: "True"
  name.vb: System.IComparable.CompareTo
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.System.IComparable.CompareTo
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).System.IComparable.CompareTo
  nameWithType: Pair<TFirst, TSecond>.IComparable.CompareTo
  nameWithType.vb: Pair(Of TFirst, TSecond).System.IComparable.CompareTo
- uid: Wintellect.PowerCollections.Pair`2.ToKeyValuePair
  name: ToKeyValuePair()
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_ToKeyValuePair
  commentId: M:Wintellect.PowerCollections.Pair`2.ToKeyValuePair
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.ToKeyValuePair()
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).ToKeyValuePair()
  nameWithType: Pair<TFirst, TSecond>.ToKeyValuePair()
  nameWithType.vb: Pair(Of TFirst, TSecond).ToKeyValuePair()
- uid: Wintellect.PowerCollections.Pair`2.ToKeyValuePair*
  name: ToKeyValuePair
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_ToKeyValuePair_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.ToKeyValuePair
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.ToKeyValuePair
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).ToKeyValuePair
  nameWithType: Pair<TFirst, TSecond>.ToKeyValuePair
  nameWithType.vb: Pair(Of TFirst, TSecond).ToKeyValuePair
- uid: Wintellect.PowerCollections.Pair`2.ToString
  name: ToString()
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_ToString
  commentId: M:Wintellect.PowerCollections.Pair`2.ToString
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.ToString()
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).ToString()
  nameWithType: Pair<TFirst, TSecond>.ToString()
  nameWithType.vb: Pair(Of TFirst, TSecond).ToString()
- uid: Wintellect.PowerCollections.Pair`2.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.Pair-2.html#Wintellect_PowerCollections_Pair_2_ToString_
  commentId: Overload:Wintellect.PowerCollections.Pair`2.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Pair<TFirst, TSecond>.ToString
  fullName.vb: Wintellect.PowerCollections.Pair(Of TFirst, TSecond).ToString
  nameWithType: Pair<TFirst, TSecond>.ToString
  nameWithType.vb: Pair(Of TFirst, TSecond).ToString
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1
  name: ReadOnlyCollectionBase<T>
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html
  commentId: T:Wintellect.PowerCollections.ReadOnlyCollectionBase`1
  name.vb: ReadOnlyCollectionBase(Of T)
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T)
  nameWithType: ReadOnlyCollectionBase<T>
  nameWithType.vb: ReadOnlyCollectionBase(Of T)
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_Contains__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Contains(`0)
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.Contains(T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).Contains(T)
  nameWithType: ReadOnlyCollectionBase<T>.Contains(T)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).Contains(T)
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_Contains_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.Contains
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).Contains
  nameWithType: ReadOnlyCollectionBase<T>.Contains
  nameWithType.vb: ReadOnlyCollectionBase(Of T).Contains
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ConvertAll*
  name: ConvertAll
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_ConvertAll_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ConvertAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.ConvertAll
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).ConvertAll
  nameWithType: ReadOnlyCollectionBase<T>.ConvertAll
  nameWithType.vb: ReadOnlyCollectionBase(Of T).ConvertAll
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_ConvertAll__1_System_Converter__0___0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ConvertAll``1(System.Converter{`0,``0})
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  nameWithType: ReadOnlyCollectionBase<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_CopyTo__0___System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.CopyTo(T[], System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).CopyTo(T(), System.Int32)
  nameWithType: ReadOnlyCollectionBase<T>.CopyTo(T[], Int32)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).CopyTo(T(), Int32)
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.CopyTo*
  name: CopyTo
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_CopyTo_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.CopyTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.CopyTo
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).CopyTo
  nameWithType: ReadOnlyCollectionBase<T>.CopyTo
  nameWithType.vb: ReadOnlyCollectionBase(Of T).CopyTo
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_Count
  commentId: P:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Count
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.Count
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).Count
  nameWithType: ReadOnlyCollectionBase<T>.Count
  nameWithType.vb: ReadOnlyCollectionBase(Of T).Count
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_Count_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.Count
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).Count
  nameWithType: ReadOnlyCollectionBase<T>.Count
  nameWithType.vb: ReadOnlyCollectionBase(Of T).Count
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.CountWhere(System.Predicate{`0})
  name: CountWhere(Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_CountWhere_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.CountWhere(System.Predicate{`0})
  name.vb: CountWhere(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.CountWhere(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).CountWhere(System.Predicate(Of T))
  nameWithType: ReadOnlyCollectionBase<T>.CountWhere(Predicate<T>)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).CountWhere(Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.CountWhere*
  name: CountWhere
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_CountWhere_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.CountWhere
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.CountWhere
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).CountWhere
  nameWithType: ReadOnlyCollectionBase<T>.CountWhere
  nameWithType.vb: ReadOnlyCollectionBase(Of T).CountWhere
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_Exists_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Exists(System.Predicate{`0})
  name.vb: Exists(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.Exists(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).Exists(System.Predicate(Of T))
  nameWithType: ReadOnlyCollectionBase<T>.Exists(Predicate<T>)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).Exists(Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Exists*
  name: Exists
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_Exists_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.Exists
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.Exists
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).Exists
  nameWithType: ReadOnlyCollectionBase<T>.Exists
  nameWithType.vb: ReadOnlyCollectionBase(Of T).Exists
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_FindAll_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.FindAll(System.Predicate{`0})
  name.vb: FindAll(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.FindAll(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).FindAll(System.Predicate(Of T))
  nameWithType: ReadOnlyCollectionBase<T>.FindAll(Predicate<T>)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).FindAll(Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.FindAll*
  name: FindAll
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_FindAll_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.FindAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.FindAll
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).FindAll
  nameWithType: ReadOnlyCollectionBase<T>.FindAll
  nameWithType.vb: ReadOnlyCollectionBase(Of T).FindAll
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ForEach(System.Action{`0})
  name: ForEach(Action<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_ForEach_System_Action__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ForEach(System.Action{`0})
  name.vb: ForEach(Action(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.ForEach(System.Action<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).ForEach(System.Action(Of T))
  nameWithType: ReadOnlyCollectionBase<T>.ForEach(Action<T>)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).ForEach(Action(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ForEach*
  name: ForEach
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_ForEach_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ForEach
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.ForEach
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).ForEach
  nameWithType: ReadOnlyCollectionBase<T>.ForEach
  nameWithType.vb: ReadOnlyCollectionBase(Of T).ForEach
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.GetEnumerator
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).GetEnumerator()
  nameWithType: ReadOnlyCollectionBase<T>.GetEnumerator()
  nameWithType.vb: ReadOnlyCollectionBase(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).GetEnumerator
  nameWithType: ReadOnlyCollectionBase<T>.GetEnumerator
  nameWithType.vb: ReadOnlyCollectionBase(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<T>.Add(T)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_Generic_ICollection_T__Add__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType: ReadOnlyCollectionBase<T>.ICollection<T>.Add(T)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Add(T)
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Add*
  name: ICollection<T>.Add
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_Generic_ICollection_T__Add_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Add
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Add
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.Generic.ICollection<T>.Add
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Add
  nameWithType: ReadOnlyCollectionBase<T>.ICollection<T>.Add
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Add
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Clear
  name: ICollection<T>.Clear()
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_Generic_ICollection_T__Clear
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Clear
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.Generic.ICollection<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Clear()
  nameWithType: ReadOnlyCollectionBase<T>.ICollection<T>.Clear()
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Clear()
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Clear*
  name: ICollection<T>.Clear
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_Generic_ICollection_T__Clear_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Clear
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Clear
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.Generic.ICollection<T>.Clear
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Clear
  nameWithType: ReadOnlyCollectionBase<T>.ICollection<T>.Clear
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Clear
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<T>.IsReadOnly
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_Generic_ICollection_T__IsReadOnly
  commentId: P:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: ReadOnlyCollectionBase<T>.ICollection<T>.IsReadOnly
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly*
  name: ICollection<T>.IsReadOnly
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_Generic_ICollection_T__IsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: ReadOnlyCollectionBase<T>.ICollection<T>.IsReadOnly
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  name: ICollection<T>.Remove(T)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_Generic_ICollection_T__Remove__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(T)
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.Generic.ICollection<T>.Remove(T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType: ReadOnlyCollectionBase<T>.ICollection<T>.Remove(T)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Remove*
  name: ICollection<T>.Remove
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_Generic_ICollection_T__Remove_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#Generic#ICollection{T}#Remove
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Remove
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.Generic.ICollection<T>.Remove
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Remove
  nameWithType: ReadOnlyCollectionBase<T>.ICollection<T>.Remove
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.Generic.ICollection<T>.Remove
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_ICollection_CopyTo_System_Array_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType: ReadOnlyCollectionBase<T>.ICollection.CopyTo(Array, Int32)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#CopyTo*
  name: ICollection.CopyTo
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_ICollection_CopyTo_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#CopyTo
  isSpec: "True"
  name.vb: System.Collections.ICollection.CopyTo
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.ICollection.CopyTo
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.ICollection.CopyTo
  nameWithType: ReadOnlyCollectionBase<T>.ICollection.CopyTo
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.ICollection.CopyTo
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_ICollection_IsSynchronized
  commentId: P:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase<T>.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.ICollection.IsSynchronized
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#IsSynchronized*
  name: ICollection.IsSynchronized
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_ICollection_IsSynchronized_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#IsSynchronized
  isSpec: "True"
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBase<T>.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.ICollection.IsSynchronized
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_ICollection_SyncRoot
  commentId: P:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase<T>.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.ICollection.SyncRoot
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#SyncRoot*
  name: ICollection.SyncRoot
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_ICollection_SyncRoot_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#ICollection#SyncRoot
  isSpec: "True"
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBase<T>.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.ICollection.SyncRoot
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyCollectionBase<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator
  nameWithType: ReadOnlyCollectionBase<T>.IEnumerable.GetEnumerator
  nameWithType.vb: ReadOnlyCollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ToArray
  name: ToArray()
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_ToArray
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ToArray
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.ToArray()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).ToArray()
  nameWithType: ReadOnlyCollectionBase<T>.ToArray()
  nameWithType.vb: ReadOnlyCollectionBase(Of T).ToArray()
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ToArray*
  name: ToArray
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_ToArray_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ToArray
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.ToArray
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).ToArray
  nameWithType: ReadOnlyCollectionBase<T>.ToArray
  nameWithType.vb: ReadOnlyCollectionBase(Of T).ToArray
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ToString
  name: ToString()
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_ToString
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ToString
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.ToString()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).ToString()
  nameWithType: ReadOnlyCollectionBase<T>.ToString()
  nameWithType.vb: ReadOnlyCollectionBase(Of T).ToString()
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_ToString_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.ToString
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).ToString
  nameWithType: ReadOnlyCollectionBase<T>.ToString
  nameWithType.vb: ReadOnlyCollectionBase(Of T).ToString
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_TrueForAll_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.TrueForAll(System.Predicate{`0})
  name.vb: TrueForAll(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.TrueForAll(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).TrueForAll(System.Predicate(Of T))
  nameWithType: ReadOnlyCollectionBase<T>.TrueForAll(Predicate<T>)
  nameWithType.vb: ReadOnlyCollectionBase(Of T).TrueForAll(Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyCollectionBase`1.TrueForAll*
  name: TrueForAll
  href: api/Wintellect.PowerCollections.ReadOnlyCollectionBase-1.html#Wintellect_PowerCollections_ReadOnlyCollectionBase_1_TrueForAll_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyCollectionBase`1.TrueForAll
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyCollectionBase<T>.TrueForAll
  fullName.vb: Wintellect.PowerCollections.ReadOnlyCollectionBase(Of T).TrueForAll
  nameWithType: ReadOnlyCollectionBase<T>.TrueForAll
  nameWithType.vb: ReadOnlyCollectionBase(Of T).TrueForAll
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2
  name: ReadOnlyDictionaryBase<TKey, TValue>
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html
  commentId: T:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2
  name.vb: ReadOnlyDictionaryBase(Of TKey, TValue)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  name: Contains(KeyValuePair<TKey, TValue>)
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Contains_System_Collections_Generic_KeyValuePair__0__1__
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Contains(KeyValuePair(Of TKey, TValue))
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Contains_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Contains
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Contains
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Contains
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Contains
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).ContainsKey(TKey)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.ContainsKey
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).ContainsKey
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.ContainsKey
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).ContainsKey
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Item(`0)
  name: Item[TKey]
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Item__0_
  commentId: P:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Item(`0)
  name.vb: Item(TKey)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Item[TKey]
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Item(TKey)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Item[TKey]
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Item(TKey)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Item*
  name: Item
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Item_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Item
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Item
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Item
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Item
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Keys
  name: Keys
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Keys
  commentId: P:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Keys
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Keys
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Keys
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Keys
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Keys*
  name: Keys
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Keys_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Keys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Keys
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Keys
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Keys
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Remove(`0)
  name: Remove(TKey)
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Remove__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Remove(`0)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Remove(TKey)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Remove(TKey)
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Remove(TKey)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Remove_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Remove
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Remove
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Remove
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Remove
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  name: IDictionary<TKey, TValue>.Add(TKey, TValue)
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_TValue__Add__0__1_
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add*
  name: IDictionary<TKey, TValue>.Add
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_TValue__Add_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary<TKey, TValue>.Add
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  name: IDictionary.Add(Object, Object)
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Add_System_Object_System_Object_
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Add(Object, Object)
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Add*
  name: IDictionary.Add
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Add_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Add
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Add
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Add
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Add
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Add
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Add
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Clear
  name: IDictionary.Clear()
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Clear
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Clear
  name.vb: System.Collections.IDictionary.Clear()
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Clear()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Clear()
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Clear()
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Clear()
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Clear*
  name: IDictionary.Clear
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Clear_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Clear
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Clear
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Clear
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Clear
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Clear
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Clear
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Contains(System.Object)
  name: IDictionary.Contains(Object)
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Contains_System_Object_
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Contains(Object)
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Contains*
  name: IDictionary.Contains
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Contains_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Contains
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Contains
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Contains
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Contains
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Contains
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Contains
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#GetEnumerator
  name: IDictionary.GetEnumerator()
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_GetEnumerator
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#GetEnumerator
  name.vb: System.Collections.IDictionary.GetEnumerator()
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.GetEnumerator()
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#GetEnumerator*
  name: IDictionary.GetEnumerator
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IDictionary.GetEnumerator
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.GetEnumerator
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#IsFixedSize
  name: IDictionary.IsFixedSize
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_IsFixedSize
  commentId: P:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.IsFixedSize
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#IsFixedSize*
  name: IDictionary.IsFixedSize
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_IsFixedSize_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#IsFixedSize
  isSpec: "True"
  name.vb: System.Collections.IDictionary.IsFixedSize
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.IsFixedSize
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#IsReadOnly
  name: IDictionary.IsReadOnly
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_IsReadOnly
  commentId: P:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.IsReadOnly
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#IsReadOnly*
  name: IDictionary.IsReadOnly
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_IsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#IsReadOnly
  isSpec: "True"
  name.vb: System.Collections.IDictionary.IsReadOnly
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.IsReadOnly
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Item(System.Object)
  name: IDictionary.Item[Object]
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Item_System_Object_
  commentId: P:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Item[Object]
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Item(Object)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Item*
  name: IDictionary.Item
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Item_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Item
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Item
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Item
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Item
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Item
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Item
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Keys
  name: IDictionary.Keys
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Keys
  commentId: P:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Keys
  name.vb: System.Collections.IDictionary.Keys
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Keys
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Keys
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Keys
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Keys
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Keys*
  name: IDictionary.Keys
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Keys_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Keys
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Keys
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Keys
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Keys
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Keys
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Keys
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Remove(System.Object)
  name: IDictionary.Remove(Object)
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Remove_System_Object_
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Remove(Object)
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Remove*
  name: IDictionary.Remove
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Remove_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Remove
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Remove
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Remove
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Remove
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Remove
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Remove
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Values
  name: IDictionary.Values
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Values
  commentId: P:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Values
  name.vb: System.Collections.IDictionary.Values
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Values
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Values
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Values
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Values
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Values*
  name: IDictionary.Values
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IDictionary_Values_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IDictionary#Values
  isSpec: "True"
  name.vb: System.Collections.IDictionary.Values
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IDictionary.Values
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Values
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IDictionary.Values
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IDictionary.Values
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IEnumerable.GetEnumerator()
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.IEnumerable.GetEnumerator
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.ToString
  name: ToString()
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_ToString
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.ToString
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.ToString()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).ToString()
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.ToString()
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).ToString()
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_ToString_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.ToString
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).ToString
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.ToString
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).ToString
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, out TValue)
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_TryGetValue__0__1__
  commentId: M:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.TryGetValue(`0,`1@)
  name.vb: TryGetValue(TKey, ByRef TValue)
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.TryGetValue*
  name: TryGetValue
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_TryGetValue_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.TryGetValue
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.TryGetValue
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).TryGetValue
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.TryGetValue
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).TryGetValue
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Values
  name: Values
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Values
  commentId: P:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Values
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Values
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Values
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Values
- uid: Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Values*
  name: Values
  href: api/Wintellect.PowerCollections.ReadOnlyDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyDictionaryBase_2_Values_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyDictionaryBase`2.Values
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyDictionaryBase<TKey, TValue>.Values
  fullName.vb: Wintellect.PowerCollections.ReadOnlyDictionaryBase(Of TKey, TValue).Values
  nameWithType: ReadOnlyDictionaryBase<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyDictionaryBase(Of TKey, TValue).Values
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1
  name: ReadOnlyListBase<T>
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html
  commentId: T:Wintellect.PowerCollections.ReadOnlyListBase`1
  name.vb: ReadOnlyListBase(Of T)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T)
  nameWithType: ReadOnlyListBase<T>
  nameWithType.vb: ReadOnlyListBase(Of T)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Contains__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.Contains(`0)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Contains(T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Contains(T)
  nameWithType: ReadOnlyListBase<T>.Contains(T)
  nameWithType.vb: ReadOnlyListBase(Of T).Contains(T)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Contains_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Contains
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Contains
  nameWithType: ReadOnlyListBase<T>.Contains
  nameWithType.vb: ReadOnlyListBase(Of T).Contains
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.CopyTo(`0[])
  name: CopyTo(T[])
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_CopyTo__0___
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.CopyTo(`0[])
  name.vb: CopyTo(T())
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.CopyTo(T[])
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).CopyTo(T())
  nameWithType: ReadOnlyListBase<T>.CopyTo(T[])
  nameWithType.vb: ReadOnlyListBase(Of T).CopyTo(T())
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, T[], Int32, Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_CopyTo_System_Int32__0___System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  nameWithType: ReadOnlyListBase<T>.CopyTo(Int32, T[], Int32, Int32)
  nameWithType.vb: ReadOnlyListBase(Of T).CopyTo(Int32, T(), Int32, Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.CopyTo*
  name: CopyTo
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_CopyTo_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.CopyTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.CopyTo
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).CopyTo
  nameWithType: ReadOnlyListBase<T>.CopyTo
  nameWithType.vb: ReadOnlyListBase(Of T).CopyTo
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Count
  commentId: P:Wintellect.PowerCollections.ReadOnlyListBase`1.Count
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Count
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Count
  nameWithType: ReadOnlyListBase<T>.Count
  nameWithType.vb: ReadOnlyListBase(Of T).Count
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Count_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Count
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Count
  nameWithType: ReadOnlyListBase<T>.Count
  nameWithType.vb: ReadOnlyListBase(Of T).Count
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Find(System.Predicate{`0})
  name: Find(Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Find_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.Find(System.Predicate{`0})
  name.vb: Find(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Find(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Find(System.Predicate(Of T))
  nameWithType: ReadOnlyListBase<T>.Find(Predicate<T>)
  nameWithType.vb: ReadOnlyListBase(Of T).Find(Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Find*
  name: Find
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Find_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.Find
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Find
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Find
  nameWithType: ReadOnlyListBase<T>.Find
  nameWithType.vb: ReadOnlyListBase(Of T).Find
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindIndex_System_Int32_System_Int32_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  nameWithType: ReadOnlyListBase<T>.FindIndex(Int32, Int32, Predicate<T>)
  nameWithType.vb: ReadOnlyListBase(Of T).FindIndex(Int32, Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindIndex_System_Int32_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.FindIndex(System.Int32,System.Predicate{`0})
  name.vb: FindIndex(Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindIndex(System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  nameWithType: ReadOnlyListBase<T>.FindIndex(Int32, Predicate<T>)
  nameWithType.vb: ReadOnlyListBase(Of T).FindIndex(Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindIndex_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.FindIndex(System.Predicate{`0})
  name.vb: FindIndex(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindIndex(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindIndex(System.Predicate(Of T))
  nameWithType: ReadOnlyListBase<T>.FindIndex(Predicate<T>)
  nameWithType.vb: ReadOnlyListBase(Of T).FindIndex(Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindIndex*
  name: FindIndex
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindIndex_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.FindIndex
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindIndex
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindIndex
  nameWithType: ReadOnlyListBase<T>.FindIndex
  nameWithType.vb: ReadOnlyListBase(Of T).FindIndex
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindLast_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.FindLast(System.Predicate{`0})
  name.vb: FindLast(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindLast(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindLast(System.Predicate(Of T))
  nameWithType: ReadOnlyListBase<T>.FindLast(Predicate<T>)
  nameWithType.vb: ReadOnlyListBase(Of T).FindLast(Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindLast*
  name: FindLast
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindLast_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.FindLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindLast
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindLast
  nameWithType: ReadOnlyListBase<T>.FindLast
  nameWithType.vb: ReadOnlyListBase(Of T).FindLast
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindLastIndex_System_Int32_System_Int32_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  nameWithType: ReadOnlyListBase<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType.vb: ReadOnlyListBase(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindLastIndex_System_Int32_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  nameWithType: ReadOnlyListBase<T>.FindLastIndex(Int32, Predicate<T>)
  nameWithType.vb: ReadOnlyListBase(Of T).FindLastIndex(Int32, Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<T>)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindLastIndex_System_Predicate__0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.FindLastIndex(System.Predicate{`0})
  name.vb: FindLastIndex(Predicate(Of T))
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindLastIndex(System.Predicate<T>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindLastIndex(System.Predicate(Of T))
  nameWithType: ReadOnlyListBase<T>.FindLastIndex(Predicate<T>)
  nameWithType.vb: ReadOnlyListBase(Of T).FindLastIndex(Predicate(Of T))
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.FindLastIndex*
  name: FindLastIndex
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_FindLastIndex_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.FindLastIndex
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.FindLastIndex
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).FindLastIndex
  nameWithType: ReadOnlyListBase<T>.FindLastIndex
  nameWithType.vb: ReadOnlyListBase(Of T).FindLastIndex
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.GetEnumerator
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).GetEnumerator()
  nameWithType: ReadOnlyListBase<T>.GetEnumerator()
  nameWithType.vb: ReadOnlyListBase(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).GetEnumerator
  nameWithType: ReadOnlyListBase<T>.GetEnumerator
  nameWithType.vb: ReadOnlyListBase(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.IndexOf(`0)
  name: IndexOf(T)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_IndexOf__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.IndexOf(`0)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.IndexOf(T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).IndexOf(T)
  nameWithType: ReadOnlyListBase<T>.IndexOf(T)
  nameWithType.vb: ReadOnlyListBase(Of T).IndexOf(T)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.IndexOf(`0,System.Int32)
  name: IndexOf(T, Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_IndexOf__0_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.IndexOf(`0,System.Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.IndexOf(T, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).IndexOf(T, System.Int32)
  nameWithType: ReadOnlyListBase<T>.IndexOf(T, Int32)
  nameWithType.vb: ReadOnlyListBase(Of T).IndexOf(T, Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(T, Int32, Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_IndexOf__0_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.IndexOf(`0,System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.IndexOf(T, System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).IndexOf(T, System.Int32, System.Int32)
  nameWithType: ReadOnlyListBase<T>.IndexOf(T, Int32, Int32)
  nameWithType.vb: ReadOnlyListBase(Of T).IndexOf(T, Int32, Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.IndexOf*
  name: IndexOf
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_IndexOf_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.IndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.IndexOf
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).IndexOf
  nameWithType: ReadOnlyListBase<T>.IndexOf
  nameWithType.vb: ReadOnlyListBase(Of T).IndexOf
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.ReadOnlyListBase`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Item(System.Int32)
  nameWithType: ReadOnlyListBase<T>.Item[Int32]
  nameWithType.vb: ReadOnlyListBase(Of T).Item(Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Item*
  name: Item
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Item_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Item
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Item
  nameWithType: ReadOnlyListBase<T>.Item
  nameWithType.vb: ReadOnlyListBase(Of T).Item
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.LastIndexOf(`0)
  name: LastIndexOf(T)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_LastIndexOf__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.LastIndexOf(`0)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.LastIndexOf(T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).LastIndexOf(T)
  nameWithType: ReadOnlyListBase<T>.LastIndexOf(T)
  nameWithType.vb: ReadOnlyListBase(Of T).LastIndexOf(T)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(T, Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_LastIndexOf__0_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.LastIndexOf(`0,System.Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.LastIndexOf(T, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).LastIndexOf(T, System.Int32)
  nameWithType: ReadOnlyListBase<T>.LastIndexOf(T, Int32)
  nameWithType.vb: ReadOnlyListBase(Of T).LastIndexOf(T, Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(T, Int32, Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_LastIndexOf__0_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.LastIndexOf(`0,System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.LastIndexOf(T, System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).LastIndexOf(T, System.Int32, System.Int32)
  nameWithType: ReadOnlyListBase<T>.LastIndexOf(T, Int32, Int32)
  nameWithType.vb: ReadOnlyListBase(Of T).LastIndexOf(T, Int32, Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.LastIndexOf*
  name: LastIndexOf
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_LastIndexOf_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.LastIndexOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.LastIndexOf
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).LastIndexOf
  nameWithType: ReadOnlyListBase<T>.LastIndexOf
  nameWithType.vb: ReadOnlyListBase(Of T).LastIndexOf
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Range(System.Int32,System.Int32)
  name: Range(Int32, Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Range_System_Int32_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.Range(System.Int32,System.Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Range(System.Int32, System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Range(System.Int32, System.Int32)
  nameWithType: ReadOnlyListBase<T>.Range(Int32, Int32)
  nameWithType.vb: ReadOnlyListBase(Of T).Range(Int32, Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.Range*
  name: Range
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_Range_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.Range
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.Range
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).Range
  nameWithType: ReadOnlyListBase<T>.Range
  nameWithType.vb: ReadOnlyListBase(Of T).Range
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  name: IList<T>.Insert(Int32, T)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_Generic_IList_T__Insert_System_Int32__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  name.vb: System.Collections.Generic.IList<T>.Insert(Int32, T)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType: ReadOnlyListBase<T>.IList<T>.Insert(Int32, T)
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.Generic.IList<T>.Insert(Int32, T)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#Generic#IList{T}#Insert*
  name: IList<T>.Insert
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_Generic_IList_T__Insert_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#Generic#IList{T}#Insert
  isSpec: "True"
  name.vb: System.Collections.Generic.IList<T>.Insert
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.Generic.IList<T>.Insert
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.Generic.IList<T>.Insert
  nameWithType: ReadOnlyListBase<T>.IList<T>.Insert
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.Generic.IList<T>.Insert
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  name: IList<T>.RemoveAt(Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_Generic_IList_T__RemoveAt_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  name.vb: System.Collections.Generic.IList<T>.RemoveAt(Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType: ReadOnlyListBase<T>.IList<T>.RemoveAt(Int32)
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.Generic.IList<T>.RemoveAt(Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#Generic#IList{T}#RemoveAt*
  name: IList<T>.RemoveAt
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_Generic_IList_T__RemoveAt_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#Generic#IList{T}#RemoveAt
  isSpec: "True"
  name.vb: System.Collections.Generic.IList<T>.RemoveAt
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.Generic.IList<T>.RemoveAt
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.Generic.IList<T>.RemoveAt
  nameWithType: ReadOnlyListBase<T>.IList<T>.RemoveAt
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.Generic.IList<T>.RemoveAt
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Add_System_Object_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Add(System.Object)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Add(System.Object)
  nameWithType: ReadOnlyListBase<T>.IList.Add(Object)
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Add(Object)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Add*
  name: IList.Add
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Add_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Add
  isSpec: "True"
  name.vb: System.Collections.IList.Add
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Add
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Add
  nameWithType: ReadOnlyListBase<T>.IList.Add
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Add
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Clear
  name: IList.Clear()
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Clear
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Clear
  name.vb: System.Collections.IList.Clear()
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Clear()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Clear()
  nameWithType: ReadOnlyListBase<T>.IList.Clear()
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Clear()
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Clear*
  name: IList.Clear
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Clear_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Clear
  isSpec: "True"
  name.vb: System.Collections.IList.Clear
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Clear
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Clear
  nameWithType: ReadOnlyListBase<T>.IList.Clear
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Clear
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Contains_System_Object_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Contains(System.Object)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Contains(System.Object)
  nameWithType: ReadOnlyListBase<T>.IList.Contains(Object)
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Contains(Object)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Contains*
  name: IList.Contains
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Contains_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Contains
  isSpec: "True"
  name.vb: System.Collections.IList.Contains
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Contains
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Contains
  nameWithType: ReadOnlyListBase<T>.IList.Contains
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Contains
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_IndexOf_System_Object_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.IndexOf(System.Object)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.IndexOf(System.Object)
  nameWithType: ReadOnlyListBase<T>.IList.IndexOf(Object)
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.IndexOf(Object)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IndexOf*
  name: IList.IndexOf
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_IndexOf_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IndexOf
  isSpec: "True"
  name.vb: System.Collections.IList.IndexOf
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.IndexOf
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.IndexOf
  nameWithType: ReadOnlyListBase<T>.IList.IndexOf
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.IndexOf
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Insert_System_Int32_System_Object_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType: ReadOnlyListBase<T>.IList.Insert(Int32, Object)
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Insert(Int32, Object)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Insert*
  name: IList.Insert
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Insert_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Insert
  isSpec: "True"
  name.vb: System.Collections.IList.Insert
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Insert
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Insert
  nameWithType: ReadOnlyListBase<T>.IList.Insert
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Insert
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_IsFixedSize
  commentId: P:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.IsFixedSize
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.IsFixedSize
  nameWithType: ReadOnlyListBase<T>.IList.IsFixedSize
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.IsFixedSize
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IsFixedSize*
  name: IList.IsFixedSize
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_IsFixedSize_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IsFixedSize
  isSpec: "True"
  name.vb: System.Collections.IList.IsFixedSize
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.IsFixedSize
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.IsFixedSize
  nameWithType: ReadOnlyListBase<T>.IList.IsFixedSize
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.IsFixedSize
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_IsReadOnly
  commentId: P:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.IsReadOnly
  nameWithType: ReadOnlyListBase<T>.IList.IsReadOnly
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.IsReadOnly
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IsReadOnly*
  name: IList.IsReadOnly
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_IsReadOnly_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#IsReadOnly
  isSpec: "True"
  name.vb: System.Collections.IList.IsReadOnly
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.IsReadOnly
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.IsReadOnly
  nameWithType: ReadOnlyListBase<T>.IList.IsReadOnly
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.IsReadOnly
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Item_System_Int32_
  commentId: P:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Item[System.Int32]
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Item(System.Int32)
  nameWithType: ReadOnlyListBase<T>.IList.Item[Int32]
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Item(Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Item*
  name: IList.Item
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Item_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Item
  isSpec: "True"
  name.vb: System.Collections.IList.Item
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Item
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Item
  nameWithType: ReadOnlyListBase<T>.IList.Item
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Item
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Remove_System_Object_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Remove(System.Object)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Remove(System.Object)
  nameWithType: ReadOnlyListBase<T>.IList.Remove(Object)
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Remove(Object)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Remove*
  name: IList.Remove
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_Remove_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#Remove
  isSpec: "True"
  name.vb: System.Collections.IList.Remove
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.Remove
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.Remove
  nameWithType: ReadOnlyListBase<T>.IList.Remove
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.Remove
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#RemoveAt(System.Int32)
  name: IList.RemoveAt(Int32)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_RemoveAt_System_Int32_
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.RemoveAt(System.Int32)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.RemoveAt(System.Int32)
  nameWithType: ReadOnlyListBase<T>.IList.RemoveAt(Int32)
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.RemoveAt(Int32)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#RemoveAt*
  name: IList.RemoveAt
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_System_Collections_IList_RemoveAt_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.System#Collections#IList#RemoveAt
  isSpec: "True"
  name.vb: System.Collections.IList.RemoveAt
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.System.Collections.IList.RemoveAt
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).System.Collections.IList.RemoveAt
  nameWithType: ReadOnlyListBase<T>.IList.RemoveAt
  nameWithType.vb: ReadOnlyListBase(Of T).System.Collections.IList.RemoveAt
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.TryFind(System.Predicate{`0},`0@)
  name: TryFind(Predicate<T>, out T)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_TryFind_System_Predicate__0___0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.TryFind(System.Predicate{`0},`0@)
  name.vb: TryFind(Predicate(Of T), ByRef T)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.TryFind(System.Predicate<T>, out T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).TryFind(System.Predicate(Of T), ByRef T)
  nameWithType: ReadOnlyListBase<T>.TryFind(Predicate<T>, out T)
  nameWithType.vb: ReadOnlyListBase(Of T).TryFind(Predicate(Of T), ByRef T)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.TryFind*
  name: TryFind
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_TryFind_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.TryFind
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.TryFind
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).TryFind
  nameWithType: ReadOnlyListBase<T>.TryFind
  nameWithType.vb: ReadOnlyListBase(Of T).TryFind
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.TryFindLast(System.Predicate{`0},`0@)
  name: TryFindLast(Predicate<T>, out T)
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_TryFindLast_System_Predicate__0___0__
  commentId: M:Wintellect.PowerCollections.ReadOnlyListBase`1.TryFindLast(System.Predicate{`0},`0@)
  name.vb: TryFindLast(Predicate(Of T), ByRef T)
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.TryFindLast(System.Predicate<T>, out T)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).TryFindLast(System.Predicate(Of T), ByRef T)
  nameWithType: ReadOnlyListBase<T>.TryFindLast(Predicate<T>, out T)
  nameWithType.vb: ReadOnlyListBase(Of T).TryFindLast(Predicate(Of T), ByRef T)
- uid: Wintellect.PowerCollections.ReadOnlyListBase`1.TryFindLast*
  name: TryFindLast
  href: api/Wintellect.PowerCollections.ReadOnlyListBase-1.html#Wintellect_PowerCollections_ReadOnlyListBase_1_TryFindLast_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyListBase`1.TryFindLast
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyListBase<T>.TryFindLast
  fullName.vb: Wintellect.PowerCollections.ReadOnlyListBase(Of T).TryFindLast
  nameWithType: ReadOnlyListBase<T>.TryFindLast
  nameWithType.vb: ReadOnlyListBase(Of T).TryFindLast
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2
  name: ReadOnlyMultiDictionaryBase<TKey, TValue>
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html
  commentId: T:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2
  name.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue)
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue)
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue)
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Contains(`0,`1)
  name: Contains(TKey, TValue)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Contains__0__1_
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Contains(`0,`1)
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Contains(TKey, TValue)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Contains(TKey, TValue)
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Contains(TKey, TValue)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Contains(TKey, TValue)
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Contains(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.ICollection{`1}})
  name: Contains(KeyValuePair<TKey, ICollection<TValue>>)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Contains_System_Collections_Generic_KeyValuePair__0_System_Collections_Generic_ICollection__1___
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Contains(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.ICollection{`1}})
  name.vb: Contains(KeyValuePair(Of TKey, ICollection(Of TValue)))
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.ICollection<TValue>>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.ICollection(Of TValue)))
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Contains(KeyValuePair<TKey, ICollection<TValue>>)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Contains(KeyValuePair(Of TKey, ICollection(Of TValue)))
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Contains_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Contains
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Contains
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Contains
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Contains
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_ContainsKey__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.ContainsKey(`0)
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).ContainsKey(TKey)
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.ContainsKey*
  name: ContainsKey
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_ContainsKey_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.ContainsKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.ContainsKey
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).ContainsKey
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.ContainsKey
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).ContainsKey
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Count
  name: Count
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Count
  commentId: P:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Count
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Count
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Count
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Count*
  name: Count
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Count_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Count
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Count
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Count
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Count
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.CountAllValues
  name: CountAllValues()
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_CountAllValues
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.CountAllValues
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.CountAllValues()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).CountAllValues()
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.CountAllValues()
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).CountAllValues()
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.CountAllValues*
  name: CountAllValues
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_CountAllValues_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.CountAllValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.CountAllValues
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).CountAllValues
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.CountAllValues
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).CountAllValues
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.CountValues(`0)
  name: CountValues(TKey)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_CountValues__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.CountValues(`0)
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.CountValues(TKey)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).CountValues(TKey)
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.CountValues(TKey)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).CountValues(TKey)
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.CountValues*
  name: CountValues
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_CountValues_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.CountValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.CountValues
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).CountValues
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.CountValues
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).CountValues
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.EnumerateKeys
  name: EnumerateKeys()
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_EnumerateKeys
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.EnumerateKeys
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.EnumerateKeys()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).EnumerateKeys()
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.EnumerateKeys()
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).EnumerateKeys()
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.EnumerateKeys*
  name: EnumerateKeys
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_EnumerateKeys_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.EnumerateKeys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.EnumerateKeys
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).EnumerateKeys
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.EnumerateKeys
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).EnumerateKeys
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.EqualValues(`1,`1)
  name: EqualValues(TValue, TValue)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_EqualValues__1__1_
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.EqualValues(`1,`1)
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.EqualValues(TValue, TValue)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).EqualValues(TValue, TValue)
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.EqualValues(TValue, TValue)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).EqualValues(TValue, TValue)
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.EqualValues*
  name: EqualValues
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_EqualValues_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.EqualValues
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.EqualValues
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).EqualValues
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.EqualValues
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).EqualValues
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_GetEnumerator
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.GetEnumerator
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).GetEnumerator()
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.GetEnumerator()
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).GetEnumerator()
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).GetEnumerator
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.GetEnumerator
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).GetEnumerator
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Item(`0)
  name: Item[TKey]
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Item__0_
  commentId: P:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Item(`0)
  name.vb: Item(TKey)
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Item[TKey]
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Item(TKey)
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Item[TKey]
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Item(TKey)
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Item*
  name: Item
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Item_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Item
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Item
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Item
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Item
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Item
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Keys
  name: Keys
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Keys
  commentId: P:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Keys
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Keys
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Keys
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Keys
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Keys*
  name: Keys
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Keys_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Keys
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Keys
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Keys
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Keys
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.KeyValuePairs
  name: KeyValuePairs
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_KeyValuePairs
  commentId: P:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.KeyValuePairs
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.KeyValuePairs
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).KeyValuePairs
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.KeyValuePairs
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).KeyValuePairs
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.KeyValuePairs*
  name: KeyValuePairs
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_KeyValuePairs_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.KeyValuePairs
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.KeyValuePairs
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).KeyValuePairs
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.KeyValuePairs
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).KeyValuePairs
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Add(`0,System.Collections.Generic.ICollection{`1})
  name: IDictionary<TKey, ICollection<TValue>>.Add(TKey, ICollection<TValue>)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Add__0_System_Collections_Generic_ICollection__1__
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Add(`0,System.Collections.Generic.ICollection{`1})
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add(TKey, ICollection(Of TValue))
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Add(TKey, System.Collections.Generic.ICollection<TValue>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add(TKey, System.Collections.Generic.ICollection(Of TValue))
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Add(TKey, ICollection<TValue>)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add(TKey, ICollection(Of TValue))
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Add*
  name: IDictionary<TKey, ICollection<TValue>>.Add
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Add_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Add
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Add
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Add
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Add
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Item(`0)
  name: IDictionary<TKey, ICollection<TValue>>.Item[TKey]
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Item__0_
  commentId: P:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Item(`0)
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item(TKey)
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Item[TKey]
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item(TKey)
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Item[TKey]
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item(TKey)
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Item*
  name: IDictionary<TKey, ICollection<TValue>>.Item
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Item_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Item
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Item
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Item
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Item
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Remove(`0)
  name: IDictionary<TKey, ICollection<TValue>>.Remove(TKey)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Remove__0_
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Remove(`0)
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Remove(TKey)
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Remove(TKey)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Remove(TKey)
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Remove(TKey)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Remove(TKey)
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Remove*
  name: IDictionary<TKey, ICollection<TValue>>.Remove
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Remove_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Remove
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Remove
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Remove
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Remove
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Remove
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Remove
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#TryGetValue(`0,System.Collections.Generic.ICollection{`1}@)
  name: IDictionary<TKey, ICollection<TValue>>.TryGetValue(TKey, out ICollection<TValue>)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___TryGetValue__0_System_Collections_Generic_ICollection__1___
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#TryGetValue(`0,System.Collections.Generic.ICollection{`1}@)
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue(TKey, ByRef ICollection(Of TValue))
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.TryGetValue(TKey, out System.Collections.Generic.ICollection<TValue>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue(TKey, ByRef System.Collections.Generic.ICollection(Of TValue))
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.TryGetValue(TKey, out ICollection<TValue>)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue(TKey, ByRef ICollection(Of TValue))
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#TryGetValue*
  name: IDictionary<TKey, ICollection<TValue>>.TryGetValue
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___TryGetValue_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#TryGetValue
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.TryGetValue
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.TryGetValue
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.TryGetValue
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Values
  name: IDictionary<TKey, ICollection<TValue>>.Values
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Values
  commentId: P:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Values
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Values
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Values
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Values*
  name: IDictionary<TKey, ICollection<TValue>>.Values
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_System_Collections_Generic_IDictionary_TKey_System_Collections_Generic_ICollection_TValue___Values_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.System#Collections#Generic#IDictionary{TKey,System#Collections#Generic#ICollection{TValue}}#Values
  isSpec: "True"
  name.vb: System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.ICollection<TValue>>.Values
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.IDictionary<TKey, ICollection<TValue>>.Values
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,System.Collections.Generic.ICollection<TValue>>.Values
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.ToString
  name: ToString()
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_ToString
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.ToString
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.ToString()
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).ToString()
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.ToString()
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).ToString()
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_ToString_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.ToString
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).ToString
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.ToString
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).ToString
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name: TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_TryEnumerateValuesForKey__0_System_Collections_Generic_IEnumerator__1___
  commentId: M:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.TryEnumerateValuesForKey(`0,System.Collections.Generic.IEnumerator{`1}@)
  name.vb: TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.TryEnumerateValuesForKey(TKey, out System.Collections.Generic.IEnumerator<TValue>)
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).TryEnumerateValuesForKey(TKey, ByRef System.Collections.Generic.IEnumerator(Of TValue))
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.TryEnumerateValuesForKey(TKey, out IEnumerator<TValue>)
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).TryEnumerateValuesForKey(TKey, ByRef IEnumerator(Of TValue))
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.TryEnumerateValuesForKey*
  name: TryEnumerateValuesForKey
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_TryEnumerateValuesForKey_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.TryEnumerateValuesForKey
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.TryEnumerateValuesForKey
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).TryEnumerateValuesForKey
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.TryEnumerateValuesForKey
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).TryEnumerateValuesForKey
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Values
  name: Values
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Values
  commentId: P:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Values
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Values
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Values
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Values
- uid: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Values*
  name: Values
  href: api/Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase-2.html#Wintellect_PowerCollections_ReadOnlyMultiDictionaryBase_2_Values_
  commentId: Overload:Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase`2.Values
  isSpec: "True"
  fullName: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase<TKey, TValue>.Values
  fullName.vb: Wintellect.PowerCollections.ReadOnlyMultiDictionaryBase(Of TKey, TValue).Values
  nameWithType: ReadOnlyMultiDictionaryBase<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyMultiDictionaryBase(Of TKey, TValue).Values
- uid: Wintellect.PowerCollections.Set`1
  name: Set<T>
  href: api/Wintellect.PowerCollections.Set-1.html
  commentId: T:Wintellect.PowerCollections.Set`1
  name.vb: Set(Of T)
  fullName: Wintellect.PowerCollections.Set<T>
  fullName.vb: Wintellect.PowerCollections.Set(Of T)
  nameWithType: Set<T>
  nameWithType.vb: Set(Of T)
- uid: Wintellect.PowerCollections.Set`1.#ctor
  name: Set()
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1__ctor
  commentId: M:Wintellect.PowerCollections.Set`1.#ctor
  fullName: Wintellect.PowerCollections.Set<T>.Set()
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Set()
  nameWithType: Set<T>.Set()
  nameWithType.vb: Set(Of T).Set()
- uid: Wintellect.PowerCollections.Set`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name: Set(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1__ctor_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Set`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name.vb: Set(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.Set(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Set(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Set<T>.Set(IEnumerable<T>)
  nameWithType.vb: Set(Of T).Set(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Set`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  name: Set(IEnumerable<T>, IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1__ctor_System_Collections_Generic_IEnumerable__0__System_Collections_Generic_IEqualityComparer__0__
  commentId: M:Wintellect.PowerCollections.Set`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  name.vb: Set(IEnumerable(Of T), IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.Set(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Set(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Set<T>.Set(IEnumerable<T>, IEqualityComparer<T>)
  nameWithType.vb: Set(Of T).Set(IEnumerable(Of T), IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Set`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  name: Set(IEqualityComparer<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1__ctor_System_Collections_Generic_IEqualityComparer__0__
  commentId: M:Wintellect.PowerCollections.Set`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  name.vb: Set(IEqualityComparer(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.Set(System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Set(System.Collections.Generic.IEqualityComparer(Of T))
  nameWithType: Set<T>.Set(IEqualityComparer<T>)
  nameWithType.vb: Set(Of T).Set(IEqualityComparer(Of T))
- uid: Wintellect.PowerCollections.Set`1.#ctor*
  name: Set
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1__ctor_
  commentId: Overload:Wintellect.PowerCollections.Set`1.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Set
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Set
  nameWithType: Set<T>.Set
  nameWithType.vb: Set(Of T).Set
- uid: Wintellect.PowerCollections.Set`1.Add(`0)
  name: Add(T)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Add__0_
  commentId: M:Wintellect.PowerCollections.Set`1.Add(`0)
  fullName: Wintellect.PowerCollections.Set<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Add(T)
  nameWithType: Set<T>.Add(T)
  nameWithType.vb: Set(Of T).Add(T)
- uid: Wintellect.PowerCollections.Set`1.Add*
  name: Add
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Add_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Add
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Add
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Add
  nameWithType: Set<T>.Add
  nameWithType.vb: Set(Of T).Add
- uid: Wintellect.PowerCollections.Set`1.AddMany(System.Collections.Generic.IEnumerable{`0})
  name: AddMany(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_AddMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Set`1.AddMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: AddMany(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.AddMany(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).AddMany(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Set<T>.AddMany(IEnumerable<T>)
  nameWithType.vb: Set(Of T).AddMany(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Set`1.AddMany*
  name: AddMany
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_AddMany_
  commentId: Overload:Wintellect.PowerCollections.Set`1.AddMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.AddMany
  fullName.vb: Wintellect.PowerCollections.Set(Of T).AddMany
  nameWithType: Set<T>.AddMany
  nameWithType.vb: Set(Of T).AddMany
- uid: Wintellect.PowerCollections.Set`1.Clear
  name: Clear()
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Clear
  commentId: M:Wintellect.PowerCollections.Set`1.Clear
  fullName: Wintellect.PowerCollections.Set<T>.Clear()
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Clear()
  nameWithType: Set<T>.Clear()
  nameWithType.vb: Set(Of T).Clear()
- uid: Wintellect.PowerCollections.Set`1.Clear*
  name: Clear
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Clear_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Clear
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Clear
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Clear
  nameWithType: Set<T>.Clear
  nameWithType.vb: Set(Of T).Clear
- uid: Wintellect.PowerCollections.Set`1.Clone
  name: Clone()
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Clone
  commentId: M:Wintellect.PowerCollections.Set`1.Clone
  fullName: Wintellect.PowerCollections.Set<T>.Clone()
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Clone()
  nameWithType: Set<T>.Clone()
  nameWithType.vb: Set(Of T).Clone()
- uid: Wintellect.PowerCollections.Set`1.Clone*
  name: Clone
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Clone_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Clone
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Clone
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Clone
  nameWithType: Set<T>.Clone
  nameWithType.vb: Set(Of T).Clone
- uid: Wintellect.PowerCollections.Set`1.CloneContents
  name: CloneContents()
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_CloneContents
  commentId: M:Wintellect.PowerCollections.Set`1.CloneContents
  fullName: Wintellect.PowerCollections.Set<T>.CloneContents()
  fullName.vb: Wintellect.PowerCollections.Set(Of T).CloneContents()
  nameWithType: Set<T>.CloneContents()
  nameWithType.vb: Set(Of T).CloneContents()
- uid: Wintellect.PowerCollections.Set`1.CloneContents*
  name: CloneContents
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_CloneContents_
  commentId: Overload:Wintellect.PowerCollections.Set`1.CloneContents
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.CloneContents
  fullName.vb: Wintellect.PowerCollections.Set(Of T).CloneContents
  nameWithType: Set<T>.CloneContents
  nameWithType.vb: Set(Of T).CloneContents
- uid: Wintellect.PowerCollections.Set`1.Comparer
  name: Comparer
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Comparer
  commentId: P:Wintellect.PowerCollections.Set`1.Comparer
  fullName: Wintellect.PowerCollections.Set<T>.Comparer
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Comparer
  nameWithType: Set<T>.Comparer
  nameWithType.vb: Set(Of T).Comparer
- uid: Wintellect.PowerCollections.Set`1.Comparer*
  name: Comparer
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Comparer_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Comparer
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Comparer
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Comparer
  nameWithType: Set<T>.Comparer
  nameWithType.vb: Set(Of T).Comparer
- uid: Wintellect.PowerCollections.Set`1.Contains(`0)
  name: Contains(T)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Contains__0_
  commentId: M:Wintellect.PowerCollections.Set`1.Contains(`0)
  fullName: Wintellect.PowerCollections.Set<T>.Contains(T)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Contains(T)
  nameWithType: Set<T>.Contains(T)
  nameWithType.vb: Set(Of T).Contains(T)
- uid: Wintellect.PowerCollections.Set`1.Contains*
  name: Contains
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Contains_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Contains
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Contains
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Contains
  nameWithType: Set<T>.Contains
  nameWithType.vb: Set(Of T).Contains
- uid: Wintellect.PowerCollections.Set`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Count
  commentId: P:Wintellect.PowerCollections.Set`1.Count
  fullName: Wintellect.PowerCollections.Set<T>.Count
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Count
  nameWithType: Set<T>.Count
  nameWithType.vb: Set(Of T).Count
- uid: Wintellect.PowerCollections.Set`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Count_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Count
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Count
  nameWithType: Set<T>.Count
  nameWithType.vb: Set(Of T).Count
- uid: Wintellect.PowerCollections.Set`1.Difference(Wintellect.PowerCollections.Set{`0})
  name: Difference(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Difference_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.Difference(Wintellect.PowerCollections.Set{`0})
  name.vb: Difference(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.Difference(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Difference(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.Difference(Set<T>)
  nameWithType.vb: Set(Of T).Difference(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.Difference*
  name: Difference
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Difference_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Difference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Difference
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Difference
  nameWithType: Set<T>.Difference
  nameWithType.vb: Set(Of T).Difference
- uid: Wintellect.PowerCollections.Set`1.DifferenceWith(Wintellect.PowerCollections.Set{`0})
  name: DifferenceWith(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_DifferenceWith_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.DifferenceWith(Wintellect.PowerCollections.Set{`0})
  name.vb: DifferenceWith(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.DifferenceWith(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).DifferenceWith(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.DifferenceWith(Set<T>)
  nameWithType.vb: Set(Of T).DifferenceWith(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.DifferenceWith*
  name: DifferenceWith
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_DifferenceWith_
  commentId: Overload:Wintellect.PowerCollections.Set`1.DifferenceWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.DifferenceWith
  fullName.vb: Wintellect.PowerCollections.Set(Of T).DifferenceWith
  nameWithType: Set<T>.DifferenceWith
  nameWithType.vb: Set(Of T).DifferenceWith
- uid: Wintellect.PowerCollections.Set`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.Set`1.GetEnumerator
  fullName: Wintellect.PowerCollections.Set<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.Set(Of T).GetEnumerator()
  nameWithType: Set<T>.GetEnumerator()
  nameWithType.vb: Set(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.Set`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.Set`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.Set(Of T).GetEnumerator
  nameWithType: Set<T>.GetEnumerator
  nameWithType.vb: Set(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.Set`1.Intersection(Wintellect.PowerCollections.Set{`0})
  name: Intersection(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Intersection_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.Intersection(Wintellect.PowerCollections.Set{`0})
  name.vb: Intersection(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.Intersection(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Intersection(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.Intersection(Set<T>)
  nameWithType.vb: Set(Of T).Intersection(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.Intersection*
  name: Intersection
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Intersection_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Intersection
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Intersection
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Intersection
  nameWithType: Set<T>.Intersection
  nameWithType.vb: Set(Of T).Intersection
- uid: Wintellect.PowerCollections.Set`1.IntersectionWith(Wintellect.PowerCollections.Set{`0})
  name: IntersectionWith(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IntersectionWith_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.IntersectionWith(Wintellect.PowerCollections.Set{`0})
  name.vb: IntersectionWith(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.IntersectionWith(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IntersectionWith(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.IntersectionWith(Set<T>)
  nameWithType.vb: Set(Of T).IntersectionWith(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.IntersectionWith*
  name: IntersectionWith
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IntersectionWith_
  commentId: Overload:Wintellect.PowerCollections.Set`1.IntersectionWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.IntersectionWith
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IntersectionWith
  nameWithType: Set<T>.IntersectionWith
  nameWithType.vb: Set(Of T).IntersectionWith
- uid: Wintellect.PowerCollections.Set`1.IsDisjointFrom(Wintellect.PowerCollections.Set{`0})
  name: IsDisjointFrom(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsDisjointFrom_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.IsDisjointFrom(Wintellect.PowerCollections.Set{`0})
  name.vb: IsDisjointFrom(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.IsDisjointFrom(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsDisjointFrom(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.IsDisjointFrom(Set<T>)
  nameWithType.vb: Set(Of T).IsDisjointFrom(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.IsDisjointFrom*
  name: IsDisjointFrom
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsDisjointFrom_
  commentId: Overload:Wintellect.PowerCollections.Set`1.IsDisjointFrom
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.IsDisjointFrom
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsDisjointFrom
  nameWithType: Set<T>.IsDisjointFrom
  nameWithType.vb: Set(Of T).IsDisjointFrom
- uid: Wintellect.PowerCollections.Set`1.IsEqualTo(Wintellect.PowerCollections.Set{`0})
  name: IsEqualTo(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsEqualTo_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.IsEqualTo(Wintellect.PowerCollections.Set{`0})
  name.vb: IsEqualTo(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.IsEqualTo(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsEqualTo(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.IsEqualTo(Set<T>)
  nameWithType.vb: Set(Of T).IsEqualTo(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.IsEqualTo*
  name: IsEqualTo
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsEqualTo_
  commentId: Overload:Wintellect.PowerCollections.Set`1.IsEqualTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.IsEqualTo
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsEqualTo
  nameWithType: Set<T>.IsEqualTo
  nameWithType.vb: Set(Of T).IsEqualTo
- uid: Wintellect.PowerCollections.Set`1.IsProperSubsetOf(Wintellect.PowerCollections.Set{`0})
  name: IsProperSubsetOf(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsProperSubsetOf_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.IsProperSubsetOf(Wintellect.PowerCollections.Set{`0})
  name.vb: IsProperSubsetOf(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.IsProperSubsetOf(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsProperSubsetOf(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.IsProperSubsetOf(Set<T>)
  nameWithType.vb: Set(Of T).IsProperSubsetOf(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsProperSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.Set`1.IsProperSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.IsProperSubsetOf
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsProperSubsetOf
  nameWithType: Set<T>.IsProperSubsetOf
  nameWithType.vb: Set(Of T).IsProperSubsetOf
- uid: Wintellect.PowerCollections.Set`1.IsProperSupersetOf(Wintellect.PowerCollections.Set{`0})
  name: IsProperSupersetOf(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsProperSupersetOf_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.IsProperSupersetOf(Wintellect.PowerCollections.Set{`0})
  name.vb: IsProperSupersetOf(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.IsProperSupersetOf(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsProperSupersetOf(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.IsProperSupersetOf(Set<T>)
  nameWithType.vb: Set(Of T).IsProperSupersetOf(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsProperSupersetOf_
  commentId: Overload:Wintellect.PowerCollections.Set`1.IsProperSupersetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.IsProperSupersetOf
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsProperSupersetOf
  nameWithType: Set<T>.IsProperSupersetOf
  nameWithType.vb: Set(Of T).IsProperSupersetOf
- uid: Wintellect.PowerCollections.Set`1.IsSubsetOf(Wintellect.PowerCollections.Set{`0})
  name: IsSubsetOf(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsSubsetOf_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.IsSubsetOf(Wintellect.PowerCollections.Set{`0})
  name.vb: IsSubsetOf(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.IsSubsetOf(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsSubsetOf(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.IsSubsetOf(Set<T>)
  nameWithType.vb: Set(Of T).IsSubsetOf(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.IsSubsetOf*
  name: IsSubsetOf
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsSubsetOf_
  commentId: Overload:Wintellect.PowerCollections.Set`1.IsSubsetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.IsSubsetOf
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsSubsetOf
  nameWithType: Set<T>.IsSubsetOf
  nameWithType.vb: Set(Of T).IsSubsetOf
- uid: Wintellect.PowerCollections.Set`1.IsSupersetOf(Wintellect.PowerCollections.Set{`0})
  name: IsSupersetOf(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsSupersetOf_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.IsSupersetOf(Wintellect.PowerCollections.Set{`0})
  name.vb: IsSupersetOf(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.IsSupersetOf(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsSupersetOf(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.IsSupersetOf(Set<T>)
  nameWithType.vb: Set(Of T).IsSupersetOf(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.IsSupersetOf*
  name: IsSupersetOf
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_IsSupersetOf_
  commentId: Overload:Wintellect.PowerCollections.Set`1.IsSupersetOf
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.IsSupersetOf
  fullName.vb: Wintellect.PowerCollections.Set(Of T).IsSupersetOf
  nameWithType: Set<T>.IsSupersetOf
  nameWithType.vb: Set(Of T).IsSupersetOf
- uid: Wintellect.PowerCollections.Set`1.Remove(`0)
  name: Remove(T)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Remove__0_
  commentId: M:Wintellect.PowerCollections.Set`1.Remove(`0)
  fullName: Wintellect.PowerCollections.Set<T>.Remove(T)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Remove(T)
  nameWithType: Set<T>.Remove(T)
  nameWithType.vb: Set(Of T).Remove(T)
- uid: Wintellect.PowerCollections.Set`1.Remove*
  name: Remove
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Remove_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Remove
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Remove
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Remove
  nameWithType: Set<T>.Remove
  nameWithType.vb: Set(Of T).Remove
- uid: Wintellect.PowerCollections.Set`1.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name: RemoveMany(IEnumerable<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_RemoveMany_System_Collections_Generic_IEnumerable__0__
  commentId: M:Wintellect.PowerCollections.Set`1.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  name.vb: RemoveMany(IEnumerable(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.RemoveMany(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).RemoveMany(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Set<T>.RemoveMany(IEnumerable<T>)
  nameWithType.vb: Set(Of T).RemoveMany(IEnumerable(Of T))
- uid: Wintellect.PowerCollections.Set`1.RemoveMany*
  name: RemoveMany
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_RemoveMany_
  commentId: Overload:Wintellect.PowerCollections.Set`1.RemoveMany
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.RemoveMany
  fullName.vb: Wintellect.PowerCollections.Set(Of T).RemoveMany
  nameWithType: Set<T>.RemoveMany
  nameWithType.vb: Set(Of T).RemoveMany
- uid: Wintellect.PowerCollections.Set`1.SymmetricDifference(Wintellect.PowerCollections.Set{`0})
  name: SymmetricDifference(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_SymmetricDifference_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.SymmetricDifference(Wintellect.PowerCollections.Set{`0})
  name.vb: SymmetricDifference(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.SymmetricDifference(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).SymmetricDifference(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.SymmetricDifference(Set<T>)
  nameWithType.vb: Set(Of T).SymmetricDifference(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.SymmetricDifference*
  name: SymmetricDifference
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_SymmetricDifference_
  commentId: Overload:Wintellect.PowerCollections.Set`1.SymmetricDifference
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.SymmetricDifference
  fullName.vb: Wintellect.PowerCollections.Set(Of T).SymmetricDifference
  nameWithType: Set<T>.SymmetricDifference
  nameWithType.vb: Set(Of T).SymmetricDifference
- uid: Wintellect.PowerCollections.Set`1.SymmetricDifferenceWith(Wintellect.PowerCollections.Set{`0})
  name: SymmetricDifferenceWith(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_SymmetricDifferenceWith_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.SymmetricDifferenceWith(Wintellect.PowerCollections.Set{`0})
  name.vb: SymmetricDifferenceWith(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.SymmetricDifferenceWith(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).SymmetricDifferenceWith(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.SymmetricDifferenceWith(Set<T>)
  nameWithType.vb: Set(Of T).SymmetricDifferenceWith(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.SymmetricDifferenceWith*
  name: SymmetricDifferenceWith
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_SymmetricDifferenceWith_
  commentId: Overload:Wintellect.PowerCollections.Set`1.SymmetricDifferenceWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.SymmetricDifferenceWith
  fullName.vb: Wintellect.PowerCollections.Set(Of T).SymmetricDifferenceWith
  nameWithType: Set<T>.SymmetricDifferenceWith
  nameWithType.vb: Set(Of T).SymmetricDifferenceWith
- uid: Wintellect.PowerCollections.Set`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name: ICollection<T>.Add(T)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_System_Collections_Generic_ICollection_T__Add__0_
  commentId: M:Wintellect.PowerCollections.Set`1.System#Collections#Generic#ICollection{T}#Add(`0)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: Wintellect.PowerCollections.Set<T>.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType: Set<T>.ICollection<T>.Add(T)
  nameWithType.vb: Set(Of T).System.Collections.Generic.ICollection<T>.Add(T)
- uid: Wintellect.PowerCollections.Set`1.System#Collections#Generic#ICollection{T}#Add*
  name: ICollection<T>.Add
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_System_Collections_Generic_ICollection_T__Add_
  commentId: Overload:Wintellect.PowerCollections.Set`1.System#Collections#Generic#ICollection{T}#Add
  isSpec: "True"
  name.vb: System.Collections.Generic.ICollection<T>.Add
  fullName: Wintellect.PowerCollections.Set<T>.System.Collections.Generic.ICollection<T>.Add
  fullName.vb: Wintellect.PowerCollections.Set(Of T).System.Collections.Generic.ICollection<T>.Add
  nameWithType: Set<T>.ICollection<T>.Add
  nameWithType.vb: Set(Of T).System.Collections.Generic.ICollection<T>.Add
- uid: Wintellect.PowerCollections.Set`1.System#ICloneable#Clone
  name: ICloneable.Clone()
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_System_ICloneable_Clone
  commentId: M:Wintellect.PowerCollections.Set`1.System#ICloneable#Clone
  name.vb: System.ICloneable.Clone()
  fullName: Wintellect.PowerCollections.Set<T>.System.ICloneable.Clone()
  fullName.vb: Wintellect.PowerCollections.Set(Of T).System.ICloneable.Clone()
  nameWithType: Set<T>.ICloneable.Clone()
  nameWithType.vb: Set(Of T).System.ICloneable.Clone()
- uid: Wintellect.PowerCollections.Set`1.System#ICloneable#Clone*
  name: ICloneable.Clone
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_System_ICloneable_Clone_
  commentId: Overload:Wintellect.PowerCollections.Set`1.System#ICloneable#Clone
  isSpec: "True"
  name.vb: System.ICloneable.Clone
  fullName: Wintellect.PowerCollections.Set<T>.System.ICloneable.Clone
  fullName.vb: Wintellect.PowerCollections.Set(Of T).System.ICloneable.Clone
  nameWithType: Set<T>.ICloneable.Clone
  nameWithType.vb: Set(Of T).System.ICloneable.Clone
- uid: Wintellect.PowerCollections.Set`1.TryGetItem(`0,`0@)
  name: TryGetItem(T, out T)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_TryGetItem__0__0__
  commentId: M:Wintellect.PowerCollections.Set`1.TryGetItem(`0,`0@)
  name.vb: TryGetItem(T, ByRef T)
  fullName: Wintellect.PowerCollections.Set<T>.TryGetItem(T, out T)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).TryGetItem(T, ByRef T)
  nameWithType: Set<T>.TryGetItem(T, out T)
  nameWithType.vb: Set(Of T).TryGetItem(T, ByRef T)
- uid: Wintellect.PowerCollections.Set`1.TryGetItem*
  name: TryGetItem
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_TryGetItem_
  commentId: Overload:Wintellect.PowerCollections.Set`1.TryGetItem
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.TryGetItem
  fullName.vb: Wintellect.PowerCollections.Set(Of T).TryGetItem
  nameWithType: Set<T>.TryGetItem
  nameWithType.vb: Set(Of T).TryGetItem
- uid: Wintellect.PowerCollections.Set`1.Union(Wintellect.PowerCollections.Set{`0})
  name: Union(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Union_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.Union(Wintellect.PowerCollections.Set{`0})
  name.vb: Union(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.Union(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Union(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.Union(Set<T>)
  nameWithType.vb: Set(Of T).Union(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.Union*
  name: Union
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_Union_
  commentId: Overload:Wintellect.PowerCollections.Set`1.Union
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.Union
  fullName.vb: Wintellect.PowerCollections.Set(Of T).Union
  nameWithType: Set<T>.Union
  nameWithType.vb: Set(Of T).Union
- uid: Wintellect.PowerCollections.Set`1.UnionWith(Wintellect.PowerCollections.Set{`0})
  name: UnionWith(Set<T>)
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_UnionWith_Wintellect_PowerCollections_Set__0__
  commentId: M:Wintellect.PowerCollections.Set`1.UnionWith(Wintellect.PowerCollections.Set{`0})
  name.vb: UnionWith(Set(Of T))
  fullName: Wintellect.PowerCollections.Set<T>.UnionWith(Wintellect.PowerCollections.Set<T>)
  fullName.vb: Wintellect.PowerCollections.Set(Of T).UnionWith(Wintellect.PowerCollections.Set(Of T))
  nameWithType: Set<T>.UnionWith(Set<T>)
  nameWithType.vb: Set(Of T).UnionWith(Set(Of T))
- uid: Wintellect.PowerCollections.Set`1.UnionWith*
  name: UnionWith
  href: api/Wintellect.PowerCollections.Set-1.html#Wintellect_PowerCollections_Set_1_UnionWith_
  commentId: Overload:Wintellect.PowerCollections.Set`1.UnionWith
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Set<T>.UnionWith
  fullName.vb: Wintellect.PowerCollections.Set(Of T).UnionWith
  nameWithType: Set<T>.UnionWith
  nameWithType.vb: Set(Of T).UnionWith
- uid: Wintellect.PowerCollections.Stack`1
  name: Stack<T>
  href: api/Wintellect.PowerCollections.Stack-1.html
  commentId: T:Wintellect.PowerCollections.Stack`1
  name.vb: Stack(Of T)
  fullName: Wintellect.PowerCollections.Stack<T>
  fullName.vb: Wintellect.PowerCollections.Stack(Of T)
  nameWithType: Stack<T>
  nameWithType.vb: Stack(Of T)
- uid: Wintellect.PowerCollections.Stack`1.#ctor(System.Int32)
  name: Stack(Int32)
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1__ctor_System_Int32_
  commentId: M:Wintellect.PowerCollections.Stack`1.#ctor(System.Int32)
  fullName: Wintellect.PowerCollections.Stack<T>.Stack(System.Int32)
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Stack(System.Int32)
  nameWithType: Stack<T>.Stack(Int32)
  nameWithType.vb: Stack(Of T).Stack(Int32)
- uid: Wintellect.PowerCollections.Stack`1.#ctor*
  name: Stack
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1__ctor_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.Stack
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Stack
  nameWithType: Stack<T>.Stack
  nameWithType.vb: Stack(Of T).Stack
- uid: Wintellect.PowerCollections.Stack`1.Capacity
  name: Capacity
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Capacity
  commentId: P:Wintellect.PowerCollections.Stack`1.Capacity
  fullName: Wintellect.PowerCollections.Stack<T>.Capacity
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Capacity
  nameWithType: Stack<T>.Capacity
  nameWithType.vb: Stack(Of T).Capacity
- uid: Wintellect.PowerCollections.Stack`1.Capacity*
  name: Capacity
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Capacity_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.Capacity
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.Capacity
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Capacity
  nameWithType: Stack<T>.Capacity
  nameWithType.vb: Stack(Of T).Capacity
- uid: Wintellect.PowerCollections.Stack`1.Count
  name: Count
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Count
  commentId: P:Wintellect.PowerCollections.Stack`1.Count
  fullName: Wintellect.PowerCollections.Stack<T>.Count
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Count
  nameWithType: Stack<T>.Count
  nameWithType.vb: Stack(Of T).Count
- uid: Wintellect.PowerCollections.Stack`1.Count*
  name: Count
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Count_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.Count
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.Count
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Count
  nameWithType: Stack<T>.Count
  nameWithType.vb: Stack(Of T).Count
- uid: Wintellect.PowerCollections.Stack`1.GetEnumerator
  name: GetEnumerator()
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_GetEnumerator
  commentId: M:Wintellect.PowerCollections.Stack`1.GetEnumerator
  fullName: Wintellect.PowerCollections.Stack<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).GetEnumerator()
  nameWithType: Stack<T>.GetEnumerator()
  nameWithType.vb: Stack(Of T).GetEnumerator()
- uid: Wintellect.PowerCollections.Stack`1.GetEnumerator*
  name: GetEnumerator
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.GetEnumerator
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).GetEnumerator
  nameWithType: Stack<T>.GetEnumerator
  nameWithType.vb: Stack(Of T).GetEnumerator
- uid: Wintellect.PowerCollections.Stack`1.IsEmpty
  name: IsEmpty
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_IsEmpty
  commentId: P:Wintellect.PowerCollections.Stack`1.IsEmpty
  fullName: Wintellect.PowerCollections.Stack<T>.IsEmpty
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).IsEmpty
  nameWithType: Stack<T>.IsEmpty
  nameWithType.vb: Stack(Of T).IsEmpty
- uid: Wintellect.PowerCollections.Stack`1.IsEmpty*
  name: IsEmpty
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_IsEmpty_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.IsEmpty
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.IsEmpty
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).IsEmpty
  nameWithType: Stack<T>.IsEmpty
  nameWithType.vb: Stack(Of T).IsEmpty
- uid: Wintellect.PowerCollections.Stack`1.IsFull
  name: IsFull
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_IsFull
  commentId: P:Wintellect.PowerCollections.Stack`1.IsFull
  fullName: Wintellect.PowerCollections.Stack<T>.IsFull
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).IsFull
  nameWithType: Stack<T>.IsFull
  nameWithType.vb: Stack(Of T).IsFull
- uid: Wintellect.PowerCollections.Stack`1.IsFull*
  name: IsFull
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_IsFull_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.IsFull
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.IsFull
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).IsFull
  nameWithType: Stack<T>.IsFull
  nameWithType.vb: Stack(Of T).IsFull
- uid: Wintellect.PowerCollections.Stack`1.Pop
  name: Pop()
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Pop
  commentId: M:Wintellect.PowerCollections.Stack`1.Pop
  fullName: Wintellect.PowerCollections.Stack<T>.Pop()
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Pop()
  nameWithType: Stack<T>.Pop()
  nameWithType.vb: Stack(Of T).Pop()
- uid: Wintellect.PowerCollections.Stack`1.Pop*
  name: Pop
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Pop_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.Pop
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.Pop
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Pop
  nameWithType: Stack<T>.Pop
  nameWithType.vb: Stack(Of T).Pop
- uid: Wintellect.PowerCollections.Stack`1.Push(`0)
  name: Push(T)
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Push__0_
  commentId: M:Wintellect.PowerCollections.Stack`1.Push(`0)
  fullName: Wintellect.PowerCollections.Stack<T>.Push(T)
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Push(T)
  nameWithType: Stack<T>.Push(T)
  nameWithType.vb: Stack(Of T).Push(T)
- uid: Wintellect.PowerCollections.Stack`1.Push*
  name: Push
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Push_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.Push
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.Push
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Push
  nameWithType: Stack<T>.Push
  nameWithType.vb: Stack(Of T).Push
- uid: Wintellect.PowerCollections.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<T>.GetEnumerator()
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_System_Collections_Generic_IEnumerable_T__GetEnumerator
  commentId: M:Wintellect.PowerCollections.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName: Wintellect.PowerCollections.Stack<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType: Stack<T>.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: Stack(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
- uid: Wintellect.PowerCollections.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  name: IEnumerable<T>.GetEnumerator
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_System_Collections_Generic_IEnumerable_T__GetEnumerator_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: Wintellect.PowerCollections.Stack<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: Stack<T>.IEnumerable<T>.GetEnumerator
  nameWithType.vb: Stack(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: Wintellect.PowerCollections.Stack`1.Top
  name: Top()
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Top
  commentId: M:Wintellect.PowerCollections.Stack`1.Top
  fullName: Wintellect.PowerCollections.Stack<T>.Top()
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Top()
  nameWithType: Stack<T>.Top()
  nameWithType.vb: Stack(Of T).Top()
- uid: Wintellect.PowerCollections.Stack`1.Top*
  name: Top
  href: api/Wintellect.PowerCollections.Stack-1.html#Wintellect_PowerCollections_Stack_1_Top_
  commentId: Overload:Wintellect.PowerCollections.Stack`1.Top
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Stack<T>.Top
  fullName.vb: Wintellect.PowerCollections.Stack(Of T).Top
  nameWithType: Stack<T>.Top
  nameWithType.vb: Stack(Of T).Top
- uid: Wintellect.PowerCollections.Triple`3
  name: Triple<TFirst, TSecond, TThird>
  href: api/Wintellect.PowerCollections.Triple-3.html
  commentId: T:Wintellect.PowerCollections.Triple`3
  name.vb: Triple(Of TFirst, TSecond, TThird)
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird)
  nameWithType: Triple<TFirst, TSecond, TThird>
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird)
- uid: Wintellect.PowerCollections.Triple`3.#ctor(`0,`1,`2)
  name: Triple(TFirst, TSecond, TThird)
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3__ctor__0__1__2_
  commentId: M:Wintellect.PowerCollections.Triple`3.#ctor(`0,`1,`2)
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Triple(TFirst, TSecond, TThird)
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Triple(TFirst, TSecond, TThird)
  nameWithType: Triple<TFirst, TSecond, TThird>.Triple(TFirst, TSecond, TThird)
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Triple(TFirst, TSecond, TThird)
- uid: Wintellect.PowerCollections.Triple`3.#ctor*
  name: Triple
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3__ctor_
  commentId: Overload:Wintellect.PowerCollections.Triple`3.#ctor
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Triple
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Triple
  nameWithType: Triple<TFirst, TSecond, TThird>.Triple
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Triple
- uid: Wintellect.PowerCollections.Triple`3.CompareTo(Wintellect.PowerCollections.Triple{`0,`1,`2})
  name: CompareTo(Triple<TFirst, TSecond, TThird>)
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_CompareTo_Wintellect_PowerCollections_Triple__0__1__2__
  commentId: M:Wintellect.PowerCollections.Triple`3.CompareTo(Wintellect.PowerCollections.Triple{`0,`1,`2})
  name.vb: CompareTo(Triple(Of TFirst, TSecond, TThird))
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.CompareTo(Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>)
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).CompareTo(Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird))
  nameWithType: Triple<TFirst, TSecond, TThird>.CompareTo(Triple<TFirst, TSecond, TThird>)
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).CompareTo(Triple(Of TFirst, TSecond, TThird))
- uid: Wintellect.PowerCollections.Triple`3.CompareTo*
  name: CompareTo
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_CompareTo_
  commentId: Overload:Wintellect.PowerCollections.Triple`3.CompareTo
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.CompareTo
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).CompareTo
  nameWithType: Triple<TFirst, TSecond, TThird>.CompareTo
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).CompareTo
- uid: Wintellect.PowerCollections.Triple`3.Equals(System.Object)
  name: Equals(Object)
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_Equals_System_Object_
  commentId: M:Wintellect.PowerCollections.Triple`3.Equals(System.Object)
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Equals(System.Object)
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Equals(System.Object)
  nameWithType: Triple<TFirst, TSecond, TThird>.Equals(Object)
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Equals(Object)
- uid: Wintellect.PowerCollections.Triple`3.Equals(Wintellect.PowerCollections.Triple{`0,`1,`2})
  name: Equals(Triple<TFirst, TSecond, TThird>)
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_Equals_Wintellect_PowerCollections_Triple__0__1__2__
  commentId: M:Wintellect.PowerCollections.Triple`3.Equals(Wintellect.PowerCollections.Triple{`0,`1,`2})
  name.vb: Equals(Triple(Of TFirst, TSecond, TThird))
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Equals(Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>)
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Equals(Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird))
  nameWithType: Triple<TFirst, TSecond, TThird>.Equals(Triple<TFirst, TSecond, TThird>)
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Equals(Triple(Of TFirst, TSecond, TThird))
- uid: Wintellect.PowerCollections.Triple`3.Equals*
  name: Equals
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_Equals_
  commentId: Overload:Wintellect.PowerCollections.Triple`3.Equals
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Equals
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Equals
  nameWithType: Triple<TFirst, TSecond, TThird>.Equals
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Equals
- uid: Wintellect.PowerCollections.Triple`3.First
  name: First
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_First
  commentId: F:Wintellect.PowerCollections.Triple`3.First
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.First
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).First
  nameWithType: Triple<TFirst, TSecond, TThird>.First
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).First
- uid: Wintellect.PowerCollections.Triple`3.GetHashCode
  name: GetHashCode()
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_GetHashCode
  commentId: M:Wintellect.PowerCollections.Triple`3.GetHashCode
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.GetHashCode()
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).GetHashCode()
  nameWithType: Triple<TFirst, TSecond, TThird>.GetHashCode()
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).GetHashCode()
- uid: Wintellect.PowerCollections.Triple`3.GetHashCode*
  name: GetHashCode
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_GetHashCode_
  commentId: Overload:Wintellect.PowerCollections.Triple`3.GetHashCode
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.GetHashCode
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).GetHashCode
  nameWithType: Triple<TFirst, TSecond, TThird>.GetHashCode
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).GetHashCode
- uid: Wintellect.PowerCollections.Triple`3.op_Equality(Wintellect.PowerCollections.Triple{`0,`1,`2},Wintellect.PowerCollections.Triple{`0,`1,`2})
  name: Equality(Triple<TFirst, TSecond, TThird>, Triple<TFirst, TSecond, TThird>)
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_op_Equality_Wintellect_PowerCollections_Triple__0__1__2__Wintellect_PowerCollections_Triple__0__1__2__
  commentId: M:Wintellect.PowerCollections.Triple`3.op_Equality(Wintellect.PowerCollections.Triple{`0,`1,`2},Wintellect.PowerCollections.Triple{`0,`1,`2})
  name.vb: Equality(Triple(Of TFirst, TSecond, TThird), Triple(Of TFirst, TSecond, TThird))
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Equality(Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>, Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>)
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Equality(Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird), Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird))
  nameWithType: Triple<TFirst, TSecond, TThird>.Equality(Triple<TFirst, TSecond, TThird>, Triple<TFirst, TSecond, TThird>)
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Equality(Triple(Of TFirst, TSecond, TThird), Triple(Of TFirst, TSecond, TThird))
- uid: Wintellect.PowerCollections.Triple`3.op_Equality*
  name: Equality
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_op_Equality_
  commentId: Overload:Wintellect.PowerCollections.Triple`3.op_Equality
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Equality
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Equality
  nameWithType: Triple<TFirst, TSecond, TThird>.Equality
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Equality
- uid: Wintellect.PowerCollections.Triple`3.op_Inequality(Wintellect.PowerCollections.Triple{`0,`1,`2},Wintellect.PowerCollections.Triple{`0,`1,`2})
  name: Inequality(Triple<TFirst, TSecond, TThird>, Triple<TFirst, TSecond, TThird>)
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_op_Inequality_Wintellect_PowerCollections_Triple__0__1__2__Wintellect_PowerCollections_Triple__0__1__2__
  commentId: M:Wintellect.PowerCollections.Triple`3.op_Inequality(Wintellect.PowerCollections.Triple{`0,`1,`2},Wintellect.PowerCollections.Triple{`0,`1,`2})
  name.vb: Inequality(Triple(Of TFirst, TSecond, TThird), Triple(Of TFirst, TSecond, TThird))
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Inequality(Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>, Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>)
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Inequality(Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird), Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird))
  nameWithType: Triple<TFirst, TSecond, TThird>.Inequality(Triple<TFirst, TSecond, TThird>, Triple<TFirst, TSecond, TThird>)
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Inequality(Triple(Of TFirst, TSecond, TThird), Triple(Of TFirst, TSecond, TThird))
- uid: Wintellect.PowerCollections.Triple`3.op_Inequality*
  name: Inequality
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_op_Inequality_
  commentId: Overload:Wintellect.PowerCollections.Triple`3.op_Inequality
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Inequality
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Inequality
  nameWithType: Triple<TFirst, TSecond, TThird>.Inequality
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Inequality
- uid: Wintellect.PowerCollections.Triple`3.Second
  name: Second
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_Second
  commentId: F:Wintellect.PowerCollections.Triple`3.Second
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Second
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Second
  nameWithType: Triple<TFirst, TSecond, TThird>.Second
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Second
- uid: Wintellect.PowerCollections.Triple`3.System#IComparable#CompareTo(System.Object)
  name: IComparable.CompareTo(Object)
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_System_IComparable_CompareTo_System_Object_
  commentId: M:Wintellect.PowerCollections.Triple`3.System#IComparable#CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.System.IComparable.CompareTo(System.Object)
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).System.IComparable.CompareTo(System.Object)
  nameWithType: Triple<TFirst, TSecond, TThird>.IComparable.CompareTo(Object)
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).System.IComparable.CompareTo(Object)
- uid: Wintellect.PowerCollections.Triple`3.System#IComparable#CompareTo*
  name: IComparable.CompareTo
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_System_IComparable_CompareTo_
  commentId: Overload:Wintellect.PowerCollections.Triple`3.System#IComparable#CompareTo
  isSpec: "True"
  name.vb: System.IComparable.CompareTo
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.System.IComparable.CompareTo
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).System.IComparable.CompareTo
  nameWithType: Triple<TFirst, TSecond, TThird>.IComparable.CompareTo
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).System.IComparable.CompareTo
- uid: Wintellect.PowerCollections.Triple`3.Third
  name: Third
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_Third
  commentId: F:Wintellect.PowerCollections.Triple`3.Third
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.Third
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).Third
  nameWithType: Triple<TFirst, TSecond, TThird>.Third
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).Third
- uid: Wintellect.PowerCollections.Triple`3.ToString
  name: ToString()
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_ToString
  commentId: M:Wintellect.PowerCollections.Triple`3.ToString
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.ToString()
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).ToString()
  nameWithType: Triple<TFirst, TSecond, TThird>.ToString()
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).ToString()
- uid: Wintellect.PowerCollections.Triple`3.ToString*
  name: ToString
  href: api/Wintellect.PowerCollections.Triple-3.html#Wintellect_PowerCollections_Triple_3_ToString_
  commentId: Overload:Wintellect.PowerCollections.Triple`3.ToString
  isSpec: "True"
  fullName: Wintellect.PowerCollections.Triple<TFirst, TSecond, TThird>.ToString
  fullName.vb: Wintellect.PowerCollections.Triple(Of TFirst, TSecond, TThird).ToString
  nameWithType: Triple<TFirst, TSecond, TThird>.ToString
  nameWithType.vb: Triple(Of TFirst, TSecond, TThird).ToString
